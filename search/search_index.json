{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"\u9879\u76ee\u5f00\u53d1\u4e2d\u3002\u3002\u3002 <p><code>\u9879\u76ee\u5b98\u7f51</code> : <code>https://embeddedboys.github.io/NINJAR-lite</code></p> <p><code>\u6587\u6863\u94fe\u63a5</code> : <code>https://embeddedboys.github.io/NINJAR-lite</code></p> <p><code>\u9879\u76ee\u4ed3\u5e93</code> : <code>https://github.com/emmbeddedboys/NINJAR-lite</code></p> <p></p> <p>\u4e3a\u81ea\u5df1\u5236\u4f5c\u4e00\u4e2a\u5fae\u578b Linux \u63a7\u5236\u53f0</p> \u9884\u5b9a \u4ecb\u7ecd <p>NINJAR (NINJAR Is Not Just A Reader) \u4f5c\u4e3a\u9605\u8bfb\u5668\uff0c\u4f46\u4e0d\u6b62\u4e8e\u6b64 </p> \u9686\u91cd\u7684\u5411\u5927\u5bb6\u4ecb\u7ecd NINJAR-lite  \u00a0\u00a0\u00a0\u00a0NINJAR-lite \u662f NINJAR \u9879\u76ee\u7684\u6210\u672c\u7f29\u51cf\uff08\u7cbe\u7b80\uff09\u7248\u672c\uff0c\u672c\u9879\u76ee\u81f4\u529b\u4e8e\u6253\u9020\u4e00\u6b3e\u767e\u5143\u4ee5\u5185\uff0869\uff1f 79\uff1f\uff09\u7684\u591a\u529f\u80fd\u5d4c\u5165\u5f0f Linux \u5b66\u4e60\u3001\u5f00\u53d1\u3001\u521b\u4f5c\u8bbe\u5907\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u8bbe\u5907\u7684\u5f62\u6001\uff0c\u6211\u4eec\u5176\u5b9e\u6ca1\u6709\u51c6\u786e\u7684\u5b9a\u4e49\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u60f3\u6cd5\u3002\u6b63\u5982\u6f14\u793a\u4e2d\u7684\u90a3\u6837\uff0c\u901a\u8fc7\u5916\u63a5\u65e0\u7ebf\u952e\u76d8\uff0c\u5b83\u53ef\u4ee5\u5f53\u4f5c\u4e00\u53f0\u8ff7\u4f60\u7ec8\u7aef\u6765\u4f7f\u7528\u3002\u901a\u8fc7\u5f00\u6e90\u7684\u7684\u8bbe\u8ba1\u8d44\u6599\uff0c\u8fd9\u4e2a\u8bbe\u5907\u7684\u5f62\u6001\u53ef\u4ee5\u88ab\u91cd\u65b0\u5b9a\u4e49\uff0c\u8fd9\u5f97\u76ca\u4e8e\u6a21\u5757\u5316\u7684\u8bbe\u8ba1  <p>\u8fd9\u4e2a\u9879\u76ee\u6b63\u5904\u4e8e\u5f00\u53d1\u9636\u6bb5\uff0c\u6211\u4eec\u6b63\u5728\u5c1d\u8bd5\u52a0\u5165\u66f4\u591a\u7684\u521b\u5ba2\u529f\u80fd</p>"},{"location":"#_1","title":"\u8bbe\u8ba1\u4e3b\u677f\u6838\u5fc3\u677f\u5c4f\u5e55","text":"<p>NINJAR-lite \u63d0\u4f9b\u4e86\u8bb8\u591a\u529f\u80fd\u5728\u4ec5\u4ec535x43mm\u7684\u5c3a\u5bf8\u4e0a</p> <ul> <li> USB OTG </li> <li> \u7528\u6237\u6309\u952e </li> <li> 450mAh \u9502\u7535\u6c60</li> <li> \u6eda\u8f6e\u65cb\u8f6c\u7f16\u7801\u5668 </li> <li> ESP8089 WIFI\u6a21\u7ec4</li> <li> TP4056 \u5145\u7535\u7ba1\u7406IC</li> <li> AHT20 \u6e29\u6e7f\u5ea6\u4f20\u611f\u5668 </li> <li> \u6700\u5927256MB SPI NAND </li> <li> \u652f\u6301\u6807\u51c68Pin 3-wire SPI \u663e\u793a\u5c4f </li> </ul> <ul> <li> F1C100s/F1C200s ARM9 @900MHz </li> <li> SIP 32/64MB DDR1 </li> <li> IO \u7ba1\u811a\u5168\u90e8\u5f15\u51fa </li> <li> \u5206\u7acbDC-DC\u4f9b\u7535 </li> <li> 5V \u8f93\u5165 </li> </ul> <ul> <li> OLED </li> <li> 16\u7070\u9636 </li> <li> \u9ad8\u5bf9\u6bd4\u5ea6 </li> <li> SSD1327\u4e3b\u63a7 </li> <li> uboot\u3001linux\u9a71\u52a8\u652f\u6301 </li> </ul>"},{"location":"#_2","title":"\u5b9e\u673a\u6f14\u793a","text":"<p><p>\u5668\u4ef6\u4ee5\u5b9e\u7269\u4e3a\u51c6</p></p>"},{"location":"#_3","title":"\u6280\u672f\u89c4\u683c","text":"\u7ec4\u4ef6 \u578b\u53f7 \u7cfb\u7edf linux\u3001Debian 12 CPU Allwinner F1C100s/F1C200s ARM9 @900MHz \u5185\u5b58 32/64MB DDR1 256MHz \u5b58\u50a8 128/256MB SPI-Nand Flash \u5c4f\u5e55 1.28\u82f1\u5bf8 16\u7070\u9636 OLED 128x128 \u7f51\u7edc ESP8089/RTL8723BS 2.4G WiFi AP (\u9009\u914d) \u5b9a\u4f4d GP-02 GPS/BDS \u6a21\u7ec4 \uff08\u9009\u914d\uff09 \u63a7\u5236 \u62e8\u8f6e\u7f16\u7801\u5668\u3001\u6309\u952e \u4f20\u611f\u5668 AHT20 \u6e29\u6e7f\u5ea6\u4f20\u611f\u5668 \u7535\u6c60 450mAh \u5145\u653e\u7535 TP4056 + MOSFET \u63a5\u53e3 2x5 Pin Header with I2C1,I2S, SH1.0mm 4Pin I2C0, USB 2.0 OTG"},{"location":"#_4","title":"\u8bb8\u53ef\u8bc1","text":"<p>\u6b64\u9879\u76ee\u53d1\u5e03\u4e8e<code>MIT</code>\u8bb8\u53ef\u8bc1\u4e0b\uff0c\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b<code>\u5173\u4e8e-&gt;\u8bb8\u53ef\u8bc1</code></p>"},{"location":"#_5","title":"\u81f4\u8c22     embeddedboys \u732e\u4e0a","text":"<p> \u73a9\u5f97\u5f00\u5fc3\uff01 \u5e72\u676f, zheng  </p>"},{"location":"about/","title":"About","text":"301 Moved Permanently 301 Moved Permanently nginx/1.14.2"},{"location":"credits/","title":"CREDITS","text":"<p>list of developers have contributed to this project</p>"},{"location":"default/","title":"\u5f85\u6dfb\u52a0","text":""},{"location":"dev/","title":"\u5f00\u53d1\u8bb0\u5f55","text":""},{"location":"dev/#_2","title":"\u7ed3\u6784\u8bbe\u8ba1\u7bc7","text":""},{"location":"dev/#_3","title":"\u8f6f\u4ef6\u7bc7","text":""},{"location":"dev/#ninjar-lite-daemon","title":"ninjar-lite-daemon \u4e1a\u52a1\u903b\u8f91","text":"<p>\u68c0\u6d4bUSB\u70ed\u63d2\u62d4</p> <p>\u5207\u6362OTG\u529f\u80fd</p> <p>\u5411\u5916\u66b4\u9732WEB\u914d\u7f6e\u9875\u9762</p> <p>\u8bbe\u7f6e\u7cfb\u7edf\u3001\u5185\u6838\u5c42\u914d\u7f6e</p>"},{"location":"dev/#ninjar-lite-app","title":"ninjar-lite-app \u4e1a\u52a1\u903b\u8f91","text":"<p>\u4f5c\u4e3a\u524d\u53f0\u5e94\u7528\u8fd0\u884c\uff0c\u53ea\u5904\u7406\u4e1a\u52a1\uff0c\u8f6f\u4ef6\u5f62\u6001\u6682\u672a\u5b9a\u4e49</p>"},{"location":"dev/#ninjar-lite-app_1","title":"ninjar-lite-app\u51c6\u5907\u5de5\u4f5c","text":"<p>\u79fb\u690dlvgl\u3001\u8f93\u5165</p> <p>\u79fb\u690dinitcall</p> <p>\u79fb\u690dlwan, \u5931\u8d25\u4e86\uff0c\u5b8c\u5168\u4e0d\u77e5\u9053\u5e94\u8be5\u600e\u4e48\u5355\u72ec\u62ff\u51fa\u6765\u7f16\u8bd1</p> <p>\u9009\u62e9\u5e76\u79fb\u690d\u4e00\u4e2a\u4f18\u79c0log\u5e93</p> <p>\u505a\u5230\u8fd9\u90e8\u5206\u7684\u65f6\u5019\uff0c\u518d\u8003\u8651\u6362Rust\u5199app\uff0c\u56e0\u4e3a\u671f\u95f4\u4e86\u89e3\u4e86\u53e6\u5916\u4e00\u4e2a \u975e\u5e38\u4f18\u79c0\u7684gui\u6846\u67b6 slint\uff0c\u540c\u65f6\u8fd9\u4e5f\u662f\u4e2a\u5b66\u4e60Rust\u7684\u6781\u597d\u673a\u4f1a</p>"},{"location":"dev/#debian","title":"\u79fb\u690ddebian","text":"<p>\u5c1d\u8bd5\u4e86\u6700\u65b0\u76843\u4e2a\u7248\u672cdebian\uff0c\u5373\u4f7f\u6700\u8001\u7684\u73b0\u884c\u7248\u672c\uff0c\u5728\u521d\u59cb\u5316\u5b89\u88c5\u540e\uff0c\u6587\u4ef6\u7cfb\u7edf\u7684\u5927\u5c0f\u4e5f\u6709\u5c06\u8fd1200MB \u6240\u4ee5\u9700\u8981\u81f3\u5c11256MB Nand\u624d\u80fd\u653e\u4e0b\uff0c\u611f\u89c9\u6709\u70b9\u5f97\u4e0d\u507f\u5931\u4e86</p>"},{"location":"dev/#emdebian","title":"\u79fb\u690demdebian","text":"<p>\u5c1d\u8bd5\u79fb\u690d\u4e86\u4e0b\uff0c\u5927\u5c0f\u5728100MB\u5de6\u53f3\uff0c\u8fd9\u4e2a\u4f5c\u4e3a\u4e00\u4e2a\u5907\u9009\u65b9\u6848</p>"},{"location":"dev/#slint","title":"\u79fb\u690dslint","text":""},{"location":"dev/#pcb","title":"PCB\u8bbe\u8ba1\u7bc7","text":""},{"location":"dev/#pcb_1","title":"\u7b2c\u4e09\u7248PCB\u9700\u6c42","text":"<p>\u6838\u5fc3\u677f\u56fa\u5b9a\u87ba\u6bcd\u4f4d\u7f6e\u8c03\u6574</p> <p>\u7528\u6237\u6309\u952e\u9ed8\u8ba4\u4e0a\u62c9</p> <p>WIFI\u6a21\u7ec4\u9ed8\u8ba4\u5173\u95ed</p> <p>\u7ebf\u8def\u3001\u94fa\u94dc\u4f18\u5316</p>"},{"location":"dev/#_4","title":"\u8bbe\u8ba1\u81ea\u5df1\u7684\u5c4f\u5e55\u677f","text":""},{"location":"dev/#_5","title":"\u5916\u56f4\u6a21\u5757\u8bbe\u8ba1\u2014\u2014\u6d41\u6c34\u706f","text":""},{"location":"dev/#_6","title":"\u670d\u52a1\u5c42\u9002\u914d\u7bc7","text":""},{"location":"dev/#gpsd","title":"\u52a0\u5165gpsd\u652f\u6301","text":""},{"location":"dev/#pps-chrony","title":"\u901a\u8fc7\u5185\u6838pps\u9a71\u52a8 \u548c chrony \u670d\u52a1\u5b9e\u73b0\u65f6\u95f4\u540c\u6b65","text":""},{"location":"dev/#_7","title":"\u5e95\u5c42\u9002\u914d\u7bc7","text":""},{"location":"dev/#2023712","title":"\u7f16\u7801\u5668\u529f\u80fd\u6d4b\u8bd5 2023/7/12","text":"<p>\u5728\u7b49\u65b0\u677f\u5b50 2023/6/23</p> <p>\u7528\u7684\u5185\u6838\u7f16\u7801\u5668\u9a71\u52a8\uff0c\u6b63\u53cd\u8f6c\u90fd\u80fd\u8bc6\u522b 2023/7/8</p>"},{"location":"dev/#_8","title":"\u7528\u6237\u6309\u952e\u7684\u6d4b\u8bd5","text":"<p>2023/7/10 \u7528\u6237\u6309\u952e\u5e94\u8be5\u7ed9\u4e2a\u9ed8\u8ba4\u72b6\u6001\uff0c\u6bd4\u5982\u4e0a\u62c9\uff0c\u4e0b\u4e00\u7248pcb\u4fee\u6539</p>"},{"location":"dev/#nfs-202375","title":"\u9a8c\u8bc1NFS\u6587\u4ef6\u7cfb\u7edf\u53ef\u884c\u6027 2023/7/5","text":""},{"location":"dev/#gps-202373","title":"\u89e3\u51b3\u5f00\u53d1\u677f\u4e0agps\u6a21\u5757\u7684\u95ee\u9898 2023/7/3","text":"<p>\u710a\u63a5\u95ee\u9898\uff0c\u53e6\u5916\u786e\u5b9aGPS_EN\u662f\u5426\u9700\u8981\u5916\u90e8\u4e0a\u62c9</p>"},{"location":"dev/#usbvbusregulator","title":"usb\u4e3b\u673a\u6a21\u5f0f\uff0cvbus\u4e3b\u52a8\u4f9b\u7535\uff0c\u5185\u6838regulator\u9a71\u52a8","text":""},{"location":"dev/#suniv-epd638-202371","title":"suniv-epd\u9a71\u52a8\u57286.3.8\u5185\u6838\u4e0a\u7684\u7f16\u8bd1 2023/7/1","text":"<p>\u9700\u8981\u4fdd\u8bc1\u5185\u6838fb\u76f8\u5173\u5185\u5bb9\u5f00\u542f</p> <p>\u53e6\u5916\uff0c6.x\u7248\u672c\u7684\u5185\u6838\uff0c\u5bf9\u4e8egpio flag\u7684\u83b7\u53d6\u6709\u4e86\u53d8\u5316\uff0c\u5bf9\u63a5\u53e3\u8fdb\u884c\u4e86\u66f4\u65b0\u3002</p>"},{"location":"dev/#gps","title":"\u6d4b\u8bd5gps\u6a21\u7ec4\u529f\u80fd","text":"<p>\u53ef\u901a\u8fc7\u6807\u51c6tty\u8bbe\u5907\u8bfb\u53d6gps\u6a21\u5757\u4e0a\u62a5\u5185\u5bb9</p> <p>\u9a8c\u8bc1GPS_EN\u811a\u529f\u80fd\uff0c\u8fd0\u884c\u65f6\u72b6\u6001\u5207\u6362\u3002</p> <p>GPS_PPS\u5f15\u811a\u8109\u51b2\u8f93\u51fa\u9a8c\u8bc1</p> <pre><code>2023/6/22 \u9a8c\u8bc1\u4e86\u4ecettyS2\u8bfb\u53d6\u62a5\u6587\n# cat /dev/ttyS2 \n$GNGGA,,,,,,0,00,25.5,,,,,,*64\n\n$GNGLL,,,,,,V,N*7A\n\n$GNGSA,A,1,,,,,,,,,,,,,25.5,25.5,25.5,1*01\n\n$GNGSA,A,1,,,,,,,,,,,,,25.5,25.5,25.5,4*04\n\n$GPGSV,1,1,00,0*65\n\n$BDGSV,1,1,00,0*74\n\n$GNRMC,,V,,,,,,,,,,N,V*37\n\n$GNVTG,,,,,,,,,N*2E\n\n$GNZDA,,,,,,*56\n\n$GPTXT,01,01,01,ANTENNA OK*35\n</code></pre>"},{"location":"dev/#64yaffs2","title":"6.4\u5185\u6838\u9002\u914dyaffs2\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5934\u5927\u554a\uff0c\u5185\u6838\u6253\u4e86yaffs2\u7684\u8865\u4e01\uff0c\u7f16\u8bd1\u4e00\u5806\u62a5\u9519\uff0c\u770b\u8d77\u6765\u662f\u65b0\u7248\u5185\u6838vfs\u63a5\u53e3\u6539\u4e86\uff0c\u5e94\u8be5\u4e0d\u4f1a\u5f88\u96be\u641e\u5427\u3002</p> <p>\u653e\u5f03\u7528yaffs2\u4e86\uff0c\u7528ubifs\u5e94\u8be5\u66f4\u5408\u9002</p>"},{"location":"dev/#usb","title":"\u6d4b\u8bd5USB\u7f51\u7edc\u7a33\u5b9a\u6027","text":"<pre><code>2023/6/22 \u5bf9usb0\u914d\u7f6eip\u65f6\uff0c\u6ce8\u610f\u7f51\u5173\u4e0d\u80fd\u4e0e\u73b0\u6709\u7f51\u7edc\u5185\u51b2\u7a81\n64 bytes from 192.168.25.101: seq=485 ttl=64 time=0.504 ms\n64 bytes from 192.168.25.101: seq=486 ttl=64 time=0.496 ms\n64 bytes from 192.168.25.101: seq=487 ttl=64 time=0.513 ms\n64 bytes from 192.168.25.101: seq=488 ttl=64 time=0.509 ms\n64 bytes from 192.168.25.101: seq=489 ttl=64 time=0.527 ms\n64 bytes from 192.168.25.101: seq=490 ttl=64 time=0.511 ms\n64 bytes from 192.168.25.101: seq=491 ttl=64 time=0.512 ms\n</code></pre>"},{"location":"dev/#a31-i2c","title":"\u6d4b\u8bd5A31 I2C\u9a71\u52a8\u53ef\u884c\u6027","text":""},{"location":"dev/#_9","title":"\u663e\u793a\u5c4f\u76f8\u5173\u7684\u6b65\u9aa4","text":"<p>\u901a\u8fc7\u8c03\u8282\u5bf9\u6bd4\u5ea6\u7684\u65b9\u5f0f\uff0c\u6a21\u62df\u4eae\u5ea6</p> <p>\u9002\u914d\u65b0\u7248\u5185\u6838 fb_deferred_io</p> <pre><code>2023/6/22 \u53ef\u901a\u8fc7\u5411 /sys/devices/platform/soc/1c06000.spi/spi_master/spi1/spi1.0/gamma \u8282\u70b9\u4e2d\u5199\u51650~255\u6765\u8c03\u8282\u4eae\u5ea6\uff0c\u503c\u8d8a\u5927\u8d8a\u4eae\n\n2023/7/1 \u663e\u793a\u5c4fok\uff0c\u65b0\u7248\u5185\u6838fb\u6539\u4e86\u4e9b\u4e1c\u897f\uff0c\u6211\u6682\u65f6\u7528\u5168\u5237\u65b9\u5f0f\n</code></pre>"},{"location":"dev/#_10","title":"\u6d4b\u8bd5\u5176\u4ed6\u5c4f\u5e55\u7684\u53ef\u884c\u6027","text":"<ul> <li>1.3 128x160 st7789v</li> <li>1.54 200x200 ssd1681 e-ink</li> <li>1.44 128x128 st7735s</li> <li>1.54 240x240 st7789v</li> </ul> <p>\u53ea\u662f\u4e3a\u4e86\u786e\u4fdd\u66ff\u4ee3\u6599\u7684\u591a\u6837\u6027</p>"},{"location":"dev/#led-2023628","title":"\u7528\u6237led\u7684\u6d4b\u8bd5 2023/6/28","text":"<p>\u76ee\u524d\u901a\u8fc7\u5185\u6838led\u5b50\u7cfb\u7edf\u7684trigger\u529f\u80fd\uff0c\u5c06led\u914d\u7f6e\u4e3aheartbeat\uff0c\u4e5f\u53ef\u914d\u7f6e\u4e3a\u5176\u4ed6trigger\uff0c\u4f8b\u5982\u4e0eMTD\u6d3b\u52a8\u8054\u7cfb\u8d77\u6765\u3002</p>"},{"location":"dev/#nand-flash-2023627","title":"\u6d4b\u8bd5nand flash\u7a33\u5b9a\u6027\u53ca\u6027\u80fd 2023/6/27","text":"<pre><code>[ 7416.602565] =================================================\n[ 7416.608455] mtd_speedtest: MTD device: 0\n[ 7416.612407] mtd_speedtest: MTD device size 134217728, eraseblock size 131072, page size 2048, 4\n[ 7416.634567] mtd_test: scanning for bad eraseblocks\n[ 7416.900006] mtd_test: scanned 1024 eraseblocks, 0 are bad\n[ 7417.664480] mtd_speedtest: testing eraseblock write speed\n[ 7483.805228] mtd_speedtest: eraseblock write speed is 1981 KiB/s\n[ 7483.811206] mtd_speedtest: testing eraseblock read speed\n[ 7524.260132] mtd_speedtest: eraseblock read speed is 3240 KiB/s\n[ 7525.113086] mtd_speedtest: testing page write speed\n[ 7592.136201] mtd_speedtest: page write speed is 1955 KiB/s\n[ 7592.141661] mtd_speedtest: testing page read speed\n[ 7633.098185] mtd_speedtest: page read speed is 3200 KiB/s\n[ 7633.953253] mtd_speedtest: testing 2 page write speed\n\n [ 7700.336261] mtd_speedtest: 2 page write speed is 1974 KiB/s\n[ 7700.341892] mtd_speedtest: testing 2 page read speed\n[ 7741.086483] mtd_speedtest: 2 page read speed is 3217 KiB/s\n[ 7741.092029] mtd_speedtest: Testing erase speed\n[ 7741.950513] mtd_speedtest: erase speed is 153493 KiB/s\n[ 7741.955782] mtd_speedtest: Testing 2x multi-block erase speed\n[ 7742.703943] mtd_speedtest: 2x multi-block erase speed is 176553 KiB/s\n[ 7742.710515] mtd_speedtest: Testing 4x multi-block erase speed\n[ 7743.455312] mtd_speedtest: 4x multi-block erase speed is 177382 KiB/s\n[ 7743.461816] mtd_speedtest: Testing 8x multi-block erase speed\n[ 7744.210430] mtd_speedtest: 8x multi-block erase speed is 176466 KiB/s\n[ 7744.216999] mtd_speedtest: Testing 16x multi-block erase speed\n[ 7744.970171] mtd_speedtest: 16x multi-block erase speed is 175389 KiB/s\n[ 7744.976827] mtd_speedtest: Testing 32x multi-block erase speed\n[ 7745.725682] mtd_speedtest: 32x multi-block erase speed is 176408 KiB/s\n[ 7745.732270] mtd_speedtest: Testing 64x multi-block erase speed\n[ 7746.482609] mtd_speedtest: 64x multi-block erase speed is 176083 KiB/s\n[ 7746.489282] mtd_speedtest: finished\n[ 7746.492824] =================================================\n</code></pre>"},{"location":"dev/#spi-nand-2023627","title":"\u89e3\u51b3 spi nand \u6587\u4ef6\u7cfb\u7edf\u95ee\u9898 2023/6/27","text":""},{"location":"dev/#uboot-splspi-nand-2023624","title":"\u7ed9uboot spl\u6dfb\u52a0\u4ecespi nand\u542f\u52a8\u7684\u529f\u80fd 2023/6/24","text":""},{"location":"dev/#spi-nanduboot-2023622","title":"\u91cd\u505a\u4e00\u4efd\u4ecespi nand\u542f\u52a8\u7684uboot\u3001\u5185\u6838\u3001\u6587\u4ef6\u7cfb\u7edf 2023/6/22","text":"<p>uboot\u53ef\u4ee5\u5148\u7528\u5185\u5b58\u542f\u52a8\u90a3\u4e2a\uff0c\u53ef\u4ee5\u5feb\u901f\u6d4b\u8bd5\u5185\u6838\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u5efa\u8bae\u5728f1c200s\u4e0a\u6d4b\u8bd5\uff0c\u4e0d\u5bb9\u6613\u7206\u5185\u5b58\u3002</p> <p>2023/6/21 uboot\u5df2\u7ecf\u80fd\u591f\u8bc6\u522bspi nand\uff0c\u5e76\u4e14\u80fd\u901a\u8fc7mtd\u547d\u4ee4\u64cd\u4f5cnand</p> <p>2023/6/22 \u5bf9\u6838\u5fc3\u3001\u5185\u5b58\u9891\u7387\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u6838\u5fc3\u9891\u7387\u6700\u9ad8\u53ea\u80fd\u8dd1\u5230700MHz\u5de6\u53f3\uff0c\u5185\u5b58\u9891\u7387\u6682\u65f6\u8fd0\u884c\u5728256MHz</p> <p>2023/6/22 \u91cd\u65b0\u914d\u7f6e\u5185\u6838\uff0c\u52a0\u5165\u7f51\u7edc\u7b49\u652f\u6301</p> <p>2023/6/26 \u6700\u65b0\u4fee\u6539\u7684uboot\uff0c\u5404\u9879\u53c2\u6570\u770b\u8d77\u6765\u90fd\u6b63\u5e38\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u8981\u542f\u52a8\u5b8c\u6574uboot <pre><code>U-Boot SPL 2023.07-rc4-ninjar-lite-gcd863354e5-dirty (Jun 25 2023 - 11:49:37 -0400)\nDRAM: 64 MiB\nsize=18, ptr=18, limit=100000: 81d00000\n==== boot source from BROM: 0xe1a00000\nTrying to boot from sunxi SPI\nimage magic : 0x56190527\nimage hcrc : 0x3e801d26\nimage name : U-Boot 2023.07-rc4-ninjar-lite-g \nspl_parse_legacy_header\npayload image: U-Boot 2023.07-rc4-ninjar-lite-g  load addr: 0x81700000 size: 415592\nu-boot name : U-Boot 2023.07-rc4-ninjar-lite-g \n         load addr : 0x81700000\n             entry : 0x81700000\n         load offt : 0x80000\n              size : 0x65768\n&gt;&gt;&gt; spl_image-&gt;boot_device = 0x8\n</code></pre></p>"},{"location":"dev/#_11","title":"\u7535\u6e90\u7ba1\u7406","text":""},{"location":"dev/#ota","title":"OTA\u5347\u7ea7","text":""},{"location":"dev/#recovery","title":"recovery\u6a21\u5f0f","text":"<p>\u7ed9recovery\u5185\u6838\u5355\u72ec\u641e\u4e00\u4e2a\u5206\u533a\uff0c\u5f00\u673a\u8fc7\u7a0b\u68c0\u6d4b\u5230\u7528\u6237\u6309\u952e\u5904\u4e8e\u6309\u4e0b\u72b6\u6001\uff0c\u8fdb\u5165recovery\u6a21\u5f0f</p>"},{"location":"dev/#yocto","title":"Yocto\u5de5\u7a0b\u642d\u5efa","text":""},{"location":"license/","title":"The MIT License","text":"<p>Copyright (c) 2023 embeddedboys(writeforever@foxmail.com)</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"thanks/","title":"\u81f4\u8c22","text":""},{"location":"thanks/#_1","title":"\u81f4\u8c22","text":""},{"location":"getting-started/","title":"\u5feb\u901f\u4e0a\u624b","text":""},{"location":"getting-started/#_2","title":"\u4ecb\u7ecd","text":"<p>\u9ed8\u8ba4\u53d1\u8d27\u914d\u7f6e\uff1a</p> <ul> <li>\u5b89\u88c5\u5de5\u5177\u5305 x 1</li> <li>\u5916\u58f3\u5957\u4ef6 x 1</li> <li>\u5e95\u677f x 1</li> <li>\u6838\u5fc3\u677f x 1</li> <li>OLED \u5c4f\u5e55 x 1</li> <li>450 mAh \u9502\u7535\u6c60 x 1</li> </ul> <p>\u53ef\u9009\u8d2d\u914d\u4ef6\uff1a</p> <ul> <li>USB\u8f6c\u4e32\u53e3\u6a21\u5757</li> </ul> <p>\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u51c6\u5907\u7684\u914d\u4ef6\uff1a</p> <ul> <li>USB\u8f6c\u4e32\u53e3\u6a21\u5757</li> <li>USB Type-C \u6570\u636e\u7ebf x 1</li> <li>USB Type-C OTG\u8f6c\u63a5\u5934 x 1</li> <li>\u952e\u76d8\u3001\u9f20\u6807\u7b49\u8f93\u5165\u8bbe\u5907</li> </ul> <p><code>NINJAR-lite</code> \u652f\u6301\u4ece\u5982\u4e0b\u5b58\u50a8\u4ecb\u8d28\u542f\u52a8\uff1a</p> <ul> <li>SPI-Nor Flash</li> <li>SPI-Nand Flash</li> </ul>"},{"location":"getting-started/#_3","title":"\u5f15\u811a\u5206\u5e03\u56fe","text":""},{"location":"getting-started/#_4","title":"\u53d1\u8d27\u6e05\u5355","text":""},{"location":"getting-started/#_5","title":"\u529f\u80fd\u6d4b\u8bd5","text":""},{"location":"getting-started/#_6","title":"\u4e32\u53e3\u8c03\u8bd5","text":""},{"location":"getting-started/#_7","title":"\u56fa\u4ef6\u70e7\u5f55","text":""},{"location":"getting-started/#_8","title":"\u786c\u4ef6\u8d44\u6599","text":""},{"location":"getting-started/#_9","title":"\u8f6f\u4ef6\u8d44\u6599","text":""},{"location":"getting-started/#_10","title":"\u914d\u4ef6\u8bf4\u660e","text":""},{"location":"getting-started/#_11","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"getting-started/check/","title":"\u68c0\u67e5\u53d1\u8d27\u6e05\u5355","text":"<p>\u9ed8\u8ba4\u53d1\u8d27\u914d\u7f6e\uff1a</p> <ul> <li>\u5b89\u88c5\u5de5\u5177\u5305 x 1</li> <li>\u5916\u58f3\u5957\u4ef6 x 1</li> <li>\u5e95\u677f x 1</li> <li>\u6838\u5fc3\u677f x 1</li> <li>OLED \u5c4f\u5e55 x 1</li> <li>450 mAh \u9502\u7535\u6c60 x 1</li> </ul>"},{"location":"getting-started/parts/","title":"\u52a8\u624b\u7ec4\u88c5\u5427\uff01","text":""},{"location":"getting-started/test/","title":"\u529f\u80fd\u6d4b\u8bd5","text":""},{"location":"hardware/","title":"\u786c\u4ef6\u6587\u6863","text":""},{"location":"hardware/#_2","title":"\u76ee\u5f55","text":"<ul> <li>\u524d\u8a00</li> <li>\u7535\u6e90</li> </ul>"},{"location":"hardware/#_3","title":"\u524d\u8a00","text":""},{"location":"hardware/#_4","title":"\u7535\u6e90","text":"<p><code>\u3010\u672a\u5b8c\u3011DC-DC\u7684\u9009\u578b\u53ca\u5e94\u7528</code> <code>\u3010\u672a\u5b8c\u3011\u5173\u65ad\u72b6\u6001\u6f0f\u7535\u7684\u5206\u6790\u4e0e\u5904\u7406</code> </p> <p><code>\u3010\u5f85\u66f4\u65b0\u3011\u7535\u6e90\u5f00\u5173\u7684\u8bbe\u8ba1</code> <code>\u3010\u5f85\u66f4\u65b0\u3011\u7535\u6e90\u7eb9\u6ce2\u7684\u6d4b\u91cf</code> <code>\u3010\u5f85\u66f4\u65b0\u3011\u5404\u79cd\u72b6\u6001\u4e0b\u7684\u529f\u7387\u6d4b\u91cf</code> </p>"},{"location":"hardware/#_5","title":"\u663e\u793a","text":"<p><code>\u3010\u672a\u5b8c\u3011SSD1327\u663e\u793a\u5c4f</code> </p>"},{"location":"hardware/#_6","title":"\u4ea4\u4e92","text":"<p><code>\u3010\u672a\u5b8c\u3011\u8f93\u5165\u6309\u952e\u7684\u8bbe\u8ba1\u4e0e\u5904\u7406\u65b9\u6cd5</code> <code>\u3010\u672a\u5b8c\u3011\u65cb\u8f6c\u7f16\u7801\u5668\u7684\u4ea4\u4e92\u65b9\u5f0f</code> </p>"},{"location":"hardware/#usb","title":"USB","text":"<p><code>\u3010\u672a\u5b8c\u3011micro-usb \u5230 TYPE-C \u7684\u8f6c\u6362</code> </p>"},{"location":"hardware/#wifi","title":"WIFI","text":"<p><code>\u3010\u672a\u5b8c\u3011WB89-01 WIFI\u6a21\u5757\u95ee\u9898\u5206\u6790</code> </p>"},{"location":"hardware/#_7","title":"\u8fde\u63a5\u5668","text":""},{"location":"hardware/power/dcdc/","title":"Dcdc","text":"DC-DC\u7684\u9009\u578b\u53ca\u5e94\u7528 <ul> <li>\u540d\u8bcd\u89e3\u91ca</li> <li>\u5199\u5728\u524d\u9762</li> <li>\u964d\u538b\u578b</li> <li>\u5347\u538b\u578b</li> <li>\u53c2\u8003\u8d44\u6599</li> </ul>"},{"location":"hardware/power/dcdc/#_1","title":"\u76ee\u5f55","text":""},{"location":"hardware/power/dcdc/#_2","title":"\u540d\u8bcd\u89e3\u91ca","text":"\u540d\u8bcd \u89e3\u91ca DC-DC DC-to-DC converter \u76f4\u6d41\u8f6c\u76f4\u6d41\u8f6c\u6362\u5668 Buck \u964d\u538b\u578b\u8f6c\u6362\u5668 Boost \u5347\u538b\u578b\u8f6c\u6362\u5668"},{"location":"hardware/power/dcdc/#_3","title":"\u5199\u5728\u524d\u9762","text":"<p>\u672c\u6587\u5c06\u901a\u8fc7\u5206\u6790\u624b\u518c\u3001PCB\u5b9e\u9a8c\uff0c\u6311\u9009\u5408\u9002\u7684DCDC\u5668\u4ef6</p> <p>\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e9b\u5e02\u9762\u4e0a\u5e38\u89c1\u7684\u5347\u538b\u3001\u964d\u538b\u578bDCDC\u5668\u4ef6\u6765\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5982\u4e0b</p>"},{"location":"hardware/power/dcdc/#_4","title":"\u964d\u538b\u578b","text":""},{"location":"hardware/power/dcdc/#jw5211","title":"JW5211","text":"\u62d3\u6251\u7ed3\u6784 \u964d\u538b\u5f0f Buck \u8f93\u5165\u7535\u538b 2.5V~5.5V \u8f93\u51fa\u7535\u538b \u8f93\u51fa\u7535\u6d41(\u6700\u5927\u503c) 1.2A \u9759\u6001\u7535\u6d41 40uA~60uA \u5f00\u5173\u9891\u7387 1.5MHz"},{"location":"hardware/power/dcdc/#sy8088aac","title":"SY8088AAC","text":"\u62d3\u6251\u7ed3\u6784 \u964d\u538b\u5f0f Buck \u8f93\u5165\u7535\u538b 2.5V~5.5V \u8f93\u51fa\u7535\u538b \u8f93\u51fa\u7535\u6d41(\u6700\u5927\u503c) 1A \u9759\u6001\u7535\u6d41 40uA \u5f00\u5173\u9891\u7387 1.5MHz"},{"location":"hardware/power/dcdc/#ry3408","title":"RY3408","text":"\u62d3\u6251\u7ed3\u6784 \u964d\u538b\u5f0f Buck \u8f93\u5165\u7535\u538b 2.5V~5.5V \u8f93\u51fa\u7535\u538b \u8f93\u51fa\u7535\u6d41(\u6700\u5927\u503c) 1A \u9759\u6001\u7535\u6d41 40uA \u5f00\u5173\u9891\u7387 1.5MHz"},{"location":"hardware/power/dcdc/#_5","title":"\u5347\u538b\u578b","text":""},{"location":"hardware/power/dcdc/#sgm6603-adjyn6gtr","title":"SGM6603-ADJYN6G/TR","text":"<p>\u7acb\u521b\u5546\u57ce\u94fe\u63a5\uff1ahttps://item.szlcsc.com/80831.html</p> <p>The SGM6603 is a constant frequency, current mode,  synchronous, step-up switching regulator. Its output  currents can go as high as 75mA while using a single-cell  alkaline, and discharge it down to 0.9V. It can also be  used for generating 5V at 500mA from a 3.3V rail or a  Li-ion battery. </p> <p>\u624b\u518c\u4e2d\u591a\u6b21\u63d0\u53ca\u53ef\u7528\u4e8e2.5V~4.2V\u9502\u7535\u6c60\u5347\u538b5V\u7684\u5e94\u7528</p> \u62d3\u6251\u7ed3\u6784 \u5347\u538b\u5f0f    Boost \u8f93\u5165\u7535\u538b 900mV~5.5V \u8f93\u51fa\u7535\u538b 2.5V~5.5V \u8f93\u51fa\u7535\u6d41(\u6700\u5927\u503c) \u5f00\u5173\u9891\u7387 1.2MHz"},{"location":"hardware/power/dcdc/#_6","title":"\u5178\u578b\u5e94\u7528","text":"<p><p> \u6839\u636e\u624b\u518c\u4e2d\u7684\u8bf4\u660e\uff0c\u672c\u5668\u4ef6\u5177\u6709\u9632\u5012\u704c\u529f\u80fd\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728Vout\u5904\u52a0\u8096\u7279\u57fa\u4e8c\u6781\u7ba1</p></p>"},{"location":"hardware/power/dcdc/#5v","title":"\u8f93\u5165\u7535\u538b\u5bf9\u6548\u7387\u7684\u5f71\u54cd(5V)","text":"<p><p> \u6839\u636e\u56fe\u8868\u5f97\u77e5\uff0c\u8f93\u5165\u7535\u538b\u5927\u4e8e3.7V\u65f6\uff0c\u6548\u7387\u572860%\u4ee5\u4e0b\uff0c\u4f46\u6682\u65f6\u6ca1\u6709\u8fdb\u884c\u9a8c\u8bc1\u3002 </p></p>"},{"location":"hardware/power/dcdc/#_7","title":"\u7535\u611f\u7684\u9009\u62e9","text":"<p>A boost converter normally requires two main passive  components for storing energy during the conversion. A  boost inductor and a storage capacitor at the output are  required. To select the boost inductor, it is recommended  to keep the possible peak inductor current below the  current limit threshold of the power switch in the chosen  configuration. The highest peak current through the  inductor and the switch depends on the output load, the  input (VCC), and the output voltage (VOUT). </p> <p>\u7535\u611f\u4e0e\u8f93\u51fa\u7535\u5bb9\u63d0\u4f9b\u4e86\u5347\u538b\u6240\u9700\u7684\u80fd\u91cf\uff0c\u53ef\u901a\u8fc7\u624b\u518c\u4e2d\u5982\u4e0b\u516c\u5f0f\u8ba1\u7b97\u5e94\u7528\u7535\u611f\u53c2\u6570</p> <p>$I_L = I_O \\times \\frac{V_{out}}{V_{cc} \\ \\times \\ 0.8} $</p> <p>\u672c\u4f8b\u9700\u8981 <code>5.5V 500mA</code>\u8f93\u51fa\uff0c\u5047\u8bbe\u8f93\u5165\u7535\u538b\u4e3a<code>4V</code>\uff0c\u5e26\u5165\u516c\u5f0f\u8ba1\u7b97\u5f97\uff0c\u5cf0\u503c\u7535\u6d41\u4e3a<code>859.3mA</code>\uff0c \u6240\u9700\u529f\u7387\u7535\u611f\u7684\u5cf0\u503c\u7535\u6d41\u5e94\u4e3a<code>1A</code>\u3002 \u53ef\u9009\u62e9<code>0805 2.2uH 1A\u529f\u7387\u7535\u611f</code> https://item.szlcsc.com/356676.html</p>"},{"location":"hardware/power/dcdc/#_8","title":"\u8f93\u5165\u7535\u5bb9\u7684\u9009\u62e9","text":"<p>At least a 10\u00b5F input capacitor is recommended to  improve transient behavior of the regulator and EMI  behavior of the total power supply circuit. A ceramic  capacitor or a tantalum capacitor with a 100nF ceramic  capacitor in parallel, placed close to the IC, is  recommended</p>"},{"location":"hardware/power/dcdc/#_9","title":"\u8f93\u51fa\u7535\u5bb9\u7684\u9009\u62e9","text":"<p>The major parameter necessary to define the output  capacitor is the maximum allowed output voltage ripple of  the converter. This ripple is determined by two  parameters of the capacitor, the capacitance and the  ESR. It is possible to calculate the minimum capacitance  needed for the defined ripple, supposing that the ESR is  zero,</p>"},{"location":"hardware/power/dcdc/#r1r2","title":"R1/R2\u7535\u963b\u7684\u9009\u62e9","text":"<p>The typical value of the voltage at the FB pin is  500mV. The maximum recommended value for the  output voltage is 5.5V.</p> <p>R1 = R2 * (Vout/500mV - 1)</p> <p>\u6b64\u4f8b\u4e2d\uff0c\u9700\u89815.5V\u8f93\u51fa\uff0c\u7ecf\u8fc71n5819ws 0.6V\u5de6\u53f3\u538b\u964d\uff0c\u5f97\u5230\u63a5\u8fd1\u76845V R1 = 10K, R2 = 1K</p> <p>R2 is recommended to be 100k\u2126. For example, if an  output voltage of 3.3V is needed, a 560k\u2126 resistor should  be chosen for R1. </p> <p>\u6839\u636e\u624b\u518c\u4e2d\u8bf4\u660e\uff0cR2\u63a8\u8350\u5927\u5c0f100K\uff0c\u90a3R1\u5c31\u8981\u6539\u4e3a1000K</p>"},{"location":"hardware/power/dcdc/#2","title":"2.","text":""},{"location":"hardware/power/ripple/","title":"Ripple","text":"\u7535\u6e90\u7eb9\u6ce2\u6d4b\u91cf <ul> <li>1V1</li> <li>2V5</li> <li>3V3</li> <li>DRAM_VREF</li> <li>USB_5V</li> </ul>"},{"location":"hardware/power/ripple/#_1","title":"\u76ee\u5f55","text":""},{"location":"hardware/power/ripple/#1v1","title":"1V1","text":""},{"location":"hardware/power/ripple/#2v5","title":"2V5","text":""},{"location":"hardware/power/ripple/#3v3","title":"3V3","text":""},{"location":"hardware/power/ripple/#dram_vref","title":"DRAM_VREF","text":""},{"location":"hardware/power/ripple/#usb_5v","title":"USB_5V","text":""},{"location":"hardware/power/shutdown_current/","title":"Shutdown current","text":"\u5173\u65ad\u72b6\u6001\u6f0f\u7535\u7684\u5206\u6790\u4e0e\u5904\u7406 <ul> <li>\u540d\u8bcd\u89e3\u91ca</li> <li>\u5199\u5728\u524d\u9762</li> <li>\u6838\u5fc3\u677f</li> <li>\u5e95\u677f</li> <li>\u53c2\u8003\u8d44\u6599</li> </ul>"},{"location":"hardware/power/shutdown_current/#_1","title":"\u76ee\u5f55","text":""},{"location":"hardware/power/shutdown_current/#_2","title":"\u540d\u8bcd\u89e3\u91ca","text":"\u540d\u8bcd \u89e3\u91ca"},{"location":"hardware/power/shutdown_current/#_3","title":"\u5199\u5728\u524d\u9762","text":"<p>\u672c\u6587\u5c06\u4ece\u95ee\u9898\u5165\u624b\uff0c\u901a\u8fc7\u529f\u8017\u8ba1\u4ee5\u53ca\u677f\u4e0a\u8d44\u6e90\uff0c\u5206\u6790\u6f0f\u7535\u95ee\u9898\u51fa\u5728\u54ea\u91cc</p> <p>\u672c\u6587\u7684\u53e6\u4e00\u4e2a\u76ee\u7684\u662f\u4e3a\u4e86\u964d\u4f4e\u5f85\u673a\u529f\u8017\uff0c\u4f46\u672c\u6587\u4ec5\u6d89\u53ca\u786c\u4ef6\u90e8\u5206\uff0c\u8f6f\u4ef6\u90e8\u5206\u7684\u8bf7\u5230<code>\u8f6f\u4ef6-&gt;\u7535\u6e90\u7ba1\u7406</code>\u67e5\u770b</p>"},{"location":"hardware/power/shutdown_current/#_4","title":"\u6838\u5fc3\u677f","text":"<p>\u521d\u59cb\u72b6\u6001\uff1a \u6f0f\u7535 480uA</p> <p>\u6211\u4eec\u77e5\u9053\uff0cPCB\u5e38\u89c1\u7684\u6f0f\u7535\u95ee\u9898\uff0c\u6709\u5982\u4e0b\u51e0\u4e2a\u539f\u56e0\uff1a</p> <ul> <li>\u4e0a\u62c9\u7535\u963b\u7684\u5927\u5c0f</li> <li>DC-DC\u7684\u9759\u6001\u7535\u6d41</li> <li>LDO\u7684\u9759\u6001\u7535\u6d41</li> </ul> <p>\u5728\u672c\u6848\u4f8b\u4e2d\uff0c\u901a\u8fc7 <code>PWR_EN</code> \u4fe1\u53f7\u5c06\u4e09\u8defDC-DC\u5173\u95ed\u540e\uff0c\u53c8\u56e03V LDO \u7684\u4e0a\u7ea7\u662f3V3\u7684DC-DC</p> <p>\u90a3\u4e48\u677f\u4e0a\u5c31\u53ea\u6709\u5982\u4e0b\u8017\u7535\u70b9\u4e86\uff1a</p> <ul> <li>DC-DC\u7684\u5173\u65ad\u7535\u6d41</li> <li>10K\u4e0a\u62c9\u7535\u963b\u7684\u7535\u6d41</li> </ul> <p>\u6211\u4eec\u7684DC-DC\u82af\u7247\uff0c\u578b\u53f7\u4e3aJW5211\uff0c\u901a\u8fc7\u67e5\u9605\u624b\u518c\u5f97\u77e5\u7535\u6c14\u53c2\u6570\u5982\u4e0b</p> <p>\u90a3\u4e48\u4e09\u9897DC-DC\u6f0f\u7535\u91cf\u8303\u56f4\u4e3a\uff1a0.3uA - 3uA</p> <p>10K\u4e0a\u62c9\u7535\u963b\u7684\u7535\u6d41\u503c\uff0c\u53ef\u901a\u8fc7\u4ee3\u5165<code>\u6b27\u59c6\u5b9a\u5f8b</code>\u516c\u5f0f\u8ba1\u7b97\u5f97</p> <p>Ir = 5000mV/10000R = 500uA</p> <p>\u53c8\u56e0\u8be5\u7535\u963b\u5bb9\u91cf+-5%\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u77e5</p> \u8017\u7535\u91cf \u6700\u5927\u503c 526uA \u6700\u5c0f\u503c 476uA <p>\u7ed3\u8bba:</p> <ul> <li>\u5c06\u8be5\u7535\u963b\u66ff\u6362\u4e3a100k\u6216\u80051M\u5927\u5c0f\u7684\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u964d\u4f4e\u8017\u7535\u91cf</li> </ul>"},{"location":"hardware/power/shutdown_current/#_5","title":"\u5b9e\u9a8c","text":"\u5b9e\u6d4b\u4e0a\u62c9\u7535\u963b\u7684\u5927\u5c0f\u5bf9\u9759\u6001\u7535\u6d41\u7684\u5f71\u54cd \u963b\u503c \u7535\u6d41 100K 50uA 1M 5 uA"},{"location":"hardware/power/shutdown_current/#_6","title":"\u4f18\u5316\u7ed3\u679c","text":"<p>\u5f85\u6dfb\u52a0</p>"},{"location":"hardware/power/shutdown_current/#_7","title":"\u5e95\u677f","text":"<p>\u521d\u59cb\u72b6\u6001\uff1a \u6f0f\u7535 850 uA</p>"},{"location":"hardware/wifi/wb89_01_debug/","title":"Wb89 01 debug","text":"WB89-01 WIFI\u6a21\u5757\u95ee\u9898\u5206\u6790 <ul> <li>\u540d\u8bcd\u89e3\u91ca</li> <li>\u5199\u5728\u524d\u9762</li> <li>\u53c2\u8003\u8d44\u6599</li> </ul>"},{"location":"hardware/wifi/wb89_01_debug/#_1","title":"\u76ee\u5f55","text":""},{"location":"hardware/wifi/wb89_01_debug/#_2","title":"\u540d\u8bcd\u89e3\u91ca","text":"\u540d\u8bcd \u89e3\u91ca"},{"location":"hardware/wifi/wb89_01_debug/#_3","title":"\u5199\u5728\u524d\u9762","text":"<p>\u672c\u6587\u5c06\u4ece\u95ee\u9898\u5165\u624b\uff0c\u901a\u8fc7\u98de\u7ebf\u65b9\u5f0f\uff0c\u67e5\u627e\u677f\u4e0a\u95ee\u9898\u3002</p> \u8bbe\u65bd \u7248\u672c \u5f00\u53d1\u677f f1c100s_base WIFI\u6a21\u7ec4 WB89-01 linux 6.5.6 <p> </p>"},{"location":"hardware/wifi/wb89_01_debug/#_4","title":"\u95ee\u9898","text":"<p>\u677f\u5b50\u4e0a\u7535\u540e\uff0c\u65e0\u6cd5\u626b\u63cf\u5230\u4efb\u4f55mmc\u8bbe\u5907\u3002\u52a0\u8f7desp8089 wifi\u9a71\u52a8\uff0c\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94</p>"},{"location":"hardware/wifi/wb89_01_debug/#_5","title":"\u8c03\u8bd5\u8bb0\u5f55","text":""},{"location":"hardware/wifi/wb89_01_debug/#_6","title":"\u786e\u8ba4\u95ee\u9898\u539f\u56e0","text":""},{"location":"hardware/wifi/wb89_01_debug/#1-mmc","title":"1. \u662f\u5426\u662fMMC\u63a5\u53e3\u7684\u95ee\u9898\uff1f","text":"<p>\u6211\u51c6\u5907\u4e86\u8fd9\u6837\u4e00\u4e2a SPI \u63a5\u53e3\u7684 TF \u5361\u6a21\u5757</p> <p>\u8fd9\u91cc\u8981\u8bf4\u660e\u4e00\u4e0b\uff0cTF \u5361\u662f\u53ef\u4ee5\u5de5\u4f5c\u4e8eSDIO\u6216\u8005SPI\u6a21\u5f0f\u4e0b\u7684</p> <p>TF\u5361\u7684\u5f15\u811a\u5b9a\u4e49\u5982\u4e0b\u56fe\u6240\u793a</p> <p>\u9700\u8981\u5c06\u6a21\u5757\u4e0a\u7684\u5f15\u811a\u4e0eSDIO\u7684\u63a5\u53e3\u8fde\u63a5\u8d77\u6765\uff0c\u4f8b\u5982:</p> <ul> <li>DO --&gt; DAT0</li> <li>VSS --&gt; VSS</li> <li>VDD --&gt; VDD</li> <li>DI --&gt; CMD</li> <li>SCLK --&gt; CLK</li> </ul> <p>\u6211\u4eec\u8ba9\u5176\u5de5\u4f5c\u4e8esdio 1bit-mode\u4e0b</p> <p>\u5c06 WIFI \u6a21\u7ec4\u901a\u8fc7\u70ed\u98ce\u67aa\u53d6\u4e0b\uff0c\u63a5\u5165tf\u5361\uff0c\u770b\u5230\u4e32\u53e3\u6709\u5982\u4e0b\u4fe1\u606f\u6253\u5370 <pre><code># [   77.847103] mmc0: new high speed SDHC card at address e624\n[   77.859029] mmcblk0: mmc0:e624 SU04G 3.69 GiB \n[   77.882709]  mmcblk0:\n</code></pre></p> <p>\u901a\u8fc7debugfs\u67e5\u770bmmc\u8bbe\u5907 <pre><code># mount -t debugfs none /sys/kernel/debug\n\n# ls /sys/kernel/debug/mmc0\ncaps       caps2      clock      err_state  err_stats  ios        mmc0:e624\n</code></pre></p>"},{"location":"hardware/wifi/wb89_01_debug/#_7","title":"\u7ed3\u8bba","text":"<ul> <li>\u677f\u5b50\u4e0a\u7684mmc\u63a5\u53e3\u5de5\u4f5c\u6b63\u5e38</li> </ul>"},{"location":"hardware/wifi/wb89_01_debug/#2-wifi","title":"2. \u662f\u5426\u662fWIFI\u6a21\u7ec4\u7684\u95ee\u9898\uff1f","text":"<p>\u5c06WIFI\u6a21\u7ec4\u98de\u7ebf\uff0c\u5982\u4e0b\u56fe\u6240\u793a</p> <p>\u8fde\u63a5\u81f3\u677f\u5b50\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u53d1\u73b0\u539f\u7406\u56fe\u5c45\u7136\u753b\u9519\u4e86</p> <p></p> <p>\u56fe\u4e2d\u6807\u6ce8\u7684\u5730\u65b9</p> <p>\u901a\u8fc7\u67e5\u770b\u8bf4\u660e\u4e66\u4e2d\u7684pinout</p> <p>\u4fee\u6b63\u540e\u7684\u539f\u7406\u56fe\u5982\u4e0b\u56fe\u6240\u793a</p> <p>\u6765\u5230PCB\u8fd9\u8fb9\uff0c\u73b0\u5728\u7684\u8fde\u63a5\u5982\u4e0b\u56fe\u6240\u793a</p> <p>\u53ef\u4ee5\u770b\u52308\u30019\u53f7\u710a\u76d8\u548c13\u300114\u753b\u53cd\u4e86\uff0c\u8fd8\u597d\u8fd9\u8fb9\u7684\u710a\u76d8\u662f\u5bf9\u79f0\u7684\uff0c\u5b9e\u9a8c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4e0b\u53bb\u3002</p> <p>\u6211\u4eec\u5148\u7ee7\u7eed\u7b49\u4f1a\u518d\u4fee\u6539PCB\u3002 \u5c06WIIF\u6a21\u7ec4\u98de\u7ebf\u8fde\u63a5\u597d\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a</p> <p>\u7ed9\u677f\u5b50\u4e0a\u7535\uff0c\u53d1\u73b0\u4e32\u53e3\u51fa\u73b0\u5982\u4e0b\u6253\u5370\u4fe1\u606f\uff0cmmc\u5361\u5df2\u7ecf\u8bc6\u522b\u5230\u4e86 <pre><code>[    1.627762] sunxi-mmc 1c0f000.mmc: initialized, max. request size: 16384 KB\n[    1.635327] ubi0: attaching mtd3\n[    1.663866] mmc0: queuing unknown CIS tuple 0x01 [d9 01 ff] (3 bytes)\n[    1.685014] random: crng init done\n[    1.688583] mmc0: queuing unknown CIS tuple 0x1a [01 01 00 02 07] (5 bytes)\n[    1.700617] mmc0: queuing unknown CIS tuple 0x1b [c1 41 30 30 ff ff ff ff] (8 bytes)\n</code></pre></p>"},{"location":"hardware/wifi/wb89_01_debug/#_8","title":"\u7ed3\u8bba","text":"<ul> <li>\u539f\u7406\u56fe\u7b26\u53f7\u753b\u9519\uff0c\u5bfc\u81f4PCB\u677f\u4e0e\u6a21\u7ec4\u7684\u8fde\u63a5\u51fa\u73b0\u95ee\u9898\uff0c\u6a21\u7ec4\u6ca1\u6709\u4e0a\u7535\u3002</li> </ul> <p>\u6211\u4eec\u63a5\u7740\u8fdb\u5ea6\uff0c\u5c1d\u8bd5\u52a0\u8f7d\u6211\u4fee\u6539\u9002\u914d6.x\u5185\u6838\u7684esp8089\u9a71\u52a8\uff0c\u4e0d\u51fa\u6240\u6599\uff0c\u679c\u7136\u5d29\u4e86\ud83d\ude02\uff0c\u770b\u65e5\u5fd7\u662f\u4e2a\u7a7a\u6307\u9488\u9519\u8bef <pre><code># insmod esp8089.ko\n[ 1110.173154] esp_sdio_init\n[ 1110.177417] ------------[ cut here ]------------\n[ 1110.183063] WARNING: CPU: 0 PID: 106 at net/mac80211/main.c:634 ieee80211_alloc_hw_nm+0xb4/0x670\n[ 1110.193900] Modules linked in: esp8089(O+) g_ether fb_ssd1327(O)\n[ 1110.201599] CPU: 0 PID: 106 Comm: insmod Tainted: G           O       6.4.0-rc7-ninjar-lite+ #1\n[ 1110.212248] Hardware name: Allwinner suniv Family\n[ 1110.217962]  unwind_backtrace from show_stack+0x10/0x14\n[ 1110.224292]  show_stack from dump_stack_lvl+0x28/0x30\n[ 1110.230410]  dump_stack_lvl from __warn+0xa0/0xd8\n[ 1110.236125]  __warn from warn_slowpath_fmt+0x178/0x194\n[ 1110.242255]  warn_slowpath_fmt from ieee80211_alloc_hw_nm+0xb4/0x670\n[ 1110.250064]  ieee80211_alloc_hw_nm from esp_pub_alloc_mac80211+0x1c/0x170 [esp8089]\n[ 1110.259449]  esp_pub_alloc_mac80211 [esp8089] from esp_sdio_probe+0x270/0x40c [esp8089]\n[ 1110.269250]  esp_sdio_probe [esp8089] from sdio_bus_probe+0xbc/0x17c\n[ 1110.277291]  sdio_bus_probe from really_probe+0xc4/0x298\n[ 1110.283646]  really_probe from __driver_probe_device+0x84/0x19c\n[ 1110.291024]  __driver_probe_device from driver_probe_device+0x30/0xdc\n[ 1110.298924]  driver_probe_device from __driver_attach+0x94/0x104\n[ 1110.306381]  __driver_attach from bus_for_each_dev+0x6c/0xb8\n[ 1110.313049]  bus_for_each_dev from bus_add_driver+0x138/0x1cc\n[ 1110.319798]  bus_add_driver from driver_register+0x7c/0x114\n[ 1110.326369]  driver_register from esp_sdio_init+0x1c/0x30 [esp8089]\n[ 1110.334305]  esp_sdio_init [esp8089] from do_one_initcall+0x48/0x248\n[ 1110.342317]  do_one_initcall from do_init_module+0x48/0x1cc\n[ 1110.348876]  do_init_module from load_module+0x1720/0x18b8\n[ 1110.355352]  load_module from sys_finit_module+0xb8/0x104\n[ 1110.361721]  sys_finit_module from ret_fast_syscall+0x0/0x44\n[ 1110.368337] Exception stack(0xc2909fa8 to 0xc2909ff0)\n[ 1110.374309] 9fa0:                   193a7662 00000001 00000003 004fee30 00000000 be837f4d\n[ 1110.383836] 9fc0: 193a7662 00000001 00000003 0000017b be837fef 00000000 00000001 00000000\n[ 1110.393391] 9fe0: be837db4 be837d98 00434f00 b6ef709c\n[ 1110.399588] ---[ end trace 0000000000000000 ]---\n[ 1110.405324] ieee80211 can't alloc hw!\n[ 1110.410025] 8&lt;--- cut here ---\n[ 1110.414095] Unable to handle kernel NULL pointer dereference at virtual address 00000004 when write\n[ 1110.425333] [00000004] *pgd=00000000\n[ 1110.430019] Internal error: Oops: 805 [#1] PREEMPT ARM\n[ 1110.436244] Modules linked in: esp8089(O+) g_ether fb_ssd1327(O)\n[ 1110.443851] CPU: 0 PID: 106 Comm: insmod Tainted: G        W  O       6.4.0-rc7-ninjar-lite+ #1\n[ 1110.454598] Hardware name: Allwinner suniv Family\n[ 1110.460321] PC is at esp_sdio_probe+0x27c/0x40c [esp8089]\n[ 1110.467032] LR is at esp_pub_alloc_mac80211+0x130/0x170 [esp8089]\n[ 1110.474828] pc : [&lt;bf016eb8&gt;]    lr : [&lt;bf01df98&gt;]    psr: a0000013\n[ 1110.482548] sp : c2909c98  ip : ffffefff  fp : c0f82800\n[ 1110.488755] r10: bf02011c  r9 : c0fa4a08  r8 : bf009a00\n[ 1110.494959] r7 : bf009000  r6 : fffffff4  r5 : c0fa4a00  r4 : c1961c80\n[ 1110.502944] r3 : 00000000  r2 : 9683abd4  r1 : c2909bd0  r0 : fffffff4\n[ 1110.510969] Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\n[ 1110.519626] Control: 0005317f  Table: 81944000  DAC: 00000051\n[ 1110.526407] Register r0 information: non-paged memory\n[ 1110.532525] Register r1 information: 2-page vmalloc region starting at 0xc2908000 allocated at kernel_clone+0xb4/0x3b4\n[ 1110.545350] Register r2 information: non-paged memory\n[ 1110.551458] Register r3 information: NULL pointer\n[ 1110.557204] Register r4 information: slab kmalloc-128 start c1961c80 pointer offset 0 size 128\n[ 1110.567849] Register r5 information: slab kmalloc-512 start c0fa4a00 pointer offset 0 size 512\n[ 1110.578465] Register r6 information: non-paged memory\n[ 1110.584546] Register r7 information: 4-page vmalloc region starting at 0xbf009000 allocated at load_module+0x6b4/0x18b8\n[ 1110.597386] Register r8 information: 4-page vmalloc region starting at 0xbf009000 allocated at load_module+0x6b4/0x18b8\n[ 1110.610219] Register r9 information: slab kmalloc-512 start c0fa4a00 pointer offset 8 size 512\n[ 1110.620846] Register r10 information: 2-page vmalloc region starting at 0xbf020000 allocated at load_module+0x6b4/0x18b8\n[ 1110.633772] Register r11 information: slab kmalloc-1k start c0f82800 pointer offset 0 size 1024\n[ 1110.644451] Register r12 information: non-paged memory\n[ 1110.650593] Process insmod (pid: 106, stack limit = 0x262a8b3e)\n[ 1110.657995] Stack: (0xc2909c98 to 0xc290a000)\n[ 1110.663370] 9c80:                                                       c0bb8228 bf0097a0\n[ 1110.673029] 9ca0: c2909f40 c0fa4a08 c0fa4a00 00000000 bf009010 bf02011c c0bb8228 bf0097a0\n[ 1110.682662] 9cc0: c2909f40 c04f24fc c0fa4a08 00000000 bf009010 00000000 c0cf0900 c0409ce8\n[ 1110.692297] 9ce0: c0fa4a08 bf009010 c0fa4a08 00000014 c0cf0900 c0409f40 00000000 c028a9ac\n[ 1110.701978] 9d00: 00000000 c0bd0fb0 c0fa4a08 c0fa4a08 00000014 c0cf0900 c0bb8228 bf0097a0\n[ 1110.711681] 9d20: c2909f40 c040a088 bf009010 c0fa4a08 c040a1f8 c0b0322c c0cf0900 c040a28c\n[ 1110.721387] 9d40: 00000000 bf009010 c040a1f8 c0407fdc 00000000 c0cf094c c0fcb030 9683abd4\n[ 1110.731105] 9d60: bf009010 c1897360 c0cf0900 00000000 c1897394 c0408ed4 bf020ae0 c18bd900\n[ 1110.740871] 9d80: c0b95000 bf009010 bf0160fc 00000000 c18bd900 c0b95000 c0bb8228 c040aaf4\n[ 1110.750676] 9da0: c0b0322c bf0160fc 00000000 bf016118 c0b0322c c0101da4 00000000 c0739804\n[ 1110.760491] 9dc0: 00000024 00000000 c0807f90 c184b848 00000036 c01ef4c4 00000000 c01f4c44\n[ 1110.770308] 9de0: c0b0322c c028a7d0 c2a0efff 00081938 c1969160 c1fec700 00000000 00081938\n[ 1110.780105] 9e00: c18bd900 c1fec700 00000000 9683abd4 bf0097a0 bf0097a0 c1969160 0000000c\n[ 1110.789927] 9e20: 00000010 00000000 c0bb8228 bf0097a0 c2909f40 c0757cfc 00000000 00000000\n[ 1110.799769] 9e40: 00000000 00000000 0000000c c0169948 ffff8000 00007fff bf0097a0 c0167410\n[ 1110.809587] 9e60: 00000001 bf0097ac 00000001 bf0097a0 bf023004 00000001 0000001b c29fb000\n[ 1110.819400] 9e80: 00000007 c2a0d81c 00000000 c2909f40 00000001 004fee30 00000000 c190e8c0\n[ 1110.829216] 9ea0: c0b0322c c2909f3c 00012ccc 00012ccc 00000000 00000000 00000000 00000000\n[ 1110.839016] 9ec0: 6e72656b 00006c65 00000000 00000000 00000000 00000000 00000000 00000000\n[ 1110.848798] 9ee0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 9683abd4\n[ 1110.858547] 9f00: c2909f3c 00000000 c0b0322c 004fee30 00000003 c0100234 c18bd900 00000000\n[ 1110.868278] 9f20: 00000000 c0169cec c2909f3c 7fffffff 00000000 00000002 c0213194 c29fb000\n[ 1110.878016] 9f40: c2a04fd0 c2a05820 c29fb000 00012ccc c2a0d81c c2a0d718 c2a08de0 00000a88\n[ 1110.887724] 9f60: 00002338 0000479c 000030f3 00000000 0000478c 0000001b 0000001c 00000011\n[ 1110.897441] 9f80: 00000000 00000007 00000000 9683abd4 004fe440 193a7662 00000001 00000003\n[ 1110.907153] 9fa0: 0000017b c0100040 193a7662 00000001 00000003 004fee30 00000000 be837f4d\n[ 1110.916854] 9fc0: 193a7662 00000001 00000003 0000017b be837fef 00000000 00000001 00000000\n[ 1110.926566] 9fe0: be837db4 be837d98 00434f00 b6ef709c 20000010 00000003 00000000 00000000\n[ 1110.936280]  esp_sdio_probe [esp8089] from sdio_bus_probe+0xbc/0x17c\n[ 1110.944515]  sdio_bus_probe from really_probe+0xc4/0x298\n[ 1110.950957]  really_probe from __driver_probe_device+0x84/0x19c\n[ 1110.958428]  __driver_probe_device from driver_probe_device+0x30/0xdc\n[ 1110.966409]  driver_probe_device from __driver_attach+0x94/0x104\n[ 1110.973939]  __driver_attach from bus_for_each_dev+0x6c/0xb8\n[ 1110.980647]  bus_for_each_dev from bus_add_driver+0x138/0x1cc\n[ 1110.987410]  bus_add_driver from driver_register+0x7c/0x114\n[ 1110.993987]  driver_register from esp_sdio_init+0x1c/0x30 [esp8089]\n[ 1111.001929]  esp_sdio_init [esp8089] from do_one_initcall+0x48/0x248\n[ 1111.009947]  do_one_initcall from do_init_module+0x48/0x1cc\n[ 1111.016508]  do_init_module from load_module+0x1720/0x18b8\n[ 1111.022985]  load_module from sys_finit_module+0xb8/0x104\n[ 1111.029354]  sys_finit_module from ret_fast_syscall+0x0/0x44\n[ 1111.035973] Exception stack(0xc2909fa8 to 0xc2909ff0)\n[ 1111.041940] 9fa0:                   193a7662 00000001 00000003 004fee30 00000000 be837f4d\n[ 1111.051468] 9fc0: 193a7662 00000001 00000003 0000017b be837fef 00000000 00000001 00000000\n[ 1111.061032] 9fe0: be837db4 be837d98 00434f00 b6ef709c\n[ 1111.067054] Code: eb001bee e2506000 0a00000a e3a03000 (e5864010) \n[ 1111.074700] ---[ end trace 0000000000000000 ]---\n[ 1111.080440] note: insmod[106] exited with preempt_count 1\nSegmentation fault\n</code></pre></p> <p>\u63a5\u4e0b\u6765\u5c31\u662f\u8f6f\u4ef6\u5c42\u9762\u7684\u95ee\u9898\u4e86\uff0c\u6211\u4eec\u653e\u5230<code>\u9a71\u52a8\u4fee\u6539\u9002\u914d</code>\u7ae0\u8282\u6765\u7ec6\u8bf4\u5427</p>"},{"location":"hardware/wifi/wb89_01_debug/#_9","title":"\u9a71\u52a8\u4fee\u6539\u9002\u914d","text":"<p>\u6211fork\u4e86\u4e00\u4efd @al117 \u79fb\u690d\u9002\u914d\u7684 esp8089 \u9a71\u52a8\u4f5c\u4e3a\u57fa\u7840 NINJAR-lite/esp8089_al117\uff0c\u7ecf\u8fc7\u5982\u4e0b\u4fee\u6539\uff0c\u786e\u8ba4\u4e0d\u4f1a\u518d\u52a0\u8f7d\u9636\u6bb5\u5d29\u6e83\u4e86\uff0c\u4f46\u662f\u8fd8\u6709\u95ee\u9898\uff0c\u6211\u4eec\u63a5\u7740\u5f80\u4e0b\u770b\u3002 <pre><code>diff --git a/esp_mac80211.c b/esp_mac80211.c\nindex 8b56c1a..b8ac767 100755\n--- a/esp_mac80211.c\n+++ b/esp_mac80211.c\n@@ -790,6 +790,14 @@ static int esp_op_set_tim(struct ieee80211_hw *hw, struct ieee80211_sta *sta,\n }\n #endif\n\n+static void esp_op_wake_tx_queue(struct ieee80211_hw *hw,\n+                              struct ieee80211_txq *txq)\n+{\n+        struct esp_pub *epub = (struct esp_pub *) hw-&gt;priv;\n+        if (epub)\n+             ieee80211_queue_work(hw, &amp;epub-&gt;tx_work);\n+}\n+\n #if (LINUX_VERSION_CODE &gt;= KERNEL_VERSION(2, 6, 30))\n static int esp_op_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd,\n                           struct ieee80211_vif *vif, struct ieee80211_sta *sta,\n@@ -1936,6 +1944,7 @@ static const struct ieee80211_ops esp_mac80211_ops = {\n         .prepare_multicast = esp_op_prepare_multicast,\n #endif\n         .configure_filter = esp_op_configure_filter,\n+        .wake_tx_queue = esp_op_wake_tx_queue,\n         .set_key = esp_op_set_key,\n         .update_tkip_key = esp_op_update_tkip_key,\n         //.sched_scan_start = esp_op_sched_scan_start,\n</code></pre></p> <p>\u521a\u624d\u63d0\u5230\u7684\uff0c\u867d\u7136\u4e0d\u4f1a\u518d\u52a0\u8f7d\u9636\u6bb5\u5d29\u6e83\u4e86\uff0c\u4f46\u662f\u8fd0\u884c\u4e86\u4e00\u4f1a\u513f\u4e4b\u540e\uff0c\u9a71\u52a8\u5d29\u6e83\u4e86\uff0c\u65e5\u5fd7\u5982\u4e0b\uff1a <pre><code>\n</code></pre></p> <p>\u63a8\u6d4b\u662f\u56e0\u4e3a\u4f9b\u7535\u4e0d\u8db3\u95ee\u9898\uff0c\u7f51\u5361\u4e2d\u9014\u6389\u4e86\uff0c\u90a3\u5148\u6765\u6392\u67e5\u4f9b\u7535\u95ee\u9898\u3002</p> <p>\u6211\u5728\u6a21\u7ec4\u7684\u7535\u6e90\u8f93\u5165\u7aef\uff0c\u5e76\u8054\u7684\u4e00\u4e2a\u5927\u7535\u5bb9\uff0c</p>"},{"location":"software/","title":"\u8f6f\u4ef6\u6587\u6863","text":""},{"location":"software/#_2","title":"\u76ee\u5f55","text":"<ul> <li>\u524d\u8a00</li> <li>\u88f8\u673a</li> <li>uboot</li> <li>linux</li> <li>rootfs</li> <li>\u70e7\u5f55</li> </ul>"},{"location":"software/#_3","title":"\u524d\u8a00","text":"<p>\u672c\u6587\u5c06\u901a\u8fc7\u82e5\u5e72\u4e2a\u5b9e\u9a8c\uff0c\u5e2e\u52a9\u8bfb\u8005\u5feb\u901f\u638c\u63e1\u5d4c\u5165\u5f0fLinux BSP\u5f00\u53d1\u57fa\u672c\u77e5\u8bc6 \u672c\u6587\u5e76\u975e\u6309\u987a\u5e8f\u8bb2\u89e3\uff0c\u8bfb\u8005\u53ef\u4ee5\u6309\u5174\u8da3\u9009\u62e9\u9605\u8bfb\u3002</p> <p>\u5b9e\u9a8c\u73af\u5883\uff1a</p> \u8bbe\u65bd \u578b\u53f7 <code>NINJAR-lite</code> <code>F1C200s ARM9 64MB DDR1</code> <code>Linux</code> 6.5.1 stable <code>uboot</code> v2023.07.02 <p><p>\u4f20\u9001\u95e8</p></p>"},{"location":"software/#_4","title":"\u88f8\u673a","text":"<p><code>\u3010\u672a\u5b8c\u3011\u7b2c\u4e00\u4e2a\u88f8\u673a\u7a0b\u5e8f\uff1ablink</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011\u521d\u59cb\u5316\u65f6\u949f\uff1a \u7a0b\u5e8f\u8dd1\u7684\u66f4\u5feb\u4e86</code> </p>"},{"location":"software/#_5","title":"\u5916\u8bbe","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011\u521d\u59cb\u5316UART: \u8ddfpc\u6253\u4e2a\u62db\u547c\u5427</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011\u521d\u59cb\u5316I2C: \u8fde\u63a5\u66f4\u591a\u7684\u8bbe\u5907</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011\u521d\u59cb\u5316SPI: \u8fde\u63a5\u66f4\u591a\u7684\u8bbe\u5907</code> </p>"},{"location":"software/#_6","title":"\u8fdb\u9636","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011\u4f7f\u7528debugger\u8c03\u8bd5\u7a0b\u5e8f</code></p>"},{"location":"software/#bring-up","title":"Bring Up","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011Bring Up: \u5982\u4f55\u9002\u914d\u4e3b\u7ebflinux</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Bring Up: \u5982\u4f55\u9002\u914d\u4e3b\u7ebfuboot</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Bring Up: \u5982\u4f55\u9002\u914d\u4e3b\u7ebfbuildroot</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Bring Up: \u5982\u4f55\u9002\u914d\u4e3b\u7ebfyocto</code> </p>"},{"location":"software/#uboot","title":"uboot","text":""},{"location":"software/#spl","title":"SPL","text":"<p><code>\u3010\u672a\u5b8c\u3011SPL\uff1a\u5982\u4f55\u6dfb\u52a0\u4e00\u4e2a Image Loader</code> </p> <p><code>\u3010\u5f85\u6dfb\u52a0\u3011uboot: \u5982\u4f55\u6dfb\u52a0\u4e00\u4e2acommand</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011uboot: \u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u9a71\u52a8</code> </p>"},{"location":"software/#_7","title":"\u9a71\u52a8\u5b9e\u6218","text":"<p><code>\u3010\u672a\u5b8c\u3011 uboot\u9a71\u52a8\u5b9e\u6218: \u4e3aSPI TFT\u6dfb\u52a0\u663e\u793a\u652f\u6301</code> </p>"},{"location":"software/#linux","title":"linux","text":""},{"location":"software/#_8","title":"\u5e94\u7528\u5f00\u53d1","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5e94\u7528\u5f00\u53d1: LVGL : \u79fb\u690d</code> <code>\u3010\u672a\u5b8c\u3011linux\u5e94\u7528\u5f00\u53d1: Rust : \u73af\u5883\u642d\u5efa</code> <code>\u3010\u672a\u5b8c\u3011linux\u5e94\u7528\u5f00\u53d1: \u901a\u8fc7 i2c-dev \u8282\u70b9\u8bbf\u95ee\u8bbe\u5907</code> <code>\u3010\u672a\u5b8c\u3011linux\u5e94\u7528\u5f00\u53d1: v4l2 \u6570\u636e\u83b7\u53d6\u6d41\u7a0b</code> </p>"},{"location":"software/#_9","title":"\u5185\u6838\u5f00\u53d1","text":"<p><code>\u3010\u672a\u5b8c\u3011linux\u5185\u6838\u5f00\u53d1: \u795e\u5947\u7684initcall\u8c03\u7528</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u5f00\u53d1: reboot &amp; poweroff \u6d41\u7a0b\u4fee\u6539</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u5f00\u53d1: \u6dfb\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u5f00\u53d1: \u4e2d\u65ad\u6d41\u7a0b</code> </p>"},{"location":"software/#_10","title":"\u5185\u6838\u63a5\u53e3","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: ioctl</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: procfs</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: sysfs</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u4e2d\u65ad interrupt</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u7b49\u5f85\u961f\u5217 waitqueue</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u5de5\u4f5c\u961f\u5217 workqueue</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u94fe\u8868 link list</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u5185\u6838\u7ebf\u7a0b kernel thread</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u5c0f\u4efb\u52a1 tasklet</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u81ea\u65cb\u9501 spinlock</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u4e92\u65a5\u4f53 mutex</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u539f\u5b50\u91cf atom</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u5b9a\u65f6\u5668 timer</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u5185\u6838\u63a5\u53e3: \u5b8c\u6210 completion</code> </p>"},{"location":"software/#_11","title":"\u5185\u6838\u914d\u7f6e","text":"<p><code>linux\u5185\u6838\u914d\u7f6e: USB\u58f0\u5361\u9a71\u52a8</code> </p>"},{"location":"software/#_12","title":"\u5185\u6838\u5b50\u7cfb\u7edf","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011Clock \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Interrupt \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011\u7535\u6e90\u7ba1\u7406 \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011GPIO \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Pinctrl \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Display \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011V4L2 \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011ALSA \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Input \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011I2C \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011SPI \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011IIO \u5b50\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Regmap \u5b50\u7cfb\u7edf</code> </p>"},{"location":"software/#_13","title":"\u9a71\u52a8\u63a5\u53e3","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u63a5\u53e3: poll</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u63a5\u53e3: e-poll</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u63a5\u53e3: select</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u63a5\u53e3: softirq</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u63a5\u53e3: threaded irq</code> </p>"},{"location":"software/#_14","title":"\u9a71\u52a8\u9002\u914d","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u9002\u914d: i2c: iio: bmp280</code> </p> <p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u9002\u914d: spi: w5500</code> </p> <p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u9002\u914d: i2s:</code> </p> <p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u9002\u914d: fbtft: ssd1306</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u9002\u914d: fbtft: st7735r</code> <code>\u3010\u672a\u5b8c\u3011linux\u9a71\u52a8\u9002\u914d: fbtft: st7789v</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u9002\u914d: fbtft: ssd1327</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u9002\u914d: fbtft: nv3030b</code> <code>\u3010\u672a\u5b8c\u3011linux\u9a71\u52a8\u9002\u914d: sun4i-lradc-keys</code> <code>\u3010\u672a\u5b8c\u3011linux\u9a71\u52a8\u9002\u914d: rtl8188eus</code> <code>\u3010\u672a\u5b8c\u3011linux\u9a71\u52a8\u9002\u914d: USB Gadget g_ether</code> </p>"},{"location":"software/#_15","title":"\u9a71\u52a8\u5f00\u53d1","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a cpufreq \u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a Misc\u8bbe\u5907\u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a led \u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a \u6309\u952e \u9a71\u52a8</code> </p> <p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a I2C \u63a7\u5236\u5668\u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a I2C \u8bbe\u5907\u9a71\u52a8</code> </p> <p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a SPI \u63a7\u5236\u5668\u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a SPI \u8bbe\u5907\u9a71\u52a8</code> </p> <p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a DMA \u63a7\u5236\u5668\u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a FrameBuffer \u8bbe\u5907\u9a71\u52a8</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u9a71\u52a8\u5f00\u53d1: \u7f16\u5199\u4e00\u4e2a USB \u8bbe\u5907\u9a71\u52a8</code> </p>"},{"location":"software/#_16","title":"\u7535\u6e90\u7ba1\u7406","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011linux\u7535\u6e90\u7ba1\u7406: regulator\u5b50\u7cfb\u7edf</code> </p>"},{"location":"software/#_17","title":"\u6742\u9879","text":"<p><code>\u3010\u672a\u5b8c\u3011linux\u6742\u9879: \u547d\u4ee4\u884c\u90ae\u7bb1\u5f00\u53d1\u73af\u5883\u914d\u7f6e</code> <code>\u3010\u672a\u5b8c\u3011linux\u6742\u9879: \u5411\u793e\u533a\u8d21\u732e\u4ee3\u7801</code> <code>\u3010\u672a\u5b8c\u3011linux\u6742\u9879: \u4fee\u6539\u63a7\u5236\u53f0\u5b57\u4f53</code> <code>\u3010\u672a\u5b8c\u3011linux\u6742\u9879: \u4fee\u6539\u63a7\u5236\u53f0\u5149\u6807\u884c\u4e3a</code> </p>"},{"location":"software/#rootfs","title":"rootfs","text":""},{"location":"software/#raw","title":"Raw","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011rootfs: jffs2 \u7684\u4f7f\u7528</code> <code>\u3010\u672a\u5b8c\u3011rootfs: UBIFS \u7684\u4f7f\u7528</code> <code>\u3010\u672a\u5b8c\u3011rootfs: SquashFS \u7684\u4f7f\u7528</code> <code>\u3010\u672a\u5b8c\u3011rootfs: overlayfs \u7684\u4f7f\u7528</code> </p>"},{"location":"software/#buildroot","title":"Buildroot","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011Buildroot: \u5e38\u7528\u5f00\u53d1\u64cd\u4f5c</code> </p>"},{"location":"software/#yocto","title":"Yocto","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011Yocto: \u4ec0\u4e48\u662fYocto\uff1f</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Yocto: \u65b0\u5efa\u4e00\u4e2aYocto\u5de5\u7a0b</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Yocto: \u5982\u4f55\u5728\u73b0\u6709\u7684\u5de5\u7a0b\u4e0a\u5f00\u53d1</code> <code>\u3010\u672a\u5b8c\u3011Yocto: \u5982\u4f55\u6dfb\u52a0\u4e00\u4e2alayer</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011Yocto: \u5982\u4f55\u7f16\u5199\u4e00\u4e2aRecipe</code> <code>\u3010\u672a\u5b8c\u3011Yocto: \u4fee\u6539SDK\u73af\u5883\u52a0\u8f7d\u811a\u672c\u4e2d\u7684flags</code></p>"},{"location":"software/#debian","title":"debian","text":"<p><code>\u3010\u672a\u5b8c\u3011\u4f7f\u7528debootstrap\u6784\u5efadebian\u6839\u6587\u4ef6\u7cfb\u7edf</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011\u4f7f\u7528multistrap\u6784\u5efaemdebian\u6587\u4ef6\u7cfb\u7edf</code> </p>"},{"location":"software/#_18","title":"\u6253\u5305","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011\u624b\u52a8: \u5c06\u56fa\u4ef6\u6253\u5305\u6210SPI-Nor\u683c\u5f0f</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011\u624b\u52a8: \u5c06\u56fa\u4ef6\u6253\u5305\u6210SPI-Nand\u683c\u5f0f</code> <code>\u3010\u5f85\u6dfb\u52a0\u3011\u624b\u52a8: \u5c06\u56fa\u4ef6\u6253\u5305\u6210sdcard/eMMC\u683c\u5f0f</code> </p>"},{"location":"software/#_19","title":"\u8c03\u8bd5","text":"<p><code>qemu</code> </p>"},{"location":"software/#_20","title":"\u70e7\u5f55","text":"<p><code>\u3010\u5f85\u6dfb\u52a0\u3011\u70e7\u5f55: \u901a\u8fc7USB\u6a21\u62df\u677f\u4e0aFlash\u4e3a\u5927\u5bb9\u91cf\u5b58\u50a8\u8bbe\u5907\u8fdb\u884c\u56fa\u4ef6\u70e7\u5f55</code> </p>"},{"location":"software/app/i2c-dev/","title":"I2c dev","text":""},{"location":"software/app/i2c-dev/#linux-i2c-dev","title":"Linux i2c-dev\u9a71\u52a8 \u7528\u6237\u7a7a\u95f4\u64cd\u4f5c\u793a\u4f8b","text":"<p>\u6d4b\u8bd5\u82af\u7247\u4e3aat24c16</p> <p>\u6253\u5f00i2c\u603b\u7ebf\u8282\u70b9 <pre><code>file = open(\"/dev/i2c-0\", O_RDWR);\nif(file &lt; 0){\n    fprintf(stderr, \"failed to open i2c bus\\n\");\n    return -1;\n}\n</code></pre></p> <p>\u8bbe\u7f6e\u5668\u4ef6\u5730\u5740</p> <p>I2C_SLAVE_FORCE  \u8868\u793a\u5373\u4f7f\u8be5\u5730\u5740\u7684i2c\u8bbe\u5907\u5df2\u7ecf\u6709\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4e5f\u5f3a\u5236\u5176\u53ef\u7528 <pre><code>ret = ioctl(file, force?I2C_SLAVE_FORCE:I2C_SLAVE, 0x50);\nif(ret &lt; 0){\n    fprintf(stderr, \"failed to set slave addr\\n\");\n    return -1;\n}\n</code></pre></p>"},{"location":"software/app/i2c-dev/#eeprom-at24c02","title":"EEPROM AT24C02","text":"<p>\u4ee5EEPROM AT24C02\u5b57\u8282\u5199\u4e3a\u4f8b\uff0c \u6d41\u7a0b\u5982\u4e0b <code>S -&gt; Daddr -&gt; Waddr -&gt; data -&gt; T</code> \u8d77\u59cb -&gt; \u5668\u4ef6\u5730\u5740 -&gt; \u76ee\u6807\u5730\u5740 -&gt; \u6570\u636e -&gt; \u7ed3\u675f \u7b26\u5408SMBus\u5982\u4e0b\u5199\u5e8f\u5217 </p> <p>\u4f7f\u7528<code>I2C_SMBUS_WRITE</code>\u51992\u5b57\u8282\uff0c\u8be6\u89c1\u4e8e<code>linux/i2c.h</code>\u4e2d <pre><code>__s32 smbus_access(int file, char read_write, __u8 Waddr, int size, union i2c_smbus_data *data)\n{\n    struct i2c_smbus_ioctl_data msgs;\n\n    msgs.read_write = read_write;\n    msgs.command = Waddr;\n    msgs.size = size;\n    msgs.data = data;\n\n    if(ioctl(file, I2C_SMBUS, &amp;msgs) &lt; 0){\n        perror(\"error, failed to access smbus\");\n        return -errno;\n    }\n\n    return 0;\n}\n\n__s32 write_byte_data(int file, __u32 Waddr, __u32 value)\n{\n    union i2c_smbus_data data;\n    data.byte = value;\n    return smbus_access(file,I2C_SMBUS_WRITE, Waddr, I2C_SMBUS_BYTE_DATA, &amp;data);\n}\n</code></pre></p> <p>at24cxx\u6bcf\u6b21\u5199\u540e\u9700\u8981max 10ms\u65f6\u95f4\u5904\u7406\u5185\u90e8\u5199\u5faa\u73af <pre><code>int waiting_write_cycle()\n{\n    int ret;\n    struct timespec ts;\n    /* waiting for at24cxx internal write cycle. 10ms max */\n    ts.tv_sec =0;\n    ts.tv_nsec = 10 * 1000 * 1000;\n    ret = nanosleep(&amp;ts, NULL);\n    if(ret &lt; 0){\n        fprintf(stderr, \"cannot sleep.\\n\");\n        perror(\"ERRNO: \");\n        return -errno;\n    }\n\n    return 0;\n}\n</code></pre></p>"},{"location":"software/app/i2c-dev/#bh1750","title":"BH1750 \u5149\u5f3a\u4f20\u611f\u5668","text":"<p>\u4ee5 <code>BH1750</code> \u5149\u5f3a\u4f20\u611f\u5668\u4e3a\u4f8b</p> <p>\u5199\u547d\u4ee4 <pre><code>int bh1750_write_cmd(int fd, __u8 cmd)\n{\n    return smbus_access(fd, I2C_SMBUS_WRITE, cmd, I2C_SMBUS_BYTE, NULL);\n}\n</code></pre></p> <p>\u8bfb\u53cc\u5b57 <pre><code>int bh1750_read_word(int fd)\n{\n    union i2c_smbus_data data;\n    struct i2c_smbus_ioctl_data msg;\n\n    msg.read_write = I2C_SMBUS_READ;\n    msg.size = I2C_SMBUS_WORD_DATA;\n    msg.data = &amp;data;\n\n    if(ioctl(fd, I2C_SMBUS, &amp;msg) &lt; 0){\n        perror(\"error, failed to access smbus\");\n        return -errno;\n    }\n    printf(\"raw data: %d\\n\", data.word);\n\n    return data.word;\n}\n</code></pre></p> <p>\u4f4e\u5206\u8fa8\u7387\u6a21\u5f0f\u5149\u5f3a\u8f6c\u6362 \u53c2\u8003\u624b\u518c\u5982\u4e0b\u90e8\u5206 </p> <p>\u53ef\u77e5\uff0c\u5355\u6b21\u4f4e\u5206\u8fa8\u7387\u6a21\u5f0f\u4e0b\uff0c\u76f4\u63a5\u5c06\u53cc\u5b57\u9664\u4ee51.2\u5373\u53ef <pre><code>raw_data = bh1750_read_word(fd);\n\n/* convert raw data to lux */\nlux = raw_data / 1.2;\nprintf(\"lux: %f\\n\", lux);\n</code></pre> </p> <p>\u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6 <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/ioctl.h&gt;\n\n#include &lt;linux/types.h&gt;\n#include &lt;linux/i2c.h&gt;\n#include &lt;linux/i2c-dev.h&gt;\n\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;time.h&gt;\n</code></pre></p>"},{"location":"software/app/rust_setup/","title":"Rust \u73af\u5883\u642d\u5efa","text":""},{"location":"software/app/rust_setup/#_1","title":"\u4ecb\u7ecd","text":"<p>A language empowering everyone to build reliable and efficient software.</p> <p>Rust \u5b98\u7f51\uff1a <code>https://rust-lang.org/</code></p>"},{"location":"software/app/rust_setup/#_2","title":"\u5b89\u88c5","text":""},{"location":"software/app/rust_setup/#windows","title":"Windows","text":"<p>\u4e0b\u8f7d\u5b89\u88c5<code>rustup-init.exe</code></p> <p>\u8fd0\u884c\u540e\uff0c\u8f6c\u5230\u547d\u4ee4\u884c\u754c\u9762 <pre><code>Rust Visual C++ prerequisites\n\nRust requires a linker and Windows API libraries but they don't seem to be\navailable.\n\nThese components can be acquired through a Visual Studio installer.\n\n1) Quick install via the Visual Studio Community installer\n   (free for individuals, academic uses, and open source).\n\n2) Manually install the prerequisites\n   (for enterprise and advanced users).\n\n3) Don't install the prerequisites\n   (if you're targeting the GNU ABI).\n\n&gt;\n</code></pre> \u8fd9\u91cc\u9009\u62e93\uff0c \u6211\u4eec\u4e0d\u9700\u8981\u5b89\u88c5Visual Studio\u6765\u63d0\u4f9b\u6784\u5efa\u5de5\u5177\u3002\u7136\u540e\uff1a <pre><code>The Cargo home directory is located at:\n\n  C:\\Users\\iotah\\.cargo\n\nThis can be modified with the CARGO_HOME environment variable.\n\nThe cargo, rustc, rustup and other commands will be added to\nCargo's bin directory, located at:\n\n  C:\\Users\\iotah\\.cargo\\bin\n\nThis path will then be added to your PATH environment variable by\nmodifying the HKEY_CURRENT_USER/Environment/PATH registry key.\n\nYou can uninstall at any time with rustup self uninstall and\nthese changes will be reverted.\n\nCurrent installation options:\n\n\n   default host triple: x86_64-pc-windows-msvc\n     default toolchain: stable (default)\n               profile: default\n  modify PATH variable: yes\n\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n</code></pre> \u8fd9\u91cc\u9009\u62e91 \u4fdd\u6301\u9ed8\u8ba4\u5c31\u597d</p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6253\u5f00<code>powershell</code>\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5gnu\u7f16\u8bd1\u5de5\u5177\u94fe <pre><code>rustup target add x86_64-pc-windows-gnu\nrustup default stable-x86_64-pc-windows-gnu\n</code></pre></p>"},{"location":"software/app/rust_setup/#linux","title":"Linux","text":""},{"location":"software/app/rust_setup/#macos","title":"MacOS","text":""},{"location":"software/app/rust_setup/#_3","title":"\u6d4b\u8bd5","text":"<pre><code>PS E:\\tests\\rust&gt; cargo new hello\n     Created binary (application) `hello` package\n\nPS E:\\tests\\rust&gt; cd .\\hello\\\nPS E:\\tests\\rust\\hello&gt; cargo build\n   Compiling hello v0.1.0 (E:\\tests\\rust\\hello)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.74s\n\nPS E:\\tests\\rust\\hello&gt; cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\n     Running `target\\debug\\hello.exe`\nHello, world!\n</code></pre>"},{"location":"software/app/rust_setup/#_4","title":"\u5b66\u4e60","text":"<p>\u8fd9\u91cc\u6211\u63a8\u8350b\u7ad9\u6768\u65ed\u8001\u5e08\u7684\u6559\u7a0b <code>https://www.bilibili.com/video/BV1hp4y1k7SV</code></p> <p>\u7b14\u8005\u5efa\u8bae\u8fb9\u770b\u8fb9\u7ec3\uff0c\u4e0d\u8981\u773c\u9ad8\u624b\u4f4e\uff0cRust\u662f\u4e00\u95e8\u9700\u8981\u5927\u91cf\u5b9e\u4f8b\u7ec3\u4e60\u624d\u80fd\u638c\u63e1\u7684\u8bed\u8a00\u3002</p>"},{"location":"software/app/v4l2/","title":"V4L2\u6570\u636e\u83b7\u53d6\u6d41\u7a0b","text":"<p>\u6574\u4e2a\u8fc7\u7a0b\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\u6709\u5982\u4e0b\u51e0\u4e2a: <pre><code>struct v4l2_capability     m_cap;       /* \u9a71\u52a8\u80fd\u529b */\nstruct v4l2_format         m_fmt;       /* \u6570\u636e\u683c\u5f0f */\nstruct v4l2_fmtdesc        m_desc_fmt;  /* \u683c\u5f0f\u63cf\u8ff0 */\nstruct v4l2_requestbuffers m_rb;        /* \u8bf7\u6c42\u5e27\u7f13\u51b2 */\nstruct v4l2_buffer         m_buf;       /* \u6570\u636e\u7f13\u51b2 */\nstruct v4l2_frmsizeenum    m_frmsize;   /* \u5e27\u5927\u5c0f\u63cf\u8ff0 */\n</code></pre></p>"},{"location":"software/app/v4l2/#1","title":"1. \u6253\u5f00\u8bbe\u5907\u8282\u70b9","text":"<pre><code>#define DEFAULT_CAMERA_PATH \"/dev/video0\"\nm_fd = open(DEFAULT_CAMERA_PATH, O_RDWR);\nif(m_fd &lt; 0) {\n    perror(\"open failed.\");\n    return -1;\n}\n</code></pre>"},{"location":"software/app/v4l2/#2-ioctl-vidioc_querycap","title":"2. \u53ef\u4f7f\u7528ioctl VIDIOC_QUERYCAP \u67e5\u8be2\u5f53\u524d\u9a71\u52a8\u80fd\u529b\u3002","text":"<pre><code>memset(&amp;m_cap, 0, sizeof(m_cap));\nif(ioctl(m_fd, VIDIOC_QUERYCAP, &amp;m_cap) &lt; 0) {\n    perror(\"ioctl failed\");\n    return -1;\n}\nif(m_cap.capabilities &amp; V4L2_CAP_VIDEO_CAPTURE) {\n    printf(\"V4L2_CAP_VIDEO_CAPTURE supportted\\n\");\n}\nif(m_cap.capabilities &amp; V4L2_CAP_STREAMING) {\n    printf(\"V4L2_CAP_STREAMING supportted\\n\");\n}\nif(m_cap.capabilities &amp; V4L2_CAP_READWRITE) {\n    printf(\"V4L2_CAP_READWRITE supportted\\n\");\n}\n</code></pre>"},{"location":"software/app/v4l2/#3","title":"3. \u8bbe\u7f6e\u6570\u636e\u683c\u5f0f","text":"<pre><code>/* set data format */\nmemset(&amp;m_fmt, 0x0, sizeof(m_fmt));\nm_fmt.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;\nm_fmt.fmt.pix.width = 640;\nm_fmt.fmt.pix.height = 480;\nm_fmt.fmt.pix.pixelformat = V4L2_PIX_FMT_MJPEG;\nm_fmt.fmt.pix.field       = V4L2_FIELD_ANY;\nif(ioctl(m_fd, VIDIOC_S_FMT, &amp;m_fmt) &lt; 0) {\n    perror(\"ioctl VIDIOC_S_FMT failed!\");\n    return -1;\n}\n</code></pre>"},{"location":"software/app/v4l2/#4","title":"4. \u8bf7\u6c42\u5e27\u7f13\u51b2","text":"<pre><code>/* request framebuffer */\nmemset(&amp;m_rb, 0x0, sizeof(m_rb));\nm_rb.count = DEFAULT_BUFFER_COUNT;\nm_rb.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;\nm_rb.memory = V4L2_MEMORY_MMAP;\nif(ioctl(m_fd, VIDIOC_REQBUFS, &amp;m_rb) &lt; 0) {\n    perror(\"ioctl VIDIOC_REQBUFS failed!\");\n    return -1;\n}\n</code></pre>"},{"location":"software/app/v4l2/#5-buffer","title":"5. \u6620\u5c04buffer\u5230\u7528\u6237\u7a7a\u95f4","text":"<p><code>m_rb.count</code>\u4e0a\u4e00\u6b65\u8bf7\u6c42\u7684BUFFER\u6570\u91cf\uff0c\u5373v4l2_requestbuffers\u4e2d\u5b9a\u4e49 <code>video_buffer</code>\u7528\u6237\u7a7a\u95f4\u7684buffer\u7ed3\u6784\u4f53\uff0c\u7528\u6765\u5b58\u653emmap\u76f8\u5173\u4fe1\u606f\uff0c\u5b9a\u4e49\u5982\u4e0b <code>struct video_buffer {     unsigned int length;     unsigned int offset;     unsigned char *start; };</code></p> <pre><code>m_video_buffers = (struct video_buffer *)calloc(m_rb.count, sizeof(struct video_buffer));\n/* map the framebuffer to userspace */\nfor(int index_buf = 0; index_buf &lt; m_rb.count; index_buf++) {\n    /* calloc the userspace buffer */\n    memset(&amp;m_buf, 0x0, sizeof(m_buf));\n    m_buf.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;\n    m_buf.memory = V4L2_MEMORY_MMAP;\n    m_buf.index = index_buf;\n    if(ioctl(m_fd, VIDIOC_QUERYBUF, &amp;m_buf) &lt; 0) {\n        perror(\"ioctl VIDIOC_QUERYBUF failed!\");\n        return -1;\n    }\n    m_video_buff_size = m_buf.length;\n    /* map to userspace  */\n    m_video_buffers[index_buf].start = (unsigned char *)mmap(NULL,\n                                                             m_buf.length,\n                                                             PROT_READ | PROT_WRITE, \n                                                             MAP_SHARED, \n                                                             m_fd, \n                                                             m_buf.m.offset);\n    if(m_video_buffers[index_buf].start == MAP_FAILED) {\n        perror(\"map video buf failed!\");\n        return -1;\n    }\n    /* queue the buffer */\n    memset(&amp;m_buf, 0x0, sizeof(m_buf));\n    m_buf.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;\n    m_buf.memory = V4L2_MEMORY_MMAP;\n    m_buf.index = index_buf;\n    if(ioctl(m_fd, VIDIOC_QBUF, &amp;m_buf) &lt; 0) {\n        perror(\"ioctl VIDIOC_QBUF failed!\");\n        return -1;\n    }\n}\nprintf(\"v4l2_buf size: %d\\n\", m_buf.length);\n</code></pre>"},{"location":"software/app/v4l2/#6","title":"6.\u542f\u52a8\u6570\u636e\u6d41","text":"<pre><code>enum v4l2_buf_type type;\ntype = V4L2_BUF_TYPE_VIDEO_CAPTURE;\nif(ioctl(m_fd, VIDIOC_STREAMON, &amp;type) &lt; 0) {\n    perror(\"ioctl VIDIOC_STREAMON failed!\");\n    return -1;\n}\n</code></pre>"},{"location":"software/app/v4l2/#7","title":"7.\u83b7\u53d6\u5e27\u6570\u636e\uff08\u5199\u5165\u5230\u6587\u4ef6\uff09","text":"<pre><code>int ret;\nstatic int frame_count=1;\nstruct v4l2_buffer v4lbuffer;\n\n/* pop fb from queue */\nmemset(&amp;v4lbuffer, 0x0, sizeof(v4lbuffer));\nv4lbuffer.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;\nv4lbuffer.memory = V4L2_MEMORY_MMAP;\nif(ioctl(m_fd, VIDIOC_DQBUF, &amp;v4lbuffer) &lt; 0) {\n    perror(\"ioctl VIDIOC_DQBUF failed!\");\n    return ret;\n}\nm_rb_current = v4lbuffer.index;\nm_total_bytes = v4lbuffer.bytesused;\n\n\nint out_fd;\nunsigned char *file_base;\nchar out_fname[50];\nsprintf(out_fname, \"./abc_%04d.jpeg\", frame_count);\n\nLOG_DEBUG(\"***save_fbdata_to_file by mmap.\");\nout_fd = open(out_fname, O_RDWR | O_CREAT | O_TRUNC, 0755);\nif(out_fd &lt; 0) {\n    perror(\"open path failed!\");\n    return out_fd;\n}\n\n/* make file length */\nlseek(out_fd, m_total_bytes - 1, SEEK_END);\nwrite(out_fd, \"\", 1);   /* because of copy on write? */\nprintf(\"total_bytes:%d\\n\", m_total_bytes);\nprintf(\"current:%d\\n\", m_rb_current);\n\n/* write operation here */\nfile_base = (unsigned char *)mmap(NULL, m_total_bytes,\n                                  PROT_READ | PROT_WRITE,\n                                  MAP_SHARED,\n                                  out_fd, 0);\nif(file_base == MAP_FAILED) {\n    perror(\"mmap file failed!\");\n    return -1;\n}\n\nLOG_DEBUG(\"memcpying...\");\nmemcpy(file_base, m_video_buffers[m_rb_current].start, m_total_bytes);\n/* release the resource */\nmunmap(file_base, m_total_bytes);\nclose(out_fd);\nframe_count++;\n\n/* push back fb to queue */\nLOG_DEBUG(\"push back fb to queue\");\nmemset(&amp;v4lbuffer, 0x0, sizeof(v4lbuffer));\nv4lbuffer.index = m_rb_current;\nv4lbuffer.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;\nv4lbuffer.memory = V4L2_MEMORY_MMAP;\nif(ioctl(m_fd, VIDIOC_QBUF, &amp;v4lbuffer) &lt; 0) {\n    perror(\"ioctl VIDIOC_QBUF failed!\");\n    return -1;\n}\n//if(frame_count &gt; 24)exit(1);\nreturn frame_count;\n</code></pre>"},{"location":"software/app/v4l2/#8","title":"8.\u505c\u6b62\u6570\u636e\u6d41","text":"<pre><code>enum v4l2_buf_type type;\ntype = V4L2_BUF_TYPE_VIDEO_CAPTURE;\nif(ioctl(m_fd, VIDIOC_STREAMOFF, &amp;type) &lt; 0) {\n    perror(\"ioctl VIDIOC_STREAMOFF failed!\");\n    return -1;\n}\n</code></pre>"},{"location":"software/app/v4l2/#maincpp","title":"\u6700\u540e\u9644\u4e0amain.cpp","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;time.h&gt;\n#include &lt;signal.h&gt;\n#include \"v4l2_capturer.h\"\n\nv4l2_capturer capturer;\n\nvoid capturer_sigint_handler(int signal)\n{\n    capturer.stop();\n    exit(1);\n}\n\n/* TODO: listen SIGINT and call capturer.stop() when it come. */\nint main(int argc, char const *argv[])\n{\n    int frame_count=0;\n    std::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n\n    /* register signal handler function. */\n    signal(SIGINT, capturer_sigint_handler);\n\n    capturer.init();\n    capturer.query_supported_format_new();\n    capturer.start();\n\n    int i=25;\n    char filename[10];\n\n    while(1){\n        frame_count=capturer.get_frame();\n        if(frame_count==25*10)break;\n    }\n    /*capturer.get_frame();\n    capturer.save_fbdata_to_file_by_mmap(\"./out.jpg\");*/\n    capturer.stop();\n    return 0;\n}\n</code></pre>"},{"location":"software/linux/sound_card/","title":"Sound card","text":""},{"location":"software/linux/sound_card/#config","title":"\u5185\u6838config","text":"<p>\u786e\u5b9a\u5df2\u7ecf\u6253\u5f00\u5bf9\u5e94\u9a71\u52a8\uff0c\u8def\u5f84\u5982\u4e0b <pre><code>Device Drivers -&gt; \n&lt;*&gt;Sound Card Support -&gt; \n&lt;*&gt;   Advanced Linux Sound Architecture -&gt;\n[*]   USB sound devices -&gt; \n&lt;*&gt;   USB Audio/MIDI driver\n</code></pre></p> <p>\u6216\u76f4\u63a5\u641c\u7d22<code>CONFIG_SND_USB_AUDIO</code> </p>"},{"location":"software/linux/sound_card/#_1","title":"\u5b89\u88c5\u5982\u4e0b\u8f6f\u4ef6\u5305","text":"<pre><code>apt install alsa-utils mplayer\n</code></pre>"},{"location":"software/linux/sound_card/#usblog","title":"\u63a5\u5165USB\u58f0\u5361\u65f6log","text":"<pre><code>root@main:~# [ 1379.028364] usb 1-1.2: new full-speed USB device number 6 using musb-hdrc\n[ 1379.304380] input: C-Media Electronics Inc. USB Audio Device as /devices/platform/soc/1c13000.usb/musb-hdrc.1.auto/usb1/1-1/1-1.2/1-1.2:1.3/0003:0D8C:0014.0002/input/input2\n[ 1379.389156] hid-generic 0003:0D8C:0014.0002: input: USB HID v1.00 Device [C-Media Electronics Inc. USB Audio Device] on usb-musb-hdrc.1.auto-1.2/input3\n</code></pre>"},{"location":"software/linux/sound_card/#_2","title":"\u67e5\u770b\u7cfb\u7edf\u5185\u58f0\u5361\u8bbe\u5907","text":"<pre><code>root@main:~# cat /proc/asound/cards\n 0 [sun4icodec     ]: sun4i-codec - sun4i-codec\n                      sun4i-codec\n 1 [Device         ]: USB-Audio - USB Audio Device\n                      C-Media Electronics Inc. USB Audio Device at usb-musb-hdrc.1.auto-1.2, full spe\n</code></pre>"},{"location":"software/linux/sound_card/#_3","title":"\u4fee\u6539\u7f3a\u7701\u914d\u7f6e\u6587\u4ef6","text":"<p><code>/etc/asound.conf</code>, 1 \u4ee3\u8868\u58f0\u5361id <pre><code>defaults.ctl.card 1\ndefaults.pcm.card 1\ndefaults.timer.card 1\n</code></pre></p>"},{"location":"software/linux/sound_card/#_4","title":"\u6d4b\u8bd5\u97f3\u9891\u8f93\u51fa","text":"<p>plughw:1,0   1\u4e3a\u58f0\u5361id 0\u4e3a\u6b21\u8bbe\u5907\u53f7 \u6d4b\u8bd5\u97f3\u9891: Tell It to My Heart (Instrumental) Franck Choppin</p> <pre><code>root@main:~# aplay -D plughw:1,0 ./Tell_it_to_my_heart_fc.wav\nPlaying WAVE './Tell_it_to_my_heart_fc.wav' : Signed 16 bit Little Endian, Rate 44100 Hz, Stereo\n</code></pre>"},{"location":"software/linux/sound_card/#_5","title":"\u6d4b\u8bd5\u89c6\u9891\u97f3\u9891\u8f93\u51fa","text":"<pre><code>root@main:~# mplayer -i test.mp4\n</code></pre>"},{"location":"software/linux/sound_card/#_6","title":"\u8c03\u6574\u97f3\u91cf","text":"<pre><code>root@main:~# alsamixer\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 AlsaMixer v1.2.4 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Card: USB Audio Device                               F1:  Help               \u2502\n\u2502 Chip: USB Mixer                                      F2:  System information \u2502\n\u2502 View: F3:[Playback] F4: Capture  F5: All             F6:  Select sound card  \u2502\n\u2502 Item: Speaker [dB gain: -36.00, -36.00]              Esc: Exit               \u2502\n\u2502                                                                              \u2502\n\u2502                  \u250c\u2500\u2500\u2510               \u250c\u2500\u2500\u2510                                     \u2502\n\u2502                  \u2502  \u2502               \u2502  \u2502                                     \u2502\n\u2502                  \u2502  \u2502               \u2502  \u2502                                     \u2502\n\u2502                  \u2502  \u2502               \u2502  \u2502                                     \u2502\n\u2502                  \u2502  \u2502               \u2502  \u2502                                     \u2502\n\u2502                  \u2502  \u2502               \u2502  \u2502                                     \u2502\n\u2502                  \u2502  \u2502               \u2502\u2592\u2592\u2502                                     \u2502\n\u2502                  \u2502  \u2502               \u2502\u2592\u2592\u2502                                     \u2502\n\u2502                  \u2502  \u2502               \u2502\u2592\u2592\u2502                                     \u2502\n\u2502                  \u2502\u2592\u2592\u2502               \u2502\u2592\u2592\u2502                                     \u2502\n\u2502                  \u2502\u2592\u2592\u2502               \u2502\u2592\u2592\u2502                                     \u2502\n\u2502                  \u2502\u2592\u2592\u2502               \u2502\u2592\u2592\u2502                                     \u2502\n\u2502                  \u251c\u2500\u2500\u2524               \u251c\u2500\u2500\u2524               \u250c\u2500\u2500\u2510                  \u2502\n\u2502                  \u2502OO\u2502               \u2502MM\u2502               \u2502OO\u2502                  \u2502\n\u2502                  \u2514\u2500\u2500\u2518               \u2514\u2500\u2500\u2518               \u2514\u2500\u2500\u2518                  \u2502\n\u2502                 25&lt;&gt;25               56                                      \u2502\n\u2502          &lt;     Speaker      &gt;       Mic         Auto Gain Control            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"software/linux/sound_card/#x","title":"X\u5e94\u7528\u97f3\u9891\u8f93\u51fa\uff0c\u6682\u672a\u5b9e\u9a8c","text":""},{"location":"software/linux/driver/fbtft_ssd1306/","title":"Fbtft ssd1306","text":"<p>\u4e3b\u7ebflinux f1c200s fbtft ssd1306 \u9002\u914d\u8bb0\u5f55</p> <p>menuconfig\u4e2d\u5f00\u542fstaging drivers\u4e0bsmall tft\u83dc\u5355\u4e2d fb ssd1306, \u9009\u62e9*\u7f16\u8bd1\u8fdb\u5185\u6838\u3002</p> <p></p> <p>\u4fee\u6539pio\u8282\u70b9\u5982\u4e0b\uff0c\u6dfb\u52a0 spi1 \u590d\u7528\u5f15\u811a\u3002 <pre><code>pio: pinctrl@1c20800 {\n                        compatible = \"allwinner,suniv-pinctrl\";\n                        reg = &lt;0x01c20800 0x400&gt;;\n                        interrupts = &lt;38&gt;, &lt;39&gt;, &lt;40&gt;;\n                        clocks = &lt;&amp;ccu CLK_BUS_PIO&gt;, &lt;&amp;osc24M&gt;, &lt;&amp;osc32k&gt;;\n                        clock-names = \"apb\", \"hosc\", \"losc\";\n                        gpio-controller;\n                        interrupt-controller;\n                        #interrupt-cells = &lt;3&gt;;\n                        #gpio-cells = &lt;3&gt;;\n\n                        spi0_pins_a: spi0-pins-pc {\n                                pins = \"PC0\", \"PC1\", \"PC2\", \"PC3\";\n                                function = \"spi0\";\n                        };\n\n                        spi1_pins_a: spi1-pins-pa {\n                                pins = \"PA0\", \"PA1\", \"PA2\", \"PA3\";\n                                function = \"spi1\";\n                        };\n\n                        lcd_rgb666_pins: lcd-rgb666-pins {\n                                pins = \"PD0\", \"PD1\", \"PD2\", \"PD3\", \"PD4\",\n                                       \"PD5\", \"PD6\", \"PD7\", \"PD8\", \"PD9\",\n                                       \"PD10\", \"PD11\", \"PD12\", \"PD13\", \"PD14\",\n                                       \"PD15\", \"PD16\", \"PD17\", \"PD18\", \"PD19\",\n                                       \"PD20\", \"PD21\";\n                                function = \"lcd\";\n                        };\n\n                        uart0_pins_a: uart-pins-pe {\n                                pins = \"PE0\", \"PE1\";\n                                function = \"uart0\";\n                        };\n\n                        mmc0_pins: mmc0-pins {\n                                pins = \"PF0\", \"PF1\", \"PF2\", \"PF3\", \"PF4\", \"PF5\";\n                                function = \"mmc0\";\n                        };\n                };\n</code></pre></p> <p>\u4fee\u6539spi1\u8282\u70b9\u5982\u4e0b <pre><code>&amp;spi1 {\n        pinctrl-names = \"default\";\n        pinctrl-0 = &lt;&amp;spi1_pins_a&gt;;\n        status = \"okay\";\n        spi-max-frequency = &lt;50000000&gt;;\n        ssd1306: ssd1306@0 {\n                #address-cells = &lt;1&gt;;\n                #size-cells = &lt;1&gt;;\n                compatible = \"solomon,ssd1306\";\n                reg = &lt;0&gt;;\n                spi-max-frequency = &lt;50000000&gt;;\n                buswidth = &lt;8&gt;;\n                rotate = &lt;0&gt;;\n                fps = &lt;30&gt;;\n                spi-cpol;\n                spi-cpha;\n                reset-gpios = &lt;&amp;pio 4 11 GPIO_ACTIVE_HIGH&gt;;\n                dc-gpios = &lt;&amp;pio 4 12 GPIO_ACTIVE_LOW&gt;;\n                debug = &lt;1&gt;;\n        };\n};\n</code></pre></p> <pre><code>[    1.028749] fbtft_of_value: buswidth = 8\n[    1.032829] fbtft_of_value: debug = 1\n[    1.036525] fbtft_of_value: rotate = 0\n[    1.040289] fbtft_of_value: fps = 30\n[    1.044381] fb_ssd1306 spi1.0: fbtft_request_one_gpio: 'reset-gpios' = GPIO139\n[    1.051982] fb_ssd1306 spi1.0: fbtft_request_one_gpio: 'dc-gpios' = GPIO140\n[    1.194658] Console: switching to colour frame buffer device 16x8\n[    1.202163] graphics fb0: fb_ssd1306 frame buffer, 128x64, 16 KiB video memory, 4 KiB buffer memory, fps=33, spi1.0 at 50 MHz\n</code></pre>"},{"location":"software/linux/driver/fbtft_ssd1306/#_1","title":"\u6700\u540e\uff0c\u4e0a\u5f20\u6548\u679c\u56fe","text":""},{"location":"software/linux/driver/fbtft_st7789v/","title":"Fbtft st7789v","text":""},{"location":"software/linux/driver/fbtft_st7789v/#hamsterbear-linux-st7789v-fbtft","title":"HamsterBear Linux ST7789V FBTFT\u9a71\u52a8\u9002\u914d","text":"<ul> <li><code>\u5e73\u53f0</code> - F1C200s</li> <li><code>Linux\u7248\u672c</code> - 5.18</li> <li><code>TFT\u5c4f</code> - 1.69\u5bf8IPS\u9ad8\u6e05ST7789V</li> </ul>"},{"location":"software/linux/driver/fbtft_st7789v/#spi0","title":"\u4fee\u6539\u8bbe\u5907\u6811\uff0c\u5728spi0\u8282\u70b9\u4e0b\u6dfb\u52a0","text":"<pre><code>&amp;spi0 {\n        pinctrl-names = \"default\";\n        pinctrl-0 = &lt;&amp;spi0_pd_pins&gt;;\n        status = \"okay\";\n        spi-max-frequency = &lt;50000000&gt;;\n\n        st7789v: st7789v@0 {\n                #address-cells = &lt;1&gt;;\n                #size-cells = &lt;1&gt;;\n                compatible = \"sitronix,st7789v\";\n                reg = &lt;0&gt;;\n                spi-max-frequency = &lt;50000000&gt;;\n                rgb;\n                buswidth = &lt;8&gt;;\n                rotate = &lt;90&gt;;\n                fps = &lt;60&gt;;\n                spi-cpol;\n                spi-cpha;\n                reset-gpios = &lt;&amp;pio 4 10 GPIO_ACTIVE_HIGH&gt;;     /* PE10 */\n                dc-gpios = &lt;&amp;pio 2 3 GPIO_ACTIVE_LOW&gt;;          /* PC3 */\n                debug = &lt;1&gt;;\n        };\n};\n</code></pre>"},{"location":"software/linux/driver/fbtft_st7789v/#config","title":"\u786e\u5b9a\u5185\u6838config\u6253\u5f00","text":"<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cfbtft\u7684\u9a71\u52a8\u53ea\u6709\u5728\u5185\u6838framebuffer\u76f8\u5173\u9a71\u52a8\u5f00\u542f\u540e\u624d\u4f1a\u51fa\u73b0\uff0c\u6240\u4ee5\u8981\u5148\u5f00\u542ffb\u9a71\u52a8\u652f\u6301 Device Drivers -&gt; Graphics support -&gt; Frame buffer Devices  ---&gt;\uff0c\u7f16\u8bd1\u8fdb\u5185\u6838 </p> <p>\u53ef\u6839\u636e\u9700\u8981\u5c06\u63a7\u5236\u53f0\u6620\u5c04\u5230fb\u529f\u80fd\u5f00\u542f </p> <p>\u8fd9\u91cc\u6211\u540c\u65f6\u9009\u62e9\u4e8616\u8272\u7684Tux \u542f\u52a8logo </p> <p>\u7136\u540e\u5bfb\u627efbtft\u9a71\u52a8\uff0c\u8def\u5f84\u5982\u4e0b\uff1a Device Drivers -&gt; Staging drivers -&gt; Support for small TFT LCD display modules  ---&gt;\uff0c\u7f16\u8bd1\u8fdb\u5185\u6838 </p>"},{"location":"software/linux/driver/fbtft_st7789v/#driversstagingfbtftfb_st7789vc","title":"\u4fee\u6539<code>drivers/staging/fbtft/fb_st7789v.c</code>\uff0c\u5982\u4e0b\u51e0\u5904","text":"<ol> <li>\u4fee\u6539init\u51fd\u6570\uff0c\u8be5\u521d\u59cb\u5316\u5e8f\u5217\u53c2\u8003\u81ea\u5382\u5bb6 <pre><code>static int init_display(struct fbtft_par *par)\n{\n        int rc;\n\n        par-&gt;fbtftops.reset(par);\n        mdelay(100);\n        rc = init_tearing_effect_line(par);\n        if (rc)\n                return rc;\n\n        write_reg(par, 0x11); //Sleep out\n        mdelay(120);     //Delay 120ms\n\n        //************* Start Initial Sequence **********//\n        write_reg(par, 0x36, 0x00);\n\n        write_reg(par, 0x3A, 0x05);\n\n        write_reg(par, 0xB2,0x0C,0x0C,0x00,0x33,0x33);\n\n        write_reg(par, 0xB7,0x35);\n\n        /* VCOM  = 1.35V */\n        write_reg(par, 0xBB, 0x32);\n\n        write_reg(par, 0xC2, 0x01);\n\n        /* GVDD = 4.8V */\n        write_reg(par, 0xC3,0x15);\n\n        /* VDX = 0V */\n        write_reg(par, 0xC4, 0x20);\n\n        /* FPS = 60Hz */\n        write_reg(par, 0xC6,0x0F);\n\n        write_reg(par, 0xD0, 0xA4, 0xA1);\n\n        write_reg(par, 0xE0,0xD0,0x08,0x0E,0x09,0x09,0x05,0x31,0x33,0x48,0x17,0x14,0x15,0x31,0x34);\n\n        write_reg(par, 0xE1,0xD0,0x08,0x0E,0x09,0x09,0x15,0x31,0x33,0x48,0x17,0x14,0x15,0x31,0x34);\n\n        write_reg(par, MIPI_DCS_ENTER_INVERT_MODE);\n\n        write_reg(par, MIPI_DCS_SET_DISPLAY_ON);\n\n        return 0;\n}\n</code></pre> 2\uff0c \u4fee\u6539display\u53c2\u6570 <pre><code>static struct fbtft_display display = {\n        .regwidth = 8,\n        .width = 240,\n        .height = 280,  /* \u6839\u636e\u4f60\u7684\u5c4f\u5e55\u5206\u8fa8\u7387\u786e\u5b9a */\n        .gamma_num = 2,\n        .gamma_len = 14,\n        .gamma = HSD20_IPS_GAMMA,\n        .fbtftops = {\n                .init_display = init_display,\n                .write_vmem = write_vmem,\n                .set_var = set_var,\n                .set_gamma = set_gamma,\n                .blank = blank,\n        },\n};\n</code></pre></li> </ol>"},{"location":"software/linux/driver/fbtft_st7789v/#driversstagingfbtftfbtft-corec","title":"\u4fee\u6539<code>drivers/staging/fbtft/fbtft-core.c</code>\uff0c\u5982\u4e0b\u51e0\u5904","text":"<ol> <li> <p>\u6dfb\u52a0\u5934\u6587\u4ef6 <pre><code>#include &lt;linux/of.h&gt;\n#include &lt;linux/of_gpio.h&gt;\n</code></pre></p> </li> <li> <p>\u4fee\u6539<code>fbtft_request_one_gpio</code>\u51fd\u6570 <pre><code>static int fbtft_request_one_gpio(struct fbtft_par *par,\n                                  const char *name, int index,\n                                  struct gpio_desc **gpiop)\n{\n        int ret, gpio;\n        struct device *dev = par-&gt;info-&gt;device;\n        struct device_node *np = dev-&gt;of_node;\n        enum of_gpio_flags flags;\n\n        /* Get GPIO from device tree */\n        gpio = of_get_named_gpio_flags(np, name, index, &amp;flags);\n        if (gpio &lt; 0) {\n                return 0;\n        }\n\n\n        ret = devm_gpio_request_one(dev, gpio,\n                        (flags &amp; OF_GPIO_ACTIVE_LOW)?GPIOF_OUT_INIT_LOW:GPIOF_OUT_INIT_HIGH,\n                        dev-&gt;driver-&gt;name);\n        if (ret) {\n                dev_err(dev, \"Failed to request %s GPIO%d\\n\", name, gpio);\n                return -ENODEV;\n        }\n\n        *gpiop = gpio_to_desc(gpio);\n\n        fbtft_par_dbg(DEBUG_REQUEST_GPIOS, par, \"%s: '%s' GPIO%d\\n\",\n                      __func__, name, gpio);\n\n        return ret;\n}\n</code></pre></p> </li> <li> <p>\u4fee\u6539<code>fbtft_request_gpios</code>\u51fd\u6570 <pre><code>static int fbtft_request_gpios(struct fbtft_par *par)\n{\n        int i;\n        int ret;\n\n        ret = fbtft_request_one_gpio(par, \"reset-gpios\", 0, &amp;par-&gt;gpio.reset);\n        if (ret)\n                return ret;\n        ret = fbtft_request_one_gpio(par, \"dc-gpios\", 0, &amp;par-&gt;gpio.dc);\n        if (ret)\n                return ret;\n        ret = fbtft_request_one_gpio(par, \"rd-gpios\", 0, &amp;par-&gt;gpio.rd);\n        if (ret)\n                return ret;\n        ret = fbtft_request_one_gpio(par, \"wr-gpios\", 0, &amp;par-&gt;gpio.wr);\n        if (ret)\n                return ret;\n        ret = fbtft_request_one_gpio(par, \"cs-gpios\", 0, &amp;par-&gt;gpio.cs);\n        if (ret)\n                return ret;\n        ret = fbtft_request_one_gpio(par, \"latch-gpios\", 0, &amp;par-&gt;gpio.latch);\n        if (ret)\n                return ret;\n        for (i = 0; i &lt; 16; i++) {\n                ret = fbtft_request_one_gpio(par, \"db-gpios\", i,\n                                             &amp;par-&gt;gpio.db[i]);\n                if (ret)\n                        return ret;\n                ret = fbtft_request_one_gpio(par, \"led-gpios\", i,\n                                             &amp;par-&gt;gpio.led[i]);\n                if (ret)\n                        return ret;\n                ret = fbtft_request_one_gpio(par, \"aux-gpios\", i,\n                                             &amp;par-&gt;gpio.aux[i]);\n                if (ret)\n                        return ret;\n        }\n\n        return 0;\n}\n</code></pre></p> </li> <li> <p>\u4fee\u6539<code>fbtft_set_win_addr</code>\u51fd\u6570 \u56e0\u4e3ast7789v\u652f\u6301\u5230240x320\u7684\u5206\u8fa8\u7387\uff0c\u4f46\u662f\u6211\u8fd9\u5757\u5c4f\u662f240*280\uff0c\u6240\u4ee5x start\u548cx end\u90fd\u6709\u504f\u79fb, \u8fd9\u4e2a\u504f\u79fb\u503c\u4e5f\u662f\u6211\u4ece\u5382\u5bb6\u6e90\u7801\u4e2d\u53c2\u8003\u7684\u3002 <pre><code>static void fbtft_set_addr_win(struct fbtft_par *par, int xs, int ys, int xe,\n                               int ye)\n{\n        xs = xs + 20;\n        xe = xe + 20;\n        write_reg(par, MIPI_DCS_SET_COLUMN_ADDRESS,\n                  (xs &gt;&gt; 8) &amp; 0xFF, xs &amp; 0xFF, (xe &gt;&gt; 8) &amp; 0xFF, xe &amp; 0xFF);\n\n        write_reg(par, MIPI_DCS_SET_PAGE_ADDRESS,\n                  (ys &gt;&gt; 8) &amp; 0xFF, ys &amp; 0xFF, (ye &gt;&gt; 8) &amp; 0xFF, ye &amp; 0xFF);\n\n        write_reg(par, MIPI_DCS_WRITE_MEMORY_START);\n}\n</code></pre></p> </li> <li> <p>\u4fee\u6539<code>fbtft_reset</code>\u51fd\u6570 st7789v\u662flow level reset <pre><code>static void fbtft_reset(struct fbtft_par *par)\n{\n        if (!par-&gt;gpio.reset)\n                return;\n\n        fbtft_par_dbg(DEBUG_RESET, par, \"%s()\\n\", __func__);\n\n        gpiod_set_value_cansleep(par-&gt;gpio.reset, 1);\n        usleep_range(20, 40);\n        gpiod_set_value_cansleep(par-&gt;gpio.reset, 0);   /* Low level reset */\n        msleep(120);\n\n        gpiod_set_value_cansleep(par-&gt;gpio.reset, 1);  /* Activate chip */\n}\n</code></pre></p> </li> </ol>"},{"location":"software/linux/driver/fbtft_st7789v/#patch","title":"\u6700\u540e\u9644\u4e0a\u4e24\u4e2a\u6587\u4ef6\u7684\u76f4\u89c2patch","text":""},{"location":"software/linux/driver/rtl8188eus/","title":"Rtl8188eus","text":""},{"location":"software/linux/driver/rtl8188eus/#hamsterbear-f1c200s-linux-v517-rtl8188eus","title":"HamsterBear F1C200s Linux v5.17 RTL8188EUS \u9002\u914d","text":"<ul> <li> <p><code>\u5e73\u53f0</code> - F1C200s</p> </li> <li> <p><code>Linux\u7248\u672c</code> - 5.17.2</p> </li> <li> <p><code>Buildroot</code> - v2022.2</p> </li> </ul> <p>\u5e95\u677f\u505a\u4e86USB HUB\uff0c \u7528\u7684\u662fFE1.1s\uff0c\u4e00\u5171\u505a\u4e864\u8def\uff0c\u5176\u4e2d\u4e00\u8def\u62ff\u6765\u8fdewifi\u6a21\u5757\uff0c\u53e6\u5916 3\u4e2a\u76f4\u63a5\u505a\u6210\u4e86USB Type-A\u63a5\u53e3  </p> <p></p>"},{"location":"software/linux/driver/rtl8188eus/#kernel-menuconfig","title":"\u8fdb\u5165 kernel menuconfig \u6253\u5f00\u5982\u4e0b\u9009\u9879","text":"<p>\u9700\u8981\u5148\u6253\u5f00IE802.11\u534f\u8bae\u6808\u652f\u6301 </p> <p></p>"},{"location":"software/linux/driver/rtl8188eus/#buildroot","title":"buildroot\u4e2d\u9009\u62e9\u5982\u4e0b\u8f6f\u4ef6\u5305","text":"<p>\uff08\u4e3b\u8981\u662fnet-tools iw\u5de5\u5177\u5305\uff09</p>"},{"location":"software/linux/driver/rtl8188eus/#_1","title":"\u542f\u52a8\u7cfb\u7edf\u540e","text":""},{"location":"software/linux/driver/rtl8188eus/#1-musb-host","title":"1. \u4fee\u6539musb \u4e3ahost\u6a21\u5f0f","text":"<pre><code>echo host &gt; /sys/devices/platform/soc/1c13000.usb/musb-hdrc.1.auto/mode\n\n[ 1379.560411] phy phy-1c13400.phy.0: Changing dr_mode to 1\n[ 1380.223933] usb 1-1: new high-speed USB device number 2 using musb-hdrc\n[ 1380.405841] hub 1-1:1.0: USB hub found\n[ 1380.409764] hub 1-1:1.0: 4 ports detected\n[ 1380.833942] usb 1-1.1: new high-speed USB device number 3 using musb-hdrc\n[ 1381.146412] r8188eu: module is from the staging directory, the quality is unknown, you have been warned.\n[ 1381.170314] Chip Version Info: CHIP_8188E_Normal_Chip_TSMC_D_CUT_1T1R_RomVer(0)\n[ 1381.205020] EEPROM ID = 0x8129\n[ 1381.212399] usbcore: registered new interface driver r8188eu\n</code></pre> <p>ip addr \u53ef\u4ee5\u770b\u5230\u5bf9\u5e94wifi\u63a5\u53e3 <pre><code># ip addr\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n2: usb0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop qlen 1000\n    link/ether 52:8c:6f:55:1f:64 brd ff:ff:ff:ff:ff:ff\n3: wlan0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop qlen 1000\n    link/ether 54:ef:33:d6:5e:72 brd ff:ff:ff:ff:ff:ff\n</code></pre></p>"},{"location":"software/linux/driver/rtl8188eus/#2","title":"2. \u56fa\u4ef6\u7684\u5bfc\u5165","text":"<p>\u6a21\u5757\u5728\u4e0a\u7535\u7684\u65f6\u5019\u4f1a\u52a0\u8f7d\u56fa\u4ef6<code>/lib/firmware/rtlwifi/rtl8188eufw.bin</code> \u8fd9\u4e2a\u56fa\u4ef6\u53ef\u4ee5\u76f4\u63a5\u4ece\u4f60\u4eeclinux pc\u673a\u76f8\u540c\u8def\u5f84\u4e3a\u6b62\u62f7\u51fa\u6765\uff0c\u8fd9\u662f\u6211\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u8fd9\u6837\u505a\u7684\uff0c \u5176\u5b9e\u4f60\u4eec\u5b8c\u5168\u53ef\u4ee5\u5728\u7f16\u8bd1\u73af\u8282\u641e\u5b9a\uff0c\u5728buildroot\u4e2d\uff0c\u627e\u5230 Target packages -&gt; Hardware handling -&gt; Firmware \u7136\u540e\u52fe\u9009\u597d\u5bf9\u5e94\u56fa\u4ef6\u5c31\u53ef\u4ee5\u4e86\uff01\u5982\u679c\u4e0d\u786e\u5b9a\uff0c\u90a3\u5c31\u5168\u9009\u4e0a\uff0c\u53ea\u8981\u4f60\u5b58\u50a8\u7a7a\u95f4\u591f\u5927\u5c31\u884c!</p>"},{"location":"software/linux/driver/rtl8188eus/#3-wifi","title":"3. \u8fde\u63a5\u5230wifi","text":""},{"location":"software/linux/driver/rtl8188eus/#_2","title":"\u4e0a\u7535","text":"<pre><code># ifconfig wlan0 up\n[ 1687.899356] R8188EU: Firmware Version 11, SubVersion 1, Signature 0x88e1\n[ 1688.274263] MAC Address = 54:ef:33:d6:5e:72\n</code></pre>"},{"location":"software/linux/driver/rtl8188eus/#wifi","title":"\u626b\u63cf\u9644\u8fd1wifi","text":"<pre><code># iwlist wlan0 scan\nwlan0     Scan completed :\n          Cell 01 - Address: 8C:DE:F9:EC:55:8B\n                    ESSID:\"\"\n                    Protocol:IEEE 802.11bgn\n                    Mode:Master\n                    Frequency:2.422 GHz (Channel 3)\n                    Encryption key:off\n                    Bit Rates:144 Mb/s\n                    Quality:0  Signal level:0  Noise level:0\n          Cell 02 - Address: 96:DE:F9:EC:55:8B\n                    ESSID:\"kernelbot\"\n                    Protocol:IEEE 802.11bgn\n                    Mode:Master\n                    Frequency:2.422 GHz (Channel 3)\n                    Encryption key:off\n                    Bit Rates:144 Mb/s\n                    IE: Unknown: DD820050F204104A0001101044000101103B00010310470010876543219ABCDEF012340AA3C33C838F102100067869616F6D69102300045241383110240004303030321042000531323334351054000800060050F2040001101100135849414F4D495F524F555445525F4755455354100800020000103C0001031049000600372A000120\n                    Quality:0  Signal level:0  Noise level:0\n</code></pre>"},{"location":"software/linux/driver/rtl8188eus/#wifi_1","title":"\u8fde\u63a5\u5230wifi","text":"<pre><code># iwconfig wlan0 essid kernelbot\n# iwconfig\nlo        no wireless extensions.\n\nusb0      no wireless extensions.\n\nwlan0     IEEE 802.11bgn  ESSID:\"kernelbot\"  Nickname:\"&lt;WIFI@REALTEK&gt;\"\n          Mode:Managed  Frequency:2.422 GHz  Access Point: 96:DE:F9:EC:55:8B\n          Bit Rate:72.2 Mb/s   Sensitivity:0/0\n          Retry:off   RTS thr:off   Fragment thr:off\n          Encryption key:off\n          Power Management:off\n          Link Quality=100/100  Signal level=0 dBm  Noise level=0 dBm\n          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0\n          Tx excessive retries:0  Invalid misc:0   Missed beacon:0\n</code></pre>"},{"location":"software/linux/driver/rtl8188eus/#ip","title":"\u8bf7\u6c42ip","text":"<pre><code># udhcpc -i wlan0\nudhcpc: started, v1.35.0\nudhcpc: broadcasting discover\nudhcpc: broadcasting select for 192.168.19.234, server 192.168.19.1\nudhcpc: lease of 192.168.19.234 obtained from 192.168.19.1, lease time 43200\ndeleting routers\nadding dns 192.168.19.1\n</code></pre>"},{"location":"software/linux/driver/rtl8188eus/#_3","title":"\u5c1d\u8bd5\u8bbf\u95ee\u5916\u7f51(\u6ca1\u63a5\u5929\u7ebf)","text":"<pre><code># ping baidu.com\nPING baidu.com (220.181.38.148): 56 data bytes\n64 bytes from 220.181.38.148: seq=0 ttl=50 time=201.784 ms\n64 bytes from 220.181.38.148: seq=1 ttl=50 time=225.148 ms\n64 bytes from 220.181.38.148: seq=2 ttl=50 time=15.126 ms\n64 bytes from 220.181.38.148: seq=3 ttl=50 time=116.496 ms\n64 bytes from 220.181.38.148: seq=4 ttl=50 time=115.356 ms\n64 bytes from 220.181.38.148: seq=5 ttl=50 time=21.000 ms\n64 bytes from 220.181.38.148: seq=6 ttl=50 time=114.353 ms\n64 bytes from 220.181.38.148: seq=7 ttl=50 time=122.406 ms\n^C\n--- baidu.com ping statistics ---\n8 packets transmitted, 8 packets received, 0% packet loss\nround-trip min/avg/max = 15.126/116.458/225.148 ms\n</code></pre>"},{"location":"software/linux/driver/rtl8188eus/#_4","title":"\u66f4\u591a\u73a9\u6cd5","text":""},{"location":"software/linux/driver/rtl8188eus/#1-mqtt","title":"1. MQTT\u4e0e\u4e0a\u4f4d\u673a\u901a\u4fe1","text":"<pre><code>    \u5927\u6982\u4e1a\u52a1\u5c31\u662f \u626b\u63cf\u4f20\u611f\u5668\u6570\u636e\u4e0a\u62a5\u7ed9\u4e0a\u4f4d\u673a\n    \u4e0a\u4f4d\u673a\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4ece\u673a\u884c\u4e3a\n</code></pre>"},{"location":"software/linux/driver/rtl8188eus/#2_1","title":"2. \u79fb\u690d\u6d4f\u89c8\u5668\u8bbf\u95ee\u7f51\u9875","text":""},{"location":"software/linux/driver/rtl8188eus/#3-nfs","title":"3. \u6302\u8f7d\u4e3b\u673aNFS\u6587\u4ef6\u7cfb\u7edf","text":""},{"location":"software/linux/driver/rtl8188eus/#4-web","title":"4. \u505a\u5185\u7f51WEB\u670d\u52a1\u5668","text":""},{"location":"software/linux/driver/rtl8188eus/#5","title":"5. \u6682\u65f6\u6ca1\u60f3\u5230","text":""},{"location":"software/linux/driver/rtl8188eus/#_5","title":"\u603b\u7ed3\u4ee5\u53ca\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898","text":""},{"location":"software/linux/driver/rtl8188eus/#_6","title":"\u603b\u7ed3","text":"<p>\u56e0\u4e3a\u4e00\u5f00\u59cb\u8bbe\u8ba1\u601d\u8def\u5c31\u6bd4\u8f83\u6e05\u6670\uff0c\u6240\u4ee5\u6574\u4e2a\u8fc7\u7a0b\u8fd8\u662f\u6bd4\u8f83\u987a\u5229\u7684\uff0c\u5e95\u677f\u8bbe\u8ba1\u7684\u65f6\u5019\uff0c\u56e0\u4e3a \u7c97\u5fc3\u5927\u610f\u8fde\u9519\u4e86\u7ebf\uff0c\u6240\u4ee5\u53c8\u518d\u7248\u4e86\u3002</p> <p>\u5185\u6838 buildroot\u90a3\u4e24\u5757\u7b49\u6709\u7a7a\u518d\u5199\u8be6\u7ec6\u70b9\u3002</p> <p>\u6709\u95ee\u9898\u53ef\u4ee5\u8054\u7cfb\u6211\u90ae\u7bb1(writeforever@foxmail.com)</p>"},{"location":"software/linux/driver/rtl8188eus/#_7","title":"\u95ee\u9898","text":"<ol> <li>\u6a21\u5757\u4e0a\u7535\u540e\u626b\u63cf\u81ea\u52a8\u65ad\u5f00\u8fde\u63a5     \u540e\u6765\u53d1\u73b0\u662f\u4f9b\u7535\u4e0d\u591f\uff0c\u4e00\u5f00\u59cb\u4e00\u76f4\u7528\u7535\u8111USB\u63a5\u53e3\u4f9b\u7535\uff0c\u4f46\u90a3\u4e2a\u6700\u5927\u7535\u6d41\u8c8c\u4f3c\u5c31500mA\uff0c     \u6362\u4e86\u4e2a\u5145\u7535\u5934\u5c31ok\u4e86\u3002</li> </ol>"},{"location":"software/linux/driver/sun4i-lradc-keys/","title":"Sun4i lradc keys","text":""},{"location":"software/linux/driver/sun4i-lradc-keys/#hamsterbear-lradc","title":"HamsterBear lradc\u6309\u952e\u9a71\u52a8\u7684\u9002\u914d","text":"<ul> <li><code>\u5e73\u53f0</code> - F1C200s</li> <li><code>Linux\u7248\u672c</code> - 5.17.2</li> <li><code>ADC\u6309\u952e</code> - 4 KEY tablet</li> </ul> <p>\u9a71\u52a8\u7a0b\u5e8f\u4f4d\u4e8e\u4e3b\u7ebf\u5185\u6838\uff1a * <code>drivers/input/keyboard/sun4i-lradc-keys.c</code></p> <p>\u8bbe\u5907\u6811binding * <code>Documentation/devicetree/bindings/input/allwinner,sun4i-a10-lradc-keys.yaml</code></p>"},{"location":"software/linux/driver/sun4i-lradc-keys/#_1","title":"\u9002\u914d\u6d41\u7a0b","text":""},{"location":"software/linux/driver/sun4i-lradc-keys/#_2","title":"\u5f00\u542f\u9a71\u52a8\u7a0b\u5e8f\u7f16\u8bd1\u5f00\u5173","text":"<p>\u8fdb\u5165kernel\u76ee\u5f55\uff0c\u6267\u884c<code>make menuconfig</code></p> <p>\u8f93\u5165<code>/</code>\u540e\u641c\u7d22<code>KEYBOARD_SUN4I_LRADC</code> </p> <p>\u6309<code>1</code>\u8df3\u8f6c\u5230\u9009\u9879\u4f4d\u7f6e\uff0c\u4fee\u6539\u9009\u9879\u4e3a<code>*</code>\u540e\u4fdd\u5b58\u9000\u51fa </p>"},{"location":"software/linux/driver/sun4i-lradc-keys/#binding","title":"\u67e5\u770b\u8bbe\u5907\u6811Binding\uff0c\u5e76\u4fee\u6539\u6dfb\u52a0\u8bbe\u5907\u6811\u8282\u70b9","text":"<p>\u793a\u4f8b\u5982\u4e0b <pre><code>examples:\n  - |\n    lradc: lradc@1c22800 {\n        compatible = \"allwinner,sun4i-a10-lradc-keys\";\n        reg = &lt;0x01c22800 0x100&gt;;\n        interrupts = &lt;31&gt;;\n        vref-supply = &lt;&amp;reg_vcc3v0&gt;;\n\n        button-191 {\n            label = \"Volume Up\";\n            linux,code = &lt;115&gt;;\n            channel = &lt;0&gt;;\n            voltage = &lt;191274&gt;;\n        };\n\n        button-392 {\n            label = \"Volume Down\";\n            linux,code = &lt;114&gt;;\n            channel = &lt;0&gt;;\n            voltage = &lt;392644&gt;;\n        };\n    };\n</code></pre></p> <p>\u4fee\u6539\u540e\u7684lradc\u8282\u70b9 \u5e95\u677f\u67094\u4e2a\u6309\u952e\uff0clinux\uff0ccode\u5bf9\u5e94input evnet\u6309\u952ecode\u503c <pre><code>        lradc: lradc@1c23400 {\n                compatible = \"allwinner,sun4i-a10-lradc-keys\";\n                reg = &lt;0x01c23400 0x100&gt;;\n                interrupts = &lt;22&gt;;\n                vref-supply = &lt;&amp;reg_vcc3v3&gt;;\n\n                button-132 {\n                    label = \"PRE\";\n                    linux,code = &lt;105&gt;;\n                    channel = &lt;0&gt;;\n                    voltage = &lt;174603&gt;;\n                };\n\n                button-196 {\n                    label = \"NEXT\";\n                    linux,code = &lt;106&gt;;\n                    channel = &lt;0&gt;;\n                    voltage = &lt;419047&gt;;\n                };\n\n                button-233 {\n                    label = \"OK\";\n                    linux,code = &lt;28&gt;;\n                    channel = &lt;0&gt;;\n                    voltage = &lt;698412&gt;;\n                };\n\n                button-271 {\n                    label = \"BACK\";\n                    linux,code = &lt;14&gt;;\n                    channel = &lt;0&gt;;\n                    voltage = &lt;803174&gt;;\n                };\n        };\n</code></pre></p> <p>\u8bbe\u5907\u6ce8\u518c\u5230/dev/input/event0 \u9a71\u52a8\u7a0b\u5e8f\u4e0a\u62a5\u7684\u6570\u636e <pre><code>[21037.576786] adckey val: 5, voltage: 174603\n0000000 522d 0000 cecc 0008 0001 0069 0001 0000\n0000010 522d 0000 cecc 0008 0000 0000 0000 0000\n0000020 522d 0000 0bd6 000c 0001 0069 0000 0000\n0000030 522d 0000 0bd6 000c 0000 0000 0000 0000\n[21038.829430] adckey val: 12, voltage: 419047\n0000040 522e 0000 aa05 000c 0001 006a 0001 0000\n0000050 522e 0000 aa05 000c 0000 0000 0000 0000\n0000060 522f 0000 f228 0000 0001 006a 0000 0000\n0000070 522f 0000 f228 0000 0000 0000 0000 0000\n[21041.763838] adckey val: 19, voltage: 663492\n0000080 5231 0000 a9cd 000b 0001 001c 0001 0000\n0000090 5231 0000 a9cd 000b 0000 0000 0000 0000\n00000a0 5232 0000 4117 0000 0001 001c 0000 0000\n00000b0 5232 0000 4117 0000 0000 0000 0000 0000\n[21042.978050] adckey val: 25, voltage: 873015\n00000c0 5232 0000 ee8e 000e 0001 000e 0001 0000\n00000d0 5232 0000 ee8e 000e 0000 0000 0000 0000\n00000e0 5233 0000 5964 0003 0001 000e 0000 0000\n00000f0 5233 0000 5964 0003 0000 0000 0000 0000\n</code></pre></p>"},{"location":"software/linux/driver/sun4i-lradc-keys/#lvgl","title":"LVGL\u7684\u9002\u914d","text":"<p>\u4fee\u6539\u5b98\u65b9\u79fb\u690d\u6a21\u677f\u6587\u4ef6<code>lv_port_indev_template.c</code> <pre><code>/* lv_port_indev_linux.c */\nvoid lv_port_indev_init(void)\n{\n    /**\n     * Here you will find example implementation of input devices supported by LittelvGL:\n     *  - Touchpad\n     *  - Mouse (with cursor support)\n     *  - Keypad (supports GUI usage only with key)\n     *  - Encoder (supports GUI usage only with: left, right, push)\n     *  - Button (external buttons to press points on the screen)\n     *\n     *  The `..._read()` function are only examples.\n     *  You should shape them according to your hardware\n     */\n\n    static lv_indev_drv_t indev_drv;\n\n    ...\n\n    ...\n\n    /*------------------\n     * Button\n     * -----------------*/\n\n    /*Initialize your button if you have*/\n    button_init();\n\n    /*Register a button input device*/\n    lv_indev_drv_init(&amp;indev_drv);\n    indev_drv.type = LV_INDEV_TYPE_BUTTON;\n    indev_drv.read_cb = button_read;\n    indev_button = lv_indev_drv_register(&amp;indev_drv);\n\n    /*Assign buttons to points on the screen*/\n    static const lv_point_t btn_points[4] = {\n        {102, 215},   /* Button 0 -&gt; x:102; y:215 */\n        {180, 216},   /* Button 1 -&gt; x:180; y:216 */\n        {140, 120},\n        {142, 215},\n    };\n    lv_indev_set_button_points(indev_button, btn_points);\n}\n\nstatic int button_fd;\nstatic struct input_event events[2];\nstatic struct input_event event;\n/*Initialize your buttons*/\nstatic void *button_input_thread_function(void *privdata)\n{\n    while(1){\n        if(read(button_fd, &amp;events, 2*sizeof(struct input_event)) &gt; 0){\n                // printf(\"type : %d, code : %d, value : %d\\n\", events[0].type, events[0].code, events[0].value);\n        }\n        event = events[0];\n        // pthread_mutex_lock(&amp;g_mutex);\n        // pthread_cond_signal(&amp;g_cond);\n        // pthread_mutex_unlock(&amp;g_mutex);\n    }\n\n}\n\nstatic void button_init(void)\n{\n    /*Your code comes here*/\n    pthread_t tid;\n\n    button_fd = open(\"/dev/input/event0\", O_RDONLY);\n\n    pthread_create(&amp;tid, NULL, button_input_thread_function, NULL);\n}\n\n/*Will be called by the library to read the button*/\nstatic void button_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)\n{\n\n    static uint8_t last_btn = 0;\n\n    /*Get the pressed button's ID*/\n    int8_t btn_act = button_get_pressed_id();\n\n    if(btn_act &gt;= 0) {\n        data-&gt;state = LV_INDEV_STATE_PR;\n        last_btn = btn_act;\n    }\n    else {\n        data-&gt;state = LV_INDEV_STATE_REL;\n    }\n\n    /*Save the last pressed button's ID*/\n    data-&gt;btn_id = last_btn;\n}\n\n/*Get ID  (0, 1, 2 ..) of the pressed button*/\nstatic int8_t button_get_pressed_id(void)\n{\n    uint8_t key = -1;\n\n    /*Check to buttons see which is being pressed (assume there are 2 buttons)*/\n    // pthread_mutex_lock(&amp;g_mutex);\n    // pthread_cond_wait(&amp;g_cond, &amp;g_mutex);\n    // pthread_mutex_unlock(&amp;g_mutex);\n    switch(event.code){\n    case KEY_LEFT:\n        key = 0;\n        break;\n    case KEY_RIGHT:\n        key = 1;\n        break;\n    case KEY_ENTER:\n        key = 2;\n        break;\n    case KEY_BACKSPACE:\n        key = 3;\n        break;\n    default:\n        key = -1;\n        break;\n    }\n\n    return (key + event.value)&gt;key?key:-1;\n    /*No button pressed*/\n}\n\n/*Test if `id` button is pressed or not*/\nstatic bool button_is_pressed(uint8_t id)\n{\n    /*Your code comes here*/\n\n    return false;\n}\n</code></pre> \u7b80\u5355\u89e3\u91ca\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u64cd\u4f5c\uff1a</p> <p>\u5728\u4e3binit\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u8fd9\u4e2a\u6570\u7ec4 <pre><code>static const lv_point_t btn_points[4] = {\n    {102, 215},   /* Button 0 -&gt; x:102; y:215 */\n    {180, 216},   /* Button 1 -&gt; x:180; y:216 */\n    {140, 120},\n    {142, 215},\n};\n</code></pre> \u662f\u7528\u6765\u6a21\u62df\u70b9\u51fblvgl\u5c4f\u5e55\u7684\u67d0\u4e2ax,y\u4f4d\u7f6e\uff0c\u8bbe\u7f6e\u5b8c\u8be5\u6570\u7ec4\u540e\uff0c\u9700\u8981\u5c06\u5176\u4e0eindev_drv\u5173\u8054\u8d77\u6765 \u53e6\u5916\u7b80\u5355\u8bf4\u4e00\u4e0b\uff0c\u5982\u4f55\u5b9a\u4f4d\u8fd9\u4e9b\u89e6\u6478\u70b9\uff0csquareline studio\u91cc\u9762\u628a\u7f29\u653e\u8c03\u5230100%\uff0c\u7528\u622a\u56fe\u5de5\u5177 \u4ecescreen\u5bf9\u8c61\u5de6\u4e0a\u89d2\u5f00\u59cb\u5b9a\u4f4d\uff0c\u62c9\u5230\u4f60\u7684\u70b9\uff0c\u663e\u793a\u7684\u622a\u56fe\u5bbd\u9ad8\u5bf9\u5e94\u76ee\u6807\u70b9\u5750\u6807\u3002</p> <pre><code>//lv_indev_t * indev_button;\n\nlv_indev_set_button_points(indev_button, btn_points);\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8981\u4e00\u6b21\u8bfb\u4e24\u4e2aevent\uff1f <pre><code>static struct input_event events[2];\nstatic struct input_event event;\n/*Initialize your buttons*/\nstatic void *button_input_thread_function(void *privdata)\n{\n    while(1){\n        if(read(button_fd, &amp;events, 2*sizeof(struct input_event)) &gt; 0){\n</code></pre> \u56e0\u4e3a\u6309\u4e0b\u548c\u677e\u5f00\u90fd\u7b97\u4e00\u6b21event\uff0c\u53ea\u8bfb\u4e00\u6b21\u4f1a\u8bfb\u5230\u677e\u5f00\u7684value\u3002</p> <p>\u8fd9\u4e2areturn\u662f\u4ec0\u4e48\u610f\u601d\uff1f <pre><code>/*Get ID  (0, 1, 2 ..) of the pressed button*/\nstatic int8_t button_get_pressed_id(void)\n{\n    uint8_t key = -1;\n\n    ...\n\n    return (key + event.value)&gt;key?key:-1;\n}\n</code></pre> \u8fc7\u6ee4\u6389default\u7684\u60c5\u51b5\uff0cevent.value \u503c\u4e3a 1 \u6216 0 \u8fd4\u56de\u6b63\u786e\u7684\u6309\u952eid\uff0c\u8fd9\u4e2aid\u7528\u6765\u5728\u4e0a\u9762\u63d0\u5230\u7684\u6570\u7ec4\u4e2d\u786e\u5b9a\u662f\u54ea\u4e00\u7ec4\u5750\u6807\u3002</p> <p>button_is_pressed\u51fd\u6570\u6ca1\u7528\u5230\uff0c\u6240\u4ee5\u7559\u7a7a\u4e86\u3002</p> <p>\u6700\u540e\uff0c\u5728<code>button_read</code>\u51fd\u6570\u4e2d<code>btn_act</code>\u5c31\u662f\u521a\u624dreturn\u7684id\uff0c\u5728 if\u4e2d\u6682\u5b58\uff0c\u6700\u540e\u901a\u8fc7data-&gt;btn_id\u8bb0\u5f55\u8fdbindev_drv</p>"},{"location":"software/linux/driver/sun4i-lradc-keys/#sun4i-lradc","title":"sun4i lradc \u8f93\u5165\u4e8b\u4ef6\u9a71\u52a8\u89e3\u6790","text":""},{"location":"software/linux/driver/usb_gadget_ether/","title":"Usb gadget ether","text":""},{"location":"software/linux/driver/usb_gadget_ether/#hamsterbear-linux-usb-gadget-rndis","title":"HamsterBear Linux \u542f\u7528USB Gadget RNDIS","text":""},{"location":"software/linux/driver/usb_gadget_ether/#_1","title":"\u73af\u5883","text":"<ul> <li><code>Soc</code> - F1C200s</li> <li><code>Kernel\u7248\u672c</code> - \u4e3b\u7ebf 5.17.0</li> </ul> <p>\u9002\u914d\u8fc7\u7a0b\u4f9b\u53c2\u8003</p>"},{"location":"software/linux/driver/usb_gadget_ether/#kernel","title":"kernel","text":"<p>\u4fee\u6539 <code>arch/arm/boot/dts/suniv-f1c100s.dtsi</code> \u5728soc\u8282\u70b9\u6dfb\u52a0\u5982\u4e0b\u8282\u70b9 <pre><code>                usb_otg: usb@1c13000 {\n                        compatible = \"allwinner,suniv-musb\"; // compatible reg\u7b49\u56e0soc\u800c\u5f02\n                        reg = &lt;0x01c13000 0x0400&gt;;\n                        clocks = &lt;&amp;ccu CLK_BUS_OTG&gt;;\n                        resets = &lt;&amp;ccu RST_BUS_OTG&gt;;\n                        interrupts = &lt;26&gt;;\n                        interrupt-names = \"mc\";\n                        phys = &lt;&amp;usbphy 0&gt;;\n                        phy-names = \"usb\";\n                        extcon = &lt;&amp;usbphy 0&gt;;\n                        allwinner,sram = &lt;&amp;otg_sram 1&gt;;\n                        status = \"disabled\";\n                };\n\n                usbphy: phy@1c13400 {\n                        compatible = \"allwinner,suniv-usb-phy\";  // \u540c\u4e0a\n                        reg = &lt;0x01c13400 0x10&gt;;\n                        reg-names = \"phy_ctrl\";\n                        clocks = &lt;&amp;ccu CLK_USB_PHY0&gt;;\n                        clock-names = \"usb0_phy\";\n                        resets = &lt;&amp;ccu RST_USB_PHY0&gt;;\n                        reset-names = \"usb0_reset\";\n                        #phy-cells = &lt;1&gt;;\n                        status = \"disabled\";\n                };\n</code></pre> \u5bf9\u5e94\u5982\u4e0b\u4e24\u4e2a\u9a71\u52a8\u6587\u4ef6\uff1a <code>drivers/phy/allwinner/phy-sun4i-usb.c</code> <code>drivers/usb/musb/sunxi.c</code></p> <p>\u5728 <code>arch/arm/boot/dts/suniv-f1c100s-licheepi-nano.dts</code> \u4e2d\u5f15\u7528\u7ed3\u70b9\u5982\u4e0b <pre><code>&amp;otg_sram {\n        status = \"okay\";\n};\n\n&amp;usb_otg {\n        dr_mode = \"otg\";\n        status = \"okay\";\n};\n\n&amp;usbphy {\n        usb0_id_det-gpio = &lt;&amp;pio 4 2 GPIO_ACTIVE_HIGH&gt;; /* PE2 */  // USB ID\u811a \u9700\u8981\u6839\u636e\u67e5\u770b\u677f\u5b50\u539f\u7406\u56fe\u786e\u5b9a\n        status = \"okay\";\n};\n</code></pre></p>"},{"location":"software/linux/driver/usb_gadget_ether/#kernel-config","title":"\u914d\u7f6ekernel config","text":"<p>\u5b9a\u4f4d\u5230 <code>Device drivers</code> --&gt; <code>USB support</code> </p> <p>\u914d\u7f6e\u5982\u4e0a</p> <p>\u7136\u540e\u9009\u62e9 <code>USB Gadget</code> \u7f16\u8bd1\u8fdb\u5185\u6838 </p> <p><code>USB Gadget</code> \u7684\u914d\u7f6e </p> <p>\u8fdb\u5165 <code>USB Gadget precomposed configurations</code>\uff0c\u914d\u7f6e\u5982\u4e0b </p> <p>\u9009\u62e9\u4e86<code>USB Ethernet Gadget USB\u4ee5\u592a\u7f51</code>\u3001 <code>USB Mass Storage Gadget USB\u5927\u5bb9\u91cf\u5b58\u50a8\u8bbe\u5907</code>\u3001 <code>USB Serial Gadget USB\u865a\u62df\u4e32\u53e3</code>\u7f16\u8bd1\u4e3a\u6a21\u5757</p> <p>ok\uff0c \u914d\u7f6e\u5b8c\u4e4b\u540e\u91cd\u65b0\u7f16\u8bd1\u5185\u6838+\u6a21\u5757</p> <ul> <li>\u62f7\u8d1d\u5185\u6838\u5230sd\u5361boot\u5206\u533a</li> <li>\u62f7\u8d1d\u9a71\u52a8\u6587\u4ef6\u5230\u6587\u4ef6\u7cfb\u7edf<code>/lib/modules</code>\u4e0b</li> </ul> <p>\u9a71\u52a8\u6587\u4ef6\u6253\u5305\u53c2\u8003\uff1a <pre><code>INSTALL_MOD_PATH=./tmp make modules_install\n</code></pre></p>"},{"location":"software/linux/driver/usb_gadget_ether/#rootfs","title":"rootfs","text":"<p>\u62f7\u8d1d\u5b8c\u6210\u540e\u8fde\u63a5\u5230\u677f\u5b50\u4e32\u53e3\uff0c\u6267\u884cmodprobe\u52a0\u8f7d\u9a71\u52a8\u6587\u4ef6 <pre><code>modprobe g_ether\n</code></pre></p> <p>\u6b64\u65f6\uff0c\u4e0d\u51fa\u610f\u5916\u7684\u60c5\u51b5\u4e0b\uff08\u865a\u62df\u673a\u4f1a\u8be2\u95ee\u65b0\u8bbe\u5907\u8fde\u63a5\u4f4d\u7f6e\uff09\uff0cwindows pc\u673a\u8fd9\u8fb9\u4f1a\u8bc6\u522b\u5230\u4e00\u4e2a<code>\u7aef\u53e3(COM \u548c LPT)</code></p> <p></p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u662f\u4e00\u4e2a\u7aef\u53e3\uff1f\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u56de\u7b54</p> <p>\u6700\u521d\u7531MS\u8bba\u575b\u4e0a\u7684dlech\u53d1\u8868 Linux rndis\u5c0f\u5de5\u5177\u51fd\u6570\u7684USB\u7c7b\u4e3a2\uff0c\u5b50\u7c7b\u4e3a2\uff0c\u4e0eusbser.inf\u6587\u4ef6\u4e2d\u7684\u201cUSB \\ Class_02\uff06SubClass_02\u201d\u76f8\u5339\u914d\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5bf9\u4e8e\u67d0\u4e9b\u4eba\u6765\u8bf4\uff0c\u4ed6\u4eec\u7684\u8bbe\u5907\u6700\u521d\u88ab\u68c0\u6d4b\u4e3aCOM\u7aef\u53e3\u800c\u4e0d\u662fRNDIS\u3002 \u901a\u8fc7\u4e00\u4e9b\u5feb\u901f\u7684Google\u641c\u7d22\uff0c\u4f3c\u4e4e\u6709\u4e9bVM\u7528\u6237\u6ca1\u6709\u9047\u5230\u6b64\u95ee\u9898\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u7c7b/\u5b50\u7c7b\u5bf9\u5728\u5448\u73b0\u7ed9\u8bbf\u5ba2\u65f6\u88ab\u7be1\u6539\u4e86\uff1f</p> <p>\u9700\u8981\u5c06\u9a71\u52a8\u66ff\u6362\u4e3a <code>Windows 10 signed RNDIS driver for USBNetwork</code>\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u94fe\u63a5<code>1\u697c</code>\u7684\u89e3\u51b3\u65b9\u6848 https://www.mobileread.com/forums/showthread.php?p=3283986</p> <p>\u5982\u679c\u4f60\u8bbf\u95ee\u4e0d\u4e86\u4e0a\u9762\u7684\u94fe\u63a5\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4efd\u5907\u7528\u9a71\u52a8\u6587\u4ef6\u94fe\u63a5 kindle_rndis.inf_amd64-v1.0.0.1.zip</p> <p>\u987a\u4fbf\u8d34\u4e0b\u600e\u4e48\u7528\u5427</p> <ol> <li>Download &amp; Unzip attachment kindle_rndis.inf_amd64-v1.0.0.1.zip</li> <li>R-click \"5-runasadmin_register-CA-cer.cmd\" and \"Run as administrator\"*</li> <li>In Device Manager, expand \"Ports (COM &amp; LPT)\", R-click \"Serial USB device (COM3)\" &gt; Update Driver Software...</li> <li>Browse for my computer for driver software &gt; Select extract folder</li> </ol> <p>\u66ff\u6362\u5b8c\u6210\u4e4b\u540e\u4f1a\u53d8\u6210\u8fd9\u4e2a\u8bbe\u5907 <code>Kindle USB RNDIS Device</code></p> <p></p> <p>\u7136\u540e\u56de\u5230\u677f\u5b50\u8fd9\u8fb9 <pre><code>ifconfig usb0 up\nifconfig usb0 192.168.1.101\n</code></pre></p> <p>\u7136\u540epc\u8fd9\u8fb9\u6765\u5230 \u63a7\u5236\u9762\u677f --&gt; \u7f51\u7edc\u548cInternet --&gt; \u7f51\u7edc\u8fde\u63a5\uff0c\u4ea6\u53ef\u76f4\u63a5\u641c\u7d22<code>\u67e5\u770b\u7f51\u7edc\u8fde\u63a5</code> </p> <p>\u624b\u52a8\u5206\u914d\u4e0bip\u5730\u5740\u4e3a <code>192.168.1.100</code></p> <p>\uff08\u8fd9\u91cc\u56e0\u4e3a\u6211\u7ed9usb\u5171\u4eab\u4e86\u7f51\u7edc\uff0c\u6240\u4ee5\u6b64\u5904ip\u4e3a192.168.137.1\uff0c\u4e3a\u7f51\u5173\u5730\u5740\uff09</p> <p></p> <p>\u7136\u540e\u5728\u677f\u5b50\u8fd9\u8fb9 ping 192.168.1.100 \u5df2\u7ecf\u53ef\u4ee5ping\u901a\u4e86</p>"},{"location":"software/linux/driver/usb_gadget_ether/#_2","title":"\u66f4\u591a\u7684\u73a9\u6cd5","text":""},{"location":"software/linux/driver/usb_gadget_ether/#1-pc","title":"1. \u5171\u4eabpc\u7f51\u7edc\u7ed9\u677f\u5b50","text":"<p>pc\u4e2d\u9009\u4e2d\u4e00\u4e2a\u6709\u6548\u7684\u7f51\u7edc\u8fde\u63a5\uff0c \u7136\u540e\u53f3\u952e\u5c5e\u6027 - \u5171\u4eab\uff0c\u52fe\u9009<code>\u5141\u8bb8\u5176\u4ed6\u7f51\u7edc\u7528\u6237\u901a\u8fc7\u6b64\u8ba1\u7b97\u673a\u7684Internet\u8fde\u63a5\u6765\u8fde\u63a5</code>\uff0c\u9009\u62e9usb\u7f51\u5361\uff0c \uff08\u5982\u679c\u624b\u52a8\u914d\u7f6e\u8fc7ip\uff0c\u4f1a\u63d0\u793aip\u4fe1\u606f\u8986\u76d6\uff09 \u7136\u540e\u56de\u5230\u677f\u5b50\uff0c\u6267\u884c <pre><code>udhcpc -i usb0\n</code></pre> \u6b64\u65f6\u5df2\u7ecf\u5f97\u5230\u4e86\u52a8\u6001\u5206\u914d\u7684ip\u5730\u5740\uff0c<code>/etc/resolv.conf</code>\u4e2d\u6dfb\u52a0dns\u670d\u52a1\u5668<code>nameserver 114.114.114.114</code>\uff0c\u5e76\u5c1d\u8bd5\u8bbf\u95ee\u5916\u7f51 </p> <p>\u6211\u60f3\u53ea\u7528\u4e00\u6839usb\u7ebf\u5c31\u80fd\u8c03\u8bd5\u677f\u5b50\uff0c\u5c31\u50cf<code>beaglebone black</code>\u90a3\u6837\uff0c\u771f\u9177\uff0c\u6211\u5e94\u8be5\u600e\u4e48\u505a\uff1f</p> <p>\u6dfb\u52a0<code>/etc/init.d/S51usbifup</code>\uff0c\u589e\u52a0<code>755</code>\u6743\u9650\uff0c\u811a\u672c\u5982\u4e0b\uff0c</p> <p>(udhcpc\u53ef\u80fd\u4f1a\u5bfc\u81f4\u811a\u672c\u963b\u585e\uff0c\u89c6\u60c5\u51b5\u53ef\u5728\u542f\u52a8\u540e\u6267\u884c)</p> <pre><code>#!/bin/sh\n#\n# usbifup        Starts usb gadget rndis.\n#\n\numask 077\n\nstart() {\n        printf \"Starting USB Gadget RNDIS: \"\n        modprobe g_ether\n        ifconfig usb0 up\n        udhcpc -i usb0\n        echo \"OK\"\n}\nstop() {\n        printf \"Stopping USB Gadget RNDIS: \"\n        rmmod g_ether\n        echo \"OK\"\n}\nrestart() {\n        stop\n        start\n}\n\ncase \"$1\" in\n  start)\n        start\n        ;;\n  stop)\n        stop\n        ;;\n  restart|reload)\n        restart\n        ;;\n  *)\n        echo \"Usage: $0 {start|stop|restart}\"\n        exit 1\nesac\n\nexit $?\n</code></pre> <p>\u8fd9\u6837\uff0c\u542f\u52a8\u540e\u4fbf\u4f1a\u81ea\u52a8\u52a0\u8f7d\u9a71\u52a8\uff0cpc\u673a\u8fd9\u8fb9\u63a7\u5236\u53f0\u6267\u884c <pre><code>arp -a | findstr \"137\"\n\u63a5\u53e3: 192.168.137.1 --- 0x5c\n  192.168.137.115       36-bd-3d-9b-31-e0     \u9759\u6001\n  192.168.137.255       ff-ff-ff-ff-ff-ff     \u9759\u6001\n</code></pre></p> <p><code>192.168.137.115</code>\u5c31\u662f\u81ea\u52a8\u5206\u914d\u7ed9\u677f\u5b50\u7684ip</p> <p>\u4f7f\u7528ssh\u767b\u5f55\u5230\u677f\u5b50<code>ssh root@192.168.137.115</code></p> <p>root\u7528\u6237\u767b\u9646\u9700\u8981\u4fee\u6539/etc/ssh/sshd_config\uff0c\u6dfb\u52a0PermitRootLogin yes</p> <p></p>"},{"location":"software/linux/driver/usb_gadget_ether/#2-vnc-x","title":"2. \u4f7f\u7528 <code>VNC</code> \u8fde\u63a5\u5230 <code>X</code> \u684c\u9762\u73af\u5883","text":""},{"location":"software/linux/driver/usb_gadget_ether/#f1c200s-suniv","title":"\u9488\u5bf9 <code>F1c200s</code> suniv\u7cfb\u5217\u7684\u4fee\u6539","text":"<p>\u9700\u8981\u4fee\u6539\u9002\u914d phy \u548c musb \u7684\u4ee3\u7801\uff0c\u5176\u5b9e\u5168\u5fd7\u5b98\u65b94.15\u7248\u672c\u7684\u5185\u6838\u65e9\u5c31\u4fee\u6539\u8fc7\u4e86\uff0c\u4f46\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5408\u5e76\u5230\u4e3b\u7ebf\u91cc\u3002 <pre><code>diff --git a/drivers/phy/allwinner/phy-sun4i-usb.c b/drivers/phy/allwinner/phy-sun4i-usb.c\nindex 788dd5c..44dcffa 100644\n--- a/drivers/phy/allwinner/phy-sun4i-usb.c\n+++ b/drivers/phy/allwinner/phy-sun4i-usb.c\n@@ -99,6 +99,7 @@\n #define POLL_TIME                      msecs_to_jiffies(250)\n\n enum sun4i_usb_phy_type {\n+       suniv_phy,\n        sun4i_a10_phy,\n        sun6i_a31_phy,\n        sun8i_a33_phy,\n@@ -857,6 +858,14 @@ static int sun4i_usb_phy_probe(struct platform_device *pdev)\n        return 0;\n }\n\n+static const struct sun4i_usb_phy_cfg suniv_cfg = {\n+       .num_phys = 1,\n+       .type = suniv_phy,\n+       .disc_thresh = 3,\n+       .phyctl_offset = REG_PHYCTL_A10,\n+       .dedicated_clocks = true,\n+};\n+\n static const struct sun4i_usb_phy_cfg sun4i_a10_cfg = {\n        .num_phys = 3,\n        .type = sun4i_a10_phy,\n@@ -970,6 +979,7 @@ static const struct sun4i_usb_phy_cfg sun50i_h6_cfg = {\n };\n\n static const struct of_device_id sun4i_usb_phy_of_match[] = {\n+       { .compatible = \"allwinner,suniv-usb-phy\", .data = &amp;suniv_cfg },\n        { .compatible = \"allwinner,sun4i-a10-usb-phy\", .data = &amp;sun4i_a10_cfg },\n        { .compatible = \"allwinner,sun5i-a13-usb-phy\", .data = &amp;sun5i_a13_cfg },\n        { .compatible = \"allwinner,sun6i-a31-usb-phy\", .data = &amp;sun6i_a31_cfg },\ndiff --git a/drivers/usb/musb/sunxi.c b/drivers/usb/musb/sunxi.c\nindex 961c858..85542d1 100644\n--- a/drivers/usb/musb/sunxi.c\n+++ b/drivers/usb/musb/sunxi.c\n@@ -722,14 +722,16 @@ static int sunxi_musb_probe(struct platform_device *pdev)\n        INIT_WORK(&amp;glue-&gt;work, sunxi_musb_work);\n        glue-&gt;host_nb.notifier_call = sunxi_musb_host_notifier;\n\n-       if (of_device_is_compatible(np, \"allwinner,sun4i-a10-musb\"))\n+       if (of_device_is_compatible(np, \"allwinner,sun4i-a10-musb\") ||\n+           of_device_is_compatible(np, \"allwinner,suniv-musb\"))\n                set_bit(SUNXI_MUSB_FL_HAS_SRAM, &amp;glue-&gt;flags);\n\n        if (of_device_is_compatible(np, \"allwinner,sun6i-a31-musb\"))\n                set_bit(SUNXI_MUSB_FL_HAS_RESET, &amp;glue-&gt;flags);\n\n        if (of_device_is_compatible(np, \"allwinner,sun8i-a33-musb\") ||\n-           of_device_is_compatible(np, \"allwinner,sun8i-h3-musb\")) {\n+           of_device_is_compatible(np, \"allwinner,sun8i-h3-musb\") ||\n+           of_device_is_compatible(np, \"allwinner,suniv-musb\")) {\n                set_bit(SUNXI_MUSB_FL_HAS_RESET, &amp;glue-&gt;flags);\n                set_bit(SUNXI_MUSB_FL_NO_CONFIGDATA, &amp;glue-&gt;flags);\n        }\n@@ -822,6 +824,7 @@ static int sunxi_musb_remove(struct platform_device *pdev)\n }\n\n static const struct of_device_id sunxi_musb_match[] = {\n+       { .compatible = \"allwinner,suniv-musb\", },\n        { .compatible = \"allwinner,sun4i-a10-musb\", },\n        { .compatible = \"allwinner,sun6i-a31-musb\", },\n        { .compatible = \"allwinner,sun8i-a33-musb\", },\n</code></pre></p>"},{"location":"software/linux/driver/usb_gadget_ether/#_3","title":"\u53c2\u8003\u8d44\u6599","text":"<p>Windows 10 signed RNDIS driver for USBNetwork \u6d4b\u8bd5\u6d4b\u8bd5 g_serial / g_ether USB Gadget (RNDIS) \u5c0f\u767d\u81ea\u5236Linux\u5f00\u53d1\u677f \u4e03. USB\u9a71\u52a8\u914d\u7f6e</p>"},{"location":"software/linux/misc/console_cursor/","title":"Console cursor","text":""},{"location":"software/linux/misc/console_cursor/#linuxlcd-framebuffer","title":"linux\u7528\u6237\u7a7a\u95f4\u63a7\u5236lcd framebuffer\u63a7\u5236\u53f0\u5149\u6807\u95ea\u70c1\u884c\u4e3a","text":"<p>\u5b9a\u4f4d\u5230<code>/sys/class/graphics/fbcon</code> \u6709\u5982\u4e0b\u6587\u4ef6 <pre><code>#/sys/class/graphics/fbcon\ncursor_blink  rotate        subsystem/\npower/         rotate_all    uevent\n</code></pre></p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5149\u6807\u95ea\u70c1\uff0c\u6587\u4ef6cursor_blink\u503c\u4e3a1\uff0c\u5411\u5176\u4e2d\u51990\u5173\u95ed\u5149\u6807\u95ea\u70c1 <pre><code># \u5f00\u542f\necho 1 &gt; /sys/class/graphics/fbcon/cursor_blink\n# \u5173\u95ed\necho 0 &gt; /sys/class/graphics/fbcon/cursor_blink\n</code></pre></p>"},{"location":"software/linux/misc/console_font/","title":"Console font","text":"Linux --- \u4fee\u6539\u63a7\u5236\u53f0\u5b57\u4f53consolefont"},{"location":"software/linux/misc/console_font/#_1","title":"\u7528\u6237\u5c42\u9762","text":"<p>\u5bf9\u4e8edebian like \u7684\u7cfb\u7edf\uff0c\u53ef\u5230\u5982\u4e0b\u8def\u5f84\u67e5\u627econsole font <pre><code>$ cd /usr/share/consolefonts/\n$ ls\nArabic-Fixed15.psf.gz             CyrSlav-VGA32x16.psf.gz               FullGreek-VGA8.psf.gz            Lat15-VGA16.psf.gz              Thai-Fixed14.psf.gz\nArabic-Fixed16.psf.gz             CyrSlav-VGA8.psf.gz                   Georgian-Fixed13.psf.gz          Lat15-VGA28x16.psf.gz           Thai-Fixed15.psf.gz\n    ....\n</code></pre></p>"},{"location":"software/linux/misc/console_font/#_2","title":"\u5c1d\u8bd5\u5207\u6362\u7ec8\u7aef\u5b57\u4f53","text":"<p><code>CTRL +  ALT + F3</code> \u5207\u6362\u81f3 tty3 <pre><code>$ setfont /usr/share/consolefonts/Arabic-Fixed15.psf.gz \n</code></pre></p>"},{"location":"software/linux/misc/console_font/#_3","title":"\u76f8\u5173\u6587\u4ef6\u53ca\u6307\u4ee4","text":"<p><code>/etc/</code> <pre><code>$ setupcon --print-commands-only\nsetfont '-C' '/dev/tty1' '/usr/share/consolefonts/Uni2-Fixed16.psf.gz' \nsetfont '-C' '/dev/tty2' '/usr/share/consolefonts/Uni2-Fixed16.psf.gz' \nsetfont '-C' '/dev/tty3' '/usr/share/consolefonts/Uni2-Fixed16.psf.gz' \nsetfont '-C' '/dev/tty4' '/usr/share/consolefonts/Uni2-Fixed16.psf.gz' \nsetfont '-C' '/dev/tty5' '/usr/share/consolefonts/Uni2-Fixed16.psf.gz' \nsetfont '-C' '/dev/tty6' '/usr/share/consolefonts/Uni2-Fixed16.psf.gz' \n    ......\n</code></pre></p>"},{"location":"software/linux/misc/console_font/#_4","title":"\u5185\u6838\u5c42\u9762","text":""},{"location":"software/linux/misc/console_font/#config","title":"config","text":"<p>make menuconfig</p> <p>\u5b9a\u4f4d\u5230 &gt; Library routines\uff0c \u9009\u62e9 CONFIG_FONTS=y</p> <p>\u8fd8\u53ef\u7ee7\u7eed\u9009\u62e9\u7f16\u8bd1\u8fdb\u5185\u6838\u7684\u5b57\u4f53</p> <p></p>"},{"location":"software/linux/misc/console_font/#_5","title":"\u5b57\u4f53\u5339\u914d\u903b\u8f91","text":"<p>\u627e\u5230 <code>lib/fonts/fonts.c</code> </p> <p>\u5b58\u653e\u6240\u6709\u5b57\u4f53\u7684\u6570\u7ec4 <pre><code>static const struct font_desc *fonts[] = {\n    &amp;font_vga_8x8,\n    ...\n}\n</code></pre></p> <p>\u5bfc\u51fa\u4e86\u4e24\u4e2a\u51fd\u6570 <pre><code>EXPORT_SYMBOL(find_font);\nEXPORT_SYMBOL(get_default_font);\n</code></pre> \u5bf9\u4e8e\u51fd\u6570<code>get_default_font</code> \uff0c\u6839\u636e\u5c4f\u5e55\u4ee5\u53ca\u5b57\u4f53\u5c3a\u5bf8\uff0c\u4f7f\u7528\u5f97\u5206\u65b9\u5f0f\u9009\u62e9\u5408\u9002\u5b57\u4f53\u3002</p> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u4f1a\u5728 <code>fbcon.c</code> \u4e2d\u4f7f\u7528\uff0c<code>find_font</code>\u662f\u7528\u6765\u6307\u5b9a\u9009\u62e9\u5b57\u4f53\u7684\u63a5\u53e3\uff0c\u4e5f\u5728<code>fbcon.c</code>\u4e2d\u88ab\u8c03\u7528</p>"},{"location":"software/linux/misc/contributor/","title":"Contributor","text":""},{"location":"software/linux/misc/contributor/#linux","title":"\u5982\u4f55\u5411 Linux \u793e\u533a\u8d21\u732e\u4ee3\u7801\uff1f","text":"<p>\u672c\u6587\u7528\u4e00\u6b21\u771f\u5b9e\u7684\u8865\u4e01\u63d0\u4ea4\u8fc7\u7a0b\uff0c\u7b80\u5355\u4ecb\u7ecd\u4e86\u63d0\u4ea4\u5185\u6838\u8865\u4e01\u5230\u793e\u533a\u7684\u6d41\u7a0b\uff0c\u4ee5\u53ca\u8865\u4e01\u7684\u540e\u671f\u5904\u7406\u6d41\u7a0b\u3002</p>"},{"location":"software/linux/misc/contributor/#_1","title":"\u524d\u8a00","text":"<p>Linux \u4f5c\u4e3a\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf\uff0c\u79bb\u4e0d\u5f00\u5168\u4e16\u754c\u4f18\u79c0\u7a0b\u5e8f\u5458\u7684\u4ee3\u7801\u8d21\u732e</p> <p>\u6bcf\u4e00\u5929\u90fd\u6709\u6210\u5343\u4e0a\u4e07\u7684\u8865\u4e01\u88ab\u9012\u4ea4\u5230\u5185\u6838\u793e\u533a\uff0c\u5176\u4e2d\u6709\u65b0\u7684\u7279\u6027\uff0c\u4e5f\u6709\u9519\u8bef\u4fee\u590d\u7b49</p> <p>Linux \u4ece\u6765\u90fd\u4e0d\u662f\u4e00\u4e2a\u8bbe\u8ba1\uff0c\u800c\u662f\u4e00\u4e2a\u6f14\u53d8\u8fc7\u7a0b</p> <p>\u65e2\u7136\u4f60\u6709\u8fd9\u4efd\u8db3\u4ee5\u8d21\u732e\u4ee3\u7801\u7684\u529b\u91cf\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u8bd5\u8bd5\u52a0\u5165\u5230 Linux \u7684\u5f00\u53d1\u4e2d\u6765\u5462\uff1f</p> <p>\u5728\u8d21\u732e\u4ee3\u7801\u7684\u540c\u65f6\uff0c\u5207\u8bb0 <code>be careful</code>\uff0c\u5343\u4e07\u4e0d\u8981\u63d0\u4ea4\u65e0\u7528\u7684\u8865\u4e01\uff0c\u6d6a\u8d39\u7ef4\u62a4\u8005\u7684\u5b9d\u8d35\u65f6\u95f4</p> <p>\u4e00\u4efd\u8865\u4e01\u7684\u5904\u7406\u6d41\u7a0b\u56fe\u5982\u4e0b</p>"},{"location":"software/linux/misc/contributor/#1","title":"1.\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u672c\u6587\u6240\u4f7f\u7528\u7684\u5e73\u53f0\u4fe1\u606f</p> <ul> <li><code>SoC</code> - Allwinner F1C200s</li> <li><code>Linux</code> - v5.18</li> </ul> <p>\u8fd9\u91cc\u5148\u63d0\u524d\u8bf4\u660e\u4e00\u4e9b\u95ee\u9898</p> <ol> <li> <p>linux\u8865\u4e01\u7684\u5ba1\u9605\u548c\u5408\u5e76\u7b49\u5de5\u4f5c\u5e76\u4e0d\u4f1a\u5728github\u4e0a\u8fdb\u884c\uff0cgithub\u4e0a\u7684\u4ee3\u7801\u4ec5\u4f5c\u4e3a\u4e00\u4efd\u955c\u50cf\u5b58\u5728</p> </li> <li> <p>\u5185\u6838\u5f00\u53d1\u8005\u901a\u8fc7\u90ae\u4ef6\u8fdb\u884c\u4ea4\u6d41\uff0c\u63d0\u4ea4\u7684\u8865\u4e01\u4e5f\u4f1a\u5728lkml\uff08linux \u90ae\u4ef6\u5217\u8868\uff09\u516c\u5f00</p> </li> </ol>"},{"location":"software/linux/misc/contributor/#11","title":"1.1 \u914d\u7f6e\u90ae\u7bb1\u73af\u5883","text":"<p>\u975e\u5e38\u7684\u5efa\u8bae\u4f60\u914d\u7f6e\u5982\u4e0b\u6240\u8ff0\u7684\u90ae\u4ef6\u73af\u5883\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u4f60\u4f7f\u7528\u7684\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e0d\u662f\u7eaf\u6587\u672c\u683c\u5f0f\u6536\u53d1\u90ae\u4ef6\uff0c\u7b49\u5230\u540e\u8fb9\u8ddf\u5f00\u53d1\u8005\u4ea4\u6d41\u7684\u65f6\u5019\uff0c \u90ae\u4ef6\u53ef\u80fd\u4f1a\u6709html\u4e71\u7801\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u80fd\u4fdd\u8bc1\u6536\u53d1\u7686\u4e3a\u7eaf\u6587\u672c\u683c\u5f0f\uff0c\u4e0d\u9644\u5e26\u7b7e\u540d\u7b49\u989d\u5916\u4fe1\u606f\uff0c \u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u6b65\uff0c\u4f46\u4e3a\u4e86\u66f4\u597d\u5730\u6c9f\u901a\uff0c\u8bf7\u5c3d\u91cf\u7684\u914d\u7f6e\u4e00\u4e0b\u3002</p> <p>\u5f00\u53d1\u90ae\u7bb1\u7684\u7ed3\u6784\u5927\u81f4\u5982\u4e0b\uff1a <code>mutt</code> + <code>esmtp</code> + <code>fetchmail</code> + <code>procmail</code></p> <p>\u5176\u4e2d\uff0c <code>mutt</code> \u8d1f\u8d23\u67e5\u9605\u90ae\u4ef6 <code>esmtp</code> \u8d1f\u8d23\u90ae\u4ef6\u7684\u53d1\u9001 <code>fetchmail</code> \u4ece\u90ae\u4ef6\u670d\u52a1\u5668\u4e0a\u62c9\u53d6\u90ae\u4ef6 <code>procmail</code> \u8d1f\u8d23\u8fc7\u6ee4\u90ae\u4ef6</p> <p>\u914d\u7f6e\u8fc7\u7a0b\u53ef\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1ahttps://www.cnblogs.com/hfwz/p/16226109.html</p>"},{"location":"software/linux/misc/contributor/#12","title":"1.2 \u7f16\u8bd1\u73af\u5883\u914d\u7f6e","text":"<p>\u5185\u6838\u7f16\u8bd1\u73af\u5883\u5927\u540c\u5c0f\u5f02\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0</p>"},{"location":"software/linux/misc/contributor/#2","title":"2. \u4fee\u6539\u4ee3\u7801","text":"<pre><code># \u4fee\u6539\u6587\u4ef6\uff0c\u6dfb\u52a0\u6d4b\u8bd5\u6253\u5370\u8bed\u53e5\nvim drivers/pinctrl/sunxi/pinctrl-suniv-f1c100s.c\n\n    printk(KERN_DEBUG \"I can modify the Linux kernel!\\n\");\n    static int cards_found;\n    static int global_quad_port_a; /* global ksp3 port a indication */\n    int i, err, pci_using_dac;\n</code></pre>"},{"location":"software/linux/misc/contributor/#3","title":"3. \u7f16\u8bd1\u6d4b\u8bd5","text":"<p>make modules</p> <p>\u4ec5\u7f16\u8bd1\u67d0\u4e00\u6587\u4ef6\u5939</p>"},{"location":"software/linux/misc/contributor/#4","title":"4. \u751f\u6210\u63d0\u4ea4\u5e76\u68c0\u67e5","text":"<p>git add  git commit</p>"},{"location":"software/linux/misc/contributor/#41-git-post-commit-hook","title":"4.1 \u6dfb\u52a0git post-commit hook","text":"<p>\u6b64<code>hook</code>\u811a\u672c\u5c06\u5728<code>git commit</code>\u540e\u81ea\u52a8\u6267\u884c\uff0c\u4e3b\u8981\u4f5c\u7528\u4e3a\u68c0\u67e5patch</p> <pre><code># \u5982\u679c\u5df2\u5b58\u5728\uff0c\u5219\u79fb\u51fa\u5907\u4efd\nvim .git/hook/post-commit\n\n# \u6dfb\u52a0\u5982\u4e0b\u4e24\u884c\u5185\u5bb9\n#!/bin/sh\nexec git show --format=email HEAD | ./scripts/checkpatch.pl --strict --codespell\n</code></pre>"},{"location":"software/linux/misc/contributor/#5","title":"5. \u751f\u6210\u8865\u4e01","text":"<pre><code>main@main-ThinkPad-X230:~/source/linux$ git format-patch -o /tmp/ HEAD^\n/tmp/0001-net-ethernet-intel-fix-debugs-function.patch\n</code></pre>"},{"location":"software/linux/misc/contributor/#6-maintainer","title":"6. \u83b7\u53d6\u8865\u4e01\u5bf9\u5e94\u7684maintainer","text":"<ol> <li> <p>\u4ecepatch\u83b7\u53d6 <pre><code>main@main-ThinkPad-X230:~/source/linux$ git show HEAD | perl scripts/get_maintainer.pl \\\n--separator , --nokeywords --nogit --nogit-fallback --norolestats\nJesse Brandeburg &lt;jesse.brandeburg@intel.com&gt;,Tony Nguyen &lt;anthony.l.nguyen@intel.com&gt;,\"David S. Miller\" \n&lt;davem@davemloft.net&gt;,Eric Dumazet &lt;edumazet@google.com&gt;,Jakub Kicinski &lt;kuba@kernel.org&gt;,Paolo Abeni \n&lt;pabeni@redhat.com&gt;,intel-wired-lan@lists.osuosl.org,netdev@vger.kernel.org,linux-kernel@vger.kernel.org\n</code></pre></p> </li> <li> <p>\u4ece\u6587\u4ef6\u83b7\u53d6 <pre><code>perl scripts/get_maintainer.pl --separator , --nokeywords --nogit -- \\\nnogit-fallback --norolestats -f drivers/staging/vt6655/baseband.c\n</code></pre></p> </li> </ol>"},{"location":"software/linux/misc/contributor/#7-maintainer","title":"7. \u5c06\u8865\u4e01\u53d1\u9001\u7ed9maintainer","text":""},{"location":"software/linux/misc/contributor/#71-mutt","title":"7.1 \u901a\u8fc7mutt","text":"<pre><code>mutt -H /tmp/0001-net-ethernet-intel-fix-debugs-function.patch\n# \u6309\u63d0\u793a\u8f93\u5165\u5bf9\u5e94\u4fe1\u606f\uff0c\u6536\u4ef6\u4eba\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u4e0a\u4e00\u6b65\u83b7\u53d6\u5230\u7684\uff0c\u8bf7\u4fdd\u6301\u5355\u884c\n</code></pre>"},{"location":"software/linux/misc/contributor/#72-git-send-email","title":"7.2 \u901a\u8fc7git send-email","text":"<p>\u914d\u7f6e <pre><code>git send-email --annotate HEAD^\n</code></pre></p>"},{"location":"software/linux/misc/contributor/#8","title":"8. \u7b49\u5f85\u7b54\u590d","text":""},{"location":"software/linux/misc/contributor/#9","title":"9. \u5728\u90ae\u4ef6\u4e2d\u8fdb\u884c\u4ea4\u6d41","text":""},{"location":"software/linux/misc/contributor/#10-maintainer","title":"10. maintainer\u8fdb\u884c\u5ba1\u9605\uff0c\u901a\u8fc7\u9012\u4ea4\u8865\u4e01\u7ed9\u6838\u5fc3\u7ef4\u62a4\u8005","text":""},{"location":"software/linux/misc/contributor/#11-patch","title":"11. \u6838\u5fc3\u7ef4\u62a4\u8005\u518d\u6b21\u68c0\u67e5patch","text":""},{"location":"software/linux/misc/contributor/#12-linus","title":"12. Linus\u5c06\u8865\u4e01\u5408\u5e76\u5230\u4e3b\u7ebf\u4ee3\u7801\u4e2d","text":""},{"location":"software/linux/misc/contributor/#13-lts","title":"13. \u76f8\u5173\u4eba\u5458\u8d1f\u8d23\u5c06\u8865\u4e01\u5408\u5e76\u5230\u54ea\u4e9bLTS\u7248\u672c","text":""},{"location":"software/linux/misc/contributor/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<p>kernelnewbies</p>"},{"location":"software/linux/misc/setup_email/","title":"Setup email","text":"<p>linux mutt+esmtp+fetchmail+procmail \u547d\u4ee4\u884c\u90ae\u7bb1\u5f00\u53d1\u73af\u5883\u914d\u7f6e</p>"},{"location":"software/linux/misc/setup_email/#_1","title":"\u5b89\u88c5\u5982\u4e0b\u8f6f\u4ef6\u5305","text":"<pre><code>main@main:~# sudo apt install fetchmail procmail mutt esmtp -y\n</code></pre>"},{"location":"software/linux/misc/setup_email/#_2","title":"\u53c2\u8003\u5982\u4e0b\u7f3a\u7701\u914d\u7f6e\u6587\u4ef6","text":"<ol> <li> <p><code>~/.fetchmailrc</code> \u8fd9\u91cc\u4ee5foxmail\u4e3a\u4f8b\uff0cuser\u540e\u9762\u586b\u7684\u662f\u4f60\u7684\u90ae\u7bb1\u5730\u5740\uff0cpassword\u662f\u4f60\u7684imap\u6388\u6743\u7801\uff0c\u9700\u8981\u5728\u7f51\u9875\u7248\u90ae\u7bb1\u8bbe\u7f6e\u4e2d\u83b7\u53d6 <pre><code>poll imap.qq.com protocol imap port 993 user \"************\" password \"****************\" keep ssl\n\nmimedecode\nmda \"/usr/bin/procmail\"\n</code></pre></p> </li> <li> <p><code>~/.procmailrc</code> <pre><code>MAILDIR=$HOME/Mail\n# main \u662f\u6211\u7684\u7528\u6237\u540d\nDEFAULT=/var/mail/main\nVERBOSE=off\nLOGFILE=/tmp/procmaillog\n\n:0:\ninbox/\n</code></pre></p> </li> <li> <p><code>~/.muttrc</code> <pre><code>set sendmail=\"/usr/bin/esmtp\"\nset envelope_from=yes\nset from=\"\u53d1\u4ef6\u4eba\u540d\u5b57 \u53d1\u4ef6\u4eba\u90ae\u7bb1\"\nset use_from=yes\nset edit_headers=yes\n#set move=yes\nset charset=\"utf-8\"\n\nset mbox_type = Maildir\nset folder = \"$HOME/Mail\"\nset spoolfile = \"$HOME/Mail/inbox\"\nset mbox=\"$HOME/Mail/seen\"\nset record=\"$HOME/Mail/sent\"\nset postponed=\"$HOME/Mail/draft\"\n</code></pre></p> </li> <li> <p><code>~/.esmtprc</code> \u540c\u7406\uff0cidentity\u548cusername\u662f\u90ae\u7bb1\u5730\u5740, password\u4e3a\u6388\u6743\u7801 <pre><code>identity \"****************\"\nhostname smtp.qq.com:587\nusername \"****************\"\npassword \"****************\"\nstarttls required\n</code></pre></p> </li> </ol>"},{"location":"software/linux/misc/setup_email/#_3","title":"\u62c9\u53d6\u90ae\u4ef6","text":"<pre><code>fetchmail -a\n</code></pre>"},{"location":"software/linux/misc/setup_email/#mutt","title":"Mutt \u67e5\u9605\u90ae\u4ef6","text":"<p>\u9996\u6b21\u6253\u5f00\u4f1a\u521b\u5efa\u672c\u5730\u90ae\u7bb1\u8def\u5f84 <pre><code>mutt\n</code></pre></p>"},{"location":"software/linux/misc/setup_email/#_4","title":"\u53c2\u8003\u8d44\u6599","text":"<p>https://www.jianshu.com/p/6a1020dc62f9</p>"},{"location":"software/noos/first_blink/","title":"First blink","text":"\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1a Blink <ul> <li>\u540d\u8bcd\u89e3\u91ca</li> <li>\u5199\u5728\u524d\u9762</li> <li>\u5b9e\u73b0</li> <li>\u66f4\u591a</li> <li>\u53c2\u8003\u8d44\u6599</li> </ul>"},{"location":"software/noos/first_blink/#_1","title":"\u76ee\u5f55","text":""},{"location":"software/noos/first_blink/#_2","title":"\u540d\u8bcd\u89e3\u91ca","text":"\u540d\u8bcd \u89e3\u91ca BootROM \u56fa\u5316\u5728\u82af\u7247\u5185\u90e8\u7684\u7a0b\u5e8f\uff0c\u7528\u6765\u8bc6\u522b\u5e76\u52a0\u8f7d\u56fa\u4ef6"},{"location":"software/noos/first_blink/#_3","title":"\u5199\u5728\u524d\u9762","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u5e73\u53f0\u57fa\u4e8e\u5982\u4e0b\u73af\u5883</p> \u540d\u79f0 \u7248\u672c SoC Allwinner Suniv F1C100s"},{"location":"software/rootfs/debian/debootstrap_usage/","title":"\u4f7f\u7528debootstrap\u6784\u5efadebian\u6839\u6587\u4ef6\u7cfb\u7edf","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#_1","title":"\u6784\u5efa\u6839\u6587\u4ef6\u7cfb\u7edf","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#_2","title":"\u73af\u5883","text":"<p>cpu\u67b6\u6784\uff1a armel 32bit kernel\u7248\u672c\uff1a 5.18.0</p>"},{"location":"software/rootfs/debian/debootstrap_usage/#_3","title":"\u955c\u50cf\u7684\u5236\u4f5c","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#debian","title":"Debian\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u5b89\u88c5","text":"<p>\u7b2c\u4e00\u9636\u6bb5 <pre><code># assume at ~/source/debian_work\n# run as root\n\nmkdir rootfs\n\n# for armel\n/usr/sbin/debootstrap --foreign --arch armel bullseye \\\n     rootfs https://mirrors.tuna.tsinghua.edu.cn/debian/\n\n# for armhf\n/usr/sbin/debootstrap --foreign --arch armhf bullseye \\\n     rootfs https://mirrors.tuna.tsinghua.edu.cn/debian/\n\ncp /usr/bin/qemu-arm-static rootfs/usr/bin\n\nLANG=en_US.UTF-8 chroot rootfs qemu-arm-static /bin/bash\n</code></pre> \u7b2c\u4e8c\u9636\u6bb5 \u5982\u679c\u76ee\u6807\u67b6\u6784\u4e0e\u4e3b\u673a\u4e0d\u540c\uff0c\u5219\u9700\u8981\u5b8c\u6210\u591a\u9636\u6bb5\u81ea\u4e3e\uff1a <pre><code>/debootstrap/debootstrap --second-stage\n</code></pre></p>"},{"location":"software/rootfs/debian/debootstrap_usage/#_4","title":"\u5b89\u88c5\u5fc5\u8981\u7684\u8f6f\u4ef6","text":"<p>\u5148\u5b89\u88c5locales\u751f\u6210\u4e00\u4e0b\u672c\u5730\u5316\u4fe1\u606f <pre><code>apt install locales\nlocale-gen en_US.UTF-8\n</code></pre></p> <pre><code>apt install vim net-tools alsa-utils iw wireless-tools gcc g++ udhcpc ssh make git python3 python3-pip bash-completion\n</code></pre>"},{"location":"software/rootfs/debian/debootstrap_usage/#_5","title":"\u5b89\u88c5\u53ef\u9009\u7684\u8f6f\u4ef6","text":"<pre><code>apt install build-essential\n</code></pre>"},{"location":"software/rootfs/debian/debootstrap_usage/#_6","title":"\u5b89\u88c5\u663e\u793a\u7ba1\u7406\u5668","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#xfce4","title":"\u5b89\u88c5 xfce4 \u684c\u9762","text":"<pre><code>sudo apt install xorg --no-install-recommends\nsudo apt install xfce4 --no-install-recommends\n\n\nxinit -- :0 -nolisten tcp vt7 -noreset -f /dev/null &amp;\n</code></pre>"},{"location":"software/rootfs/debian/debootstrap_usage/#lxde","title":"\u5b89\u88c5 lxde \u684c\u9762","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#lxqt","title":"\u5b89\u88c5 lxqt \u684c\u9762","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#wmaker","title":"\u5b89\u88c5 wmaker \u684c\u9762","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#fvwm-crystal","title":"\u5b89\u88c5 fvwm-crystal \u684c\u9762","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#mate","title":"\u5b89\u88c5 mate \u684c\u9762","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#ubi","title":"\u6253\u5305UBI\u955c\u50cf","text":"<pre><code>sudo mkfs.ubifs -d targetdir -e 0x1f000 -c 1023 -m 0x800 -x none -F -o ./rootfs.ubifs\nubinize -o rootfs.ubi -m 0x800 -p 0x20000 ./ubinize.cfg\n\n&gt; cat ubinize.cfg \n[ubifs]\nmode=ubi\nvol_id=0\nvol_type=dynamic\nvol_size=112MiB\nvol_name=rootfs\nvol_alignment=1\nvol_flags=autoresize\nimage=./rootfs.ubifs\n</code></pre>"},{"location":"software/rootfs/debian/debootstrap_usage/#_7","title":"\u66f4\u591a","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#t113-buildroot-sdk-debian","title":"T113 buildroot sdk \u79fb\u690ddebian","text":""},{"location":"software/rootfs/debian/debootstrap_usage/#_8","title":"\u4fee\u6539\u5185\u6838\u914d\u7f6e","text":"<pre><code>make linux-menuconfig\n</code></pre> <p>\u5f00\u542f\u5982\u4e0b\u9009\u9879</p> <p><code>General Setup ----&gt; Control Group support</code></p>"},{"location":"software/rootfs/debian/debootstrap_usage/#_9","title":"\u4fee\u6539\u8bbe\u5907\u6811","text":"<p>dtc -I dtb -O dts ./sun8iw20p1-t113-100ask-t113-pro.dtb &gt; dump.dts <pre><code>        spi1_pins_a: spi1@0 {\n                pins = \"PD11\", \"PD12\", \"PD13\", \"PD14\", \"PD15\"; /*clk mosi miso hold wp*/\n                function = \"spi1\";\n                drive-strength = &lt;10&gt;;\n        };\n\n        spi1_pins_b: spi1@1 {\n                pins = \"PD10\";\n                function = \"spi1\";\n                drive-strength = &lt;10&gt;;\n                bias-pull-up;   // only CS should be pulled up\n        };\n\n        spi1_pins_c: spi1@2 {\n                allwinner,pins = \"PD11\", \"PD12\", \"PD13\", \"PD14\",\"PD15\", \"PD10\";\n                allwinner,function = \"gpio_in\";\n                allwinner,muxsel = &lt;0&gt;;\n                drive-strength = &lt;10&gt;;\n        };\n\n        st7789v: st7789v@0 {\n                #address-cells = &lt;1&gt;;\n                #size-cells = &lt;1&gt;;\n                compatible = \"sitronix,st7789v\";\n                status = \"okay\";\n                reg = &lt;0&gt;;\n                spi-max-frequency = &lt;50000000&gt;;\n                rgb;\n                buswidth = &lt;8&gt;;\n                rotate = &lt;90&gt;;\n                fps = &lt;60&gt;;\n                spi-cpol;\n                spi-cpha;\n                reset-gpios = &lt;&amp;pio PB 3 GPIO_ACTIVE_HIGH&gt;;\n                dc-gpios = &lt;&amp;pio PD 22 GPIO_ACTIVE_LOW&gt;;\n                //debug = &lt;1&gt;;\n        }; \n</code></pre></p>"},{"location":"software/rootfs/debian/debootstrap_usage/#debianext4","title":"\u6253\u5305debian\u6587\u4ef6\u7cfb\u7edf\u4e3aext4\u683c\u5f0f","text":"<pre><code># generate a empty file, size :1024MB\ndd if=/dev/zero of=rootfs.ext2 bs=1M count=2048\n\n# pack rootfs into the ext2 file\nsudo mke2fs -t ext2 -d ./rootfs -r 0 -L rootfs -O ^64bit -m 5 rootfs.ext2\n\n# ext2 to ext4\nsudo tune2fs -O extents,has_journal,large_file,huge_file ./rootfs.ext2\n</code></pre>"},{"location":"software/rootfs/debian/debootstrap_usage/#buildrootgenimagesd","title":"\u4f7f\u7528buildroot\u7684genimage\u5de5\u5177\uff0c\u91cd\u65b0\u6253\u5305sd\u5361\u955c\u50cf","text":"<pre><code># \u5728 out/images \u76ee\u5f55\u4e0b\n../host/bin/genimage --config ./genimage.cfg --rootpath=$PWD/../target --inputpath=$PWD --mcopy=../host/bin/mcopy --outputpath=$PWD\n</code></pre> <p>\u6ce8\u610f\uff1a \u6b64\u73af\u5883\u57fa\u4e8e\u767e\u95ee\u7f51 t113 buildroot\u5de5\u7a0b</p> <pre><code># &lt;file system&gt; &lt;mount pt&gt;      &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;                                                                                                                         \n/dev/root       /               ext2    rw,noauto       0       1\n/dev/mmcblk0p4  /boot           vfat    rw,defaults     0       0\nproc            /proc           proc    defaults        0       0\ndevpts          /dev/pts        devpts  defaults,gid=5,mode=620,ptmxmode=0666   0       0\ntmpfs           /dev/shm        tmpfs   mode=0777       0       0\ntmpfs           /tmp            tmpfs   mode=1777       0       0\ntmpfs           /run            tmpfs   mode=0755,nosuid,nodev  0       0\nsysfs           /sys            sysfs   defaults        0       0\n/swap           swap            swap    defaults        0       0\n</code></pre>"},{"location":"software/rootfs/debian/debootstrap_usage/#sd","title":"\u91cd\u65b0\u5237\u5165sd\u5361","text":"<pre><code>sudo dd if=./100ask-t113-pro_sdcard.img of=/dev/sda bs=4M\n</code></pre> <pre><code>Disk /dev/sda\uff1a29.12 GiB\uff0c31266439168 \u5b57\u8282\uff0c61067264 \u4e2a\u6247\u533a\nDisk model: MassStorageClass\n\u5355\u5143\uff1a\u6247\u533a / 1 * 512 = 512 \u5b57\u8282\n\u6247\u533a\u5927\u5c0f(\u903b\u8f91/\u7269\u7406)\uff1a512 \u5b57\u8282 / 512 \u5b57\u8282\nI/O \u5927\u5c0f(\u6700\u5c0f/\u6700\u4f73)\uff1a512 \u5b57\u8282 / 512 \u5b57\u8282\n\u78c1\u76d8\u6807\u7b7e\u7c7b\u578b\uff1agpt\n\u78c1\u76d8\u6807\u8bc6\u7b26\uff1a6B54CC89-E5AB-40E4-8552-38ED1A926CCD\n\n\u8bbe\u5907          \u8d77\u70b9    \u672b\u5c3e    \u6247\u533a  \u5927\u5c0f \u7c7b\u578b\n/dev/sda1    35392   39487    4096    2M Linux \u6587\u4ef6\u7cfb\u7edf\n/dev/sda2    39488   39743     256  128K Linux \u6587\u4ef6\u7cfb\u7edf\n/dev/sda3    39744   39999     256  128K Linux \u6587\u4ef6\u7cfb\u7edf\n/dev/sda4    40000  105535   65536   32M Linux \u6587\u4ef6\u7cfb\u7edf\n/dev/sda5   105536 4299839 4194304    2G Linux \u6587\u4ef6\u7cfb\u7edf\n/dev/sda6  4299840 4824127  524288  256M Linux \u6587\u4ef6\u7cfb\u7edf\n\n\n# fdisk -l\nDisk /dev/mmcblk0: 29 GB, 31266439168 bytes, 61067264 sectors\n954176 cylinders, 4 heads, 16 sectors/track\nUnits: sectors of 1 * 512 = 512 bytes\n\nDevice       Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type\n/dev/mmcblk0p1 *  2,124,59    6,145,11         40000     105535      65536 32.0M  c Win95 FAT32 (LBA)\n/dev/mmcblk0p2    6,145,12    267,166,27      105536    4299839    4194304 2048M 83 Linux\n/dev/mmcblk0p3    267,166,28  300,73,29      4299840    4824127     524288  256M  c Win95 FAT32 (LBA)\n/dev/mmcblk0p4    0,0,2       0,33,1               1       2079       2079 1039K ee EFI GPT\n</code></pre> <p>[PATCH] <pre><code>From 5a2693e6c4d189d802e1e72d5dfb7c0631815361 Mon Sep 17 00:00:00 2001\nFrom: huazheng &lt;huazheng@keyirobot.com&gt;\nDate: Fri, 14 Apr 2023 18:15:33 +0800\nSubject: [PATCH] patch fbtft to support 240x280 st7789v tft lcd\n\nSigned-off-by: huazheng &lt;huazheng@keyirobot.com&gt;\n---\n drivers/staging/fbtft/fb_st7789v.c | 50 +++++++++++++++++++++++++-\n drivers/staging/fbtft/fbtft-core.c | 58 ++++++++++++++++++++++++++++--\n 2 files changed, 105 insertions(+), 3 deletions(-)\n\ndiff --git a/drivers/staging/fbtft/fb_st7789v.c b/drivers/staging/fbtft/fb_st7789v.c\nindex 3c3f38793..939cc508b 100644\n--- a/drivers/staging/fbtft/fb_st7789v.c\n+++ b/drivers/staging/fbtft/fb_st7789v.c\n@@ -74,6 +74,7 @@ enum st7789v_command {\n  *\n  * Return: 0 on success, &lt; 0 if error occurred.\n  */\n+#if 0\n static int init_display(struct fbtft_par *par)\n {\n    /* turn off sleep mode */\n@@ -122,6 +123,53 @@ static int init_display(struct fbtft_par *par)\n    write_reg(par, MIPI_DCS_SET_DISPLAY_ON);\n    return 0;\n }\n+#else\n+static int init_display(struct fbtft_par *par)\n+{\n+        int rc;\n+\n+        par-&gt;fbtftops.reset(par);\n+       mdelay(100);\n+\n+        write_reg(par, 0x11); //Sleep out\n+        mdelay(120);     //Delay 120ms\n+\n+        //************* Start Initial Sequence **********//\n+        write_reg(par, 0x36, 0x00);\n+\n+        write_reg(par, 0x3A, 0x05);\n+\n+        write_reg(par, 0xB2,0x0C,0x0C,0x00,0x33,0x33);\n+\n+        write_reg(par, 0xB7,0x35);\n+\n+        /* VCOM  = 1.35V */\n+        write_reg(par, 0xBB, 0x32);\n+\n+        write_reg(par, 0xC2, 0x01);\n+\n+        /* GVDD = 4.8V */\n+        write_reg(par, 0xC3,0x15);\n+\n+        /* VDX = 0V */\n+        write_reg(par, 0xC4, 0x20);\n+\n+        /* FPS = 60Hz */\n+        write_reg(par, 0xC6,0x0F);\n+\n+        write_reg(par, 0xD0, 0xA4, 0xA1);\n+\n+        write_reg(par, 0xE0,0xD0,0x08,0x0E,0x09,0x09,0x05,0x31,0x33,0x48,0x17,0x14,0x15,0x31,0x34);\n+\n+        write_reg(par, 0xE1,0xD0,0x08,0x0E,0x09,0x09,0x15,0x31,0x33,0x48,0x17,0x14,0x15,0x31,0x34);\n+\n+        write_reg(par, MIPI_DCS_ENTER_INVERT_MODE);\n+\n+        write_reg(par, MIPI_DCS_SET_DISPLAY_ON);\n+\n+        return 0;\n+}\n+#endif\n\n /**\n  * set_var() - apply LCD properties like rotation and BGR mode\n@@ -231,7 +279,7 @@ static int blank(struct fbtft_par *par, bool on)\n static struct fbtft_display display = {\n    .regwidth = 8,\n    .width = 240,\n-   .height = 320,\n+   .height = 280,\n    .gamma_num = 2,\n    .gamma_len = 14,\n    .gamma = DEFAULT_GAMMA,\ndiff --git a/drivers/staging/fbtft/fbtft-core.c b/drivers/staging/fbtft/fbtft-core.c\nindex 61f0286fb..27b9bc7b3 100644\n--- a/drivers/staging/fbtft/fbtft-core.c\n+++ b/drivers/staging/fbtft/fbtft-core.c\n@@ -24,6 +24,7 @@\n #include &lt;linux/platform_device.h&gt;\n #include &lt;linux/spinlock.h&gt;\n #include &lt;linux/of.h&gt;\n+#include &lt;linux/of_gpio.h&gt;\n #include &lt;video/mipi_display.h&gt;\n\n #include \"fbtft.h\"\n@@ -71,6 +72,7 @@ void fbtft_dbg_hex(const struct device *dev, int groupsize,\n EXPORT_SYMBOL(fbtft_dbg_hex);\n\n #ifdef CONFIG_OF\n+#if 0\n static int fbtft_request_one_gpio(struct fbtft_par *par,\n                  const char *name, int index,\n                  struct gpio_desc **gpiop)\n@@ -91,6 +93,39 @@ static int fbtft_request_one_gpio(struct fbtft_par *par,\n\n    return ret;\n }\n+#else\n+static int fbtft_request_one_gpio(struct fbtft_par *par,\n+                                  const char *name, int index,\n+                                  struct gpio_desc **gpiop)\n+{\n+        int ret, gpio;\n+        struct device *dev = par-&gt;info-&gt;device;\n+        struct device_node *np = dev-&gt;of_node;\n+        enum of_gpio_flags flags;\n+\n+        /* Get GPIO from device tree */\n+        gpio = of_get_named_gpio_flags(np, name, index, &amp;flags);\n+        if (gpio &lt; 0) {\n+                return 0;\n+        }\n+\n+\n+        ret = devm_gpio_request_one(dev, gpio,\n+                        (flags &amp; OF_GPIO_ACTIVE_LOW)?GPIOF_OUT_INIT_LOW:GPIOF_OUT_INIT_HIGH,\n+                        dev-&gt;driver-&gt;name);\n+        if (ret) {\n+                dev_err(dev, \"Failed to request %s GPIO%d\\n\", name, gpio);\n+                return -ENODEV;\n+        }\n+\n+        *gpiop = gpio_to_desc(gpio);\n+\n+        fbtft_par_dbg(DEBUG_REQUEST_GPIOS, par, \"%s: '%s' GPIO%d\\n\",\n+                      __func__, name, gpio);\n+\n+        return ret;\n+}\n+#endif\n\n static int fbtft_request_gpios_dt(struct fbtft_par *par)\n {\n@@ -100,10 +135,10 @@ static int fbtft_request_gpios_dt(struct fbtft_par *par)\n    if (!par-&gt;info-&gt;device-&gt;of_node)\n        return -EINVAL;\n\n-   ret = fbtft_request_one_gpio(par, \"reset\", 0, &amp;par-&gt;gpio.reset);\n+   ret = fbtft_request_one_gpio(par, \"reset-gpios\", 0, &amp;par-&gt;gpio.reset);\n    if (ret)\n        return ret;\n-   ret = fbtft_request_one_gpio(par, \"dc\", 0, &amp;par-&gt;gpio.dc);\n+   ret = fbtft_request_one_gpio(par, \"dc-gpios\", 0, &amp;par-&gt;gpio.dc);\n    if (ret)\n        return ret;\n    ret = fbtft_request_one_gpio(par, \"rd\", 0, &amp;par-&gt;gpio.rd);\n@@ -217,6 +252,8 @@ EXPORT_SYMBOL(fbtft_unregister_backlight);\n static void fbtft_set_addr_win(struct fbtft_par *par, int xs, int ys, int xe,\n                   int ye)\n {\n+   xs = xs + 20;\n+   xe = xe + 20;\n    write_reg(par, MIPI_DCS_SET_COLUMN_ADDRESS,\n          (xs &gt;&gt; 8) &amp; 0xFF, xs &amp; 0xFF, (xe &gt;&gt; 8) &amp; 0xFF, xe &amp; 0xFF);\n\n@@ -226,6 +263,7 @@ static void fbtft_set_addr_win(struct fbtft_par *par, int xs, int ys, int xe,\n    write_reg(par, MIPI_DCS_WRITE_MEMORY_START);\n }\n\n+#if 0\n static void fbtft_reset(struct fbtft_par *par)\n {\n    if (!par-&gt;gpio.reset)\n@@ -236,6 +274,22 @@ static void fbtft_reset(struct fbtft_par *par)\n    gpiod_set_value_cansleep(par-&gt;gpio.reset, 0);\n    msleep(120);\n }\n+#else\n+static void fbtft_reset(struct fbtft_par *par)\n+{\n+        if (!par-&gt;gpio.reset)\n+                return;\n+\n+        fbtft_par_dbg(DEBUG_RESET, par, \"%s()\\n\", __func__);\n+\n+        gpiod_set_value_cansleep(par-&gt;gpio.reset, 1);\n+        usleep_range(20, 40);\n+        gpiod_set_value_cansleep(par-&gt;gpio.reset, 0);   /* Low level reset */\n+        msleep(120);\n+\n+        gpiod_set_value_cansleep(par-&gt;gpio.reset, 1);  /* Activate chip */\n+}\n+#endif\n\n static void fbtft_update_display(struct fbtft_par *par, unsigned int start_line,\n                 unsigned int end_line)\n-- \n2.40.0\n</code></pre></p>"},{"location":"software/rootfs/debian/debootstrap_usage/#_10","title":"\u53c2\u8003\u8d44\u6599","text":"<p>Debian GNU/Linux \u5b89\u88c5\u624b\u518c \u901a\u8fc7 Unix/Linux \u7cfb\u7edf\u6765\u5b89\u88c5 Debian GNU/Linux</p>"},{"location":"software/rootfs/raw/squashfs_usage/","title":"Squashfs usage","text":"Linux Squashfs \u6587\u4ef6\u7cfb\u7edf\u7684\u4f7f\u7528  \u8bbe\u65bd \u7248\u672c CPU Allwinner F1C100s linux 6.4.0-rc4 uboot v2023.07-rc4 buildroot v2023.02 \u95ea\u5b58 Winbond SPI-Nand 128MB W25N01G"},{"location":"software/rootfs/raw/squashfs_usage/#buildroot-ubifs","title":"\u4ece Buildroot \u751f\u6210 UBIFS","text":""},{"location":"software/rootfs/raw/squashfs_usage/#ubifs","title":"\u624b\u52a8\u521b\u5efa UBIFS","text":""},{"location":"software/rootfs/raw/squashfs_usage/#uboot","title":"uboot \u4f20\u9012\u7684\u542f\u52a8\u53c2\u6570","text":""},{"location":"software/rootfs/raw/squashfs_usage/#linux","title":"linux \u76f8\u5173\u652f\u6301","text":""},{"location":"software/rootfs/raw/squashfs_usage/#config","title":"config","text":""},{"location":"software/rootfs/raw/squashfs_usage/#_1","title":"\u542f\u52a8\u65e5\u5fd7","text":""},{"location":"software/rootfs/raw/squashfs_usage/#_2","title":"\u672a\u89e3\u51b3\u7684\u95ee\u9898","text":""},{"location":"software/rootfs/raw/ubifs_usage/","title":"Ubifs usage","text":"Linux UBIFS \u6587\u4ef6\u7cfb\u7edf\u7684\u4f7f\u7528 <p>\u5e73\u53f0\u73af\u5883\u5982\u4e0b</p> \u8bbe\u65bd \u7248\u672c CPU Allwinner F1C100s linux 6.4.0-rc4 uboot v2023.07-rc4 buildroot v2023.02 \u95ea\u5b58 Winbond SPI-Nand 128MB W25N01G"},{"location":"software/rootfs/raw/ubifs_usage/#buildroot-ubifs","title":"\u4ece Buildroot \u751f\u6210 UBIFS","text":""},{"location":"software/rootfs/raw/ubifs_usage/#ubifs","title":"\u624b\u52a8\u521b\u5efa UBIFS","text":"<p>\u53c2\u8003\u5982\u4e0b\u5185\u5bb9 <pre><code>3\uff0e\u5236\u4f5c ubifs\nUbifs \u7684\u5236\u4f5c\u9700\u8981\u4ee5\u4e0b\u4e24\u4e2a\u547d\u4ee4\n\uf081mkfs.ubifs\uff1a \u5236\u4f5c UBIFS image\n\uf082ubinize\uff1a\u6839\u636e UBIFS image \u5236\u4f5c ubi.img\uff0c\u8fd9\u4e2a ubi.img \u662f\u901a\u8fc7 u-boot \u76f4\u63a5\u70e7\u5199\u5728 nand flash \u5206\u533a\u4e0a\u7684\u3002\n\nAM335x Linux SDK \u91cc\u9762\u5e26\u6709\u5236\u4f5c\u597d\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u662f.tar.gz \u7684\u538b\u7f29\u6587\u4ef6\uff0c\u53ef\u4ee5\u89e3\u538b\u5728\n\u4e00\u4e2a\u76ee\u5f55\u4e0b\u505a\u4e3a UBI \u6587\u4ef6\u7cfb\u7edf\u5185\u5bb9\uff0c\u5982/home/usr/fs\u3002\nGPEVM \u677f\u4e0a\u7684 NAND \u578b\u53f7\u4e3a MT29F2G08\uff0cpage size \u4e3a 2048B\uff0cblock size \u4e3a\n64x2048B=131072B\uff0cblock count \u4e3a 2048\u3002\u5982\u679c\u5236\u4f5c\u9488\u5bf9 GPEVM \u677f\u7684 ubifs\uff0c\u6267\u884c\n\u5982\u4e0b\u4e24\u6761\u547d\u4ee4:\n\n1. $ mkfs.ubifs \u2013F -q -r /home/usr/fs -m 2048 -e 126976 -c 2047 -o ubifs.img\n\n\u53c2\u6570\u7b80\u4ecb\uff1a\n-F\uff1a\u4f7f\u80fd\"white-space-fixup\"\uff0c\u5982\u679c\u662f\u901a\u8fc7 u-boot \u70e7\u5199\u9700\u8981\u4f7f\u80fd\u6b64\u529f\u80fd\u3002\n-r\uff1a\u5f85\u5236\u4f5c\u7684\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\n-m\uff1aNAND FLASH \u7684\u6700\u5c0f\u8bfb\u5199\u5355\u5143\uff0c\u4e00\u822c\u4e3a page size\n-e\uff1aLEB size\uff0c\u5bf9\u4e8e AM335x \u7684 NAND driver\uff0c\u4e3a block size-2x(page size)\n-c\uff1a\u6587\u4ef6\u7cfb\u7edf\u6240\u5360\u7528\u7684\u6700\u5927 block \u6570\uff0c\u4e00\u822c\u5c0f\u4e8e\u7b49\u4e8e block count -1\n-o\uff1a\u8f93\u51fa\u7684 ubifs.img \u6587\u4ef6\n\n2. $ ubinize -o ubi.img -m 2048 -p 128KiB ubinize.cfg\n\u53c2\u6570\u7b80\u4ecb\uff1a\n-p\uff1ablock size\u3002\n-m\uff1aNAND FLASH \u7684\u6700\u5c0f\u8bfb\u5199\u5355\u5143\uff0c\u4e00\u822c\u4e3a page size\n-o\uff1a\u8f93\u51fa\u7684 ubi.img \u6587\u4ef6\nubinize.cfg \u4e3a ubinize \u6240\u9700\u8981\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\n\n[ubifs]\nmode=ubi\nimage=ubifs.img\nvol_id=0\nvol_size=200MiB\nvol_type=dynamic\nvol_name=rootfs\nvol_flags=autoresize\n\n4.\u70e7\u5199 ubifs\n\u53ef\u901a\u8fc7 u-boot \u547d\u4ee4\u5c06\u751f\u6210\u7684 ubi.img\uff0825M\uff09\u70e7\u5199\u5230 NAND FLASH \u5206\u533a\u4e0a\uff0c\u5982\u4e0b\u793a\n\u4f8b\u662f\u5c06 ubi.img \u5148\u5b58\u50a8\u5230 SD \u5361\u4e0a\uff0c\u7136\u540e\u901a\u8fc7 u-boot \u7684 fatload \u547d\u4ee4\u5c06\u5176\u62f7\u8d1d\u81f3\u5185\u5b58\n\u4e2d\u3002\n\nu-boot# mw.b 0x82000000 0xFF \nu-boot# mmc rescan\nu-boot# fatload mmc 0 0x82000000 ubi.img\nu-boot# nand erase 0x00780000 0xF880000\nu-boot# nand write 0x82000000 0x00780000 0x1E00000\n5.Linux \u542f\u52a8\u8bbe\u7f6e\n\u5728 U-boot \u4e0b\u8bbe\u7f6e\u542f\u52a8\u4fe1\u606f\u5982\u4e0b\uff1a\n\n #setenv bootargs 'console=ttyO0,115200n8 noinitrd ip=off mem=256M \n rootwait=1 rw ubi.mtd=7,2048 rootfstype=ubifs root=ubi0:rootfs \ninit=/init'\n</code></pre> \u4ee5\u4e0a\u662f\u8f6c\u8f7d</p>"},{"location":"software/rootfs/raw/ubifs_usage/#uboot","title":"uboot \u4f20\u9012\u7684\u542f\u52a8\u53c2\u6570","text":"<p><pre><code>console=tty0 console=ttyS0,115200 panic=5 rootwait mtdparts=spi0.0:512K@0x20000(u-boot),128K@0x100000(dtb),5M@0x120000(kernel),24M@0x620000(rootfs),-(reserve) rw ubi.mtd=3,2048 rootfstype=ubifs root=ubi0:rootfs init=/linuxrc\n</code></pre> \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684 rootfs \u7684\u5927\u5c0f \u5fc5\u987b\u8981\u6bd4ubinize.cfg\u91cc\u9762\u8bbe\u7f6e\u7684vol_size\u5927\u4e00\u4e9b\uff0c\u56e0\u4e3aubifs\u8981\u9884\u7559\u4e00\u90e8\u5206PEB\u6765\u6807\u8bb0\u574f\u5757\u7b49\uff0c\u5177\u4f53\u9884\u7559\u591a\u5c11\uff0c\u8fd8\u6ca1\u5b9e\u9a8c\u3002</p>"},{"location":"software/rootfs/raw/ubifs_usage/#linux","title":"linux \u76f8\u5173\u652f\u6301","text":""},{"location":"software/rootfs/raw/ubifs_usage/#config","title":"config","text":"<ul> <li> <p>\u5b9a\u4f4d\u5230 Device Drivers &gt; Memory Technology Device (MTD) support</p> <pre><code>\u5f00\u542f\u5982\u4e0b\u9009\u9879\uff1a\nCONFIG_MTD_UBI\n</code></pre> </li> <li> <p>\u5b9a\u4f4d\u5230 File systems &gt; Miscellaneous filesystems </p> <pre><code>\u5f00\u542f\u5982\u4e0b\u9009\u9879\uff1a\nCONFIG_UBIFS_FS\n\u53ef\u6839\u636e\u9700\u6c42\u5f00\u542f\u7279\u6027\u652f\u6301\n</code></pre> </li> </ul>"},{"location":"software/rootfs/raw/ubifs_usage/#_1","title":"\u542f\u52a8\u65e5\u5fd7","text":"<pre><code>[    0.000000] Booting Linux on physical CPU 0x0\n[    0.000000] Linux version 6.4.0-rc7-ninjar-lite+ (developer@lunarpc) (arm-linux-gnueabi-gcc (Ubuntu 12.2.0-14ubuntu2) 12.2.0, GNU ld (GNU Binutils for Ubuntu) 2.40) #13 3\n[    0.000000] CPU: ARM926EJ-S [41069265] revision 5 (ARMv5TEJ), cr=0005317f\n[    0.000000] CPU: VIVT data cache, VIVT instruction cache\n[    0.000000] OF: fdt: Machine model: Lichee Pi Nano\n[    0.000000] Memory policy: Data cache writeback\n[    0.000000] Zone ranges:\n[    0.000000]   Normal   [mem 0x0000000080000000-0x0000000081ffffff]\n[    0.000000]   HighMem  empty\n[    0.000000] Movable zone start for each node\n[    0.000000] Early memory node ranges\n[    0.000000]   node   0: [mem 0x0000000080000000-0x0000000081ffffff]\n[    0.000000] Initmem setup node 0 [mem 0x0000000080000000-0x0000000081ffffff]\n[    0.000000] Kernel command line: console=tty0 console=ttyS0,115200 panic=5 rootwait mtdparts=spi0.0:512K@0x20000(u-boot),128K@0x100000(dtb),5M@0x120000(kernel),24M@0x620c\n[    0.000000] Dentry cache hash table entries: 4096 (order: 2, 16384 bytes, linear)\n[    0.000000] Inode-cache hash table entries: 2048 (order: 1, 8192 bytes, linear)\n[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 8128\n[    0.000000] mem auto-init: stack:all(zero), heap alloc:off, heap free:off\n[    0.000000] Memory: 21280K/32768K available (7168K kernel code, 588K rwdata, 1468K rodata, 1024K init, 267K bss, 11488K reserved, 0K cma-reserved, 0K highmem)\n[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1\n[    0.000000] NR_IRQS: 16, nr_irqs: 16, preallocated irqs: 16\n[    0.000008] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns\n[    0.000096] clocksource: timer: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns\n[    0.000636] Console: colour dummy device 80x30\n[    0.000678] printk: console [tty0] enabled\n[    0.001353] Calibrating delay loop... 346.52 BogoMIPS (lpj=1732608)\n[    0.060223] pid_max: default: 32768 minimum: 301\n[    0.060690] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)\n[    0.060829] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)\n[    0.062183] CPU: Testing write buffer coherency: ok\n[    0.065943] Setting up static identity map for 0x80100000 - 0x8010003c\n[    0.067636] devtmpfs: initialized\n[    0.072553] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns\n[    0.072733] futex hash table entries: 256 (order: -1, 3072 bytes, linear)\n[    0.072998] pinctrl core: initialized pinctrl subsystem\n[    0.075100] NET: Registered PF_NETLINK/PF_ROUTE protocol family\n[    0.076740] DMA: preallocated 256 KiB pool for atomic coherent allocations\n[    0.095107] SCSI subsystem initialized\n[    0.095477] usbcore: registered new interface driver usbfs\n[    0.095660] usbcore: registered new interface driver hub\n[    0.095841] usbcore: registered new device driver usb\n[    0.098603] clocksource: Switched to clocksource timer\n[    0.130604] NET: Registered PF_INET protocol family\n[    0.131191] IP idents hash table entries: 2048 (order: 2, 16384 bytes, linear)\n[    0.132537] tcp_listen_portaddr_hash hash table entries: 1024 (order: 0, 4096 bytes, linear)\n[    0.132711] Table-perturb hash table entries: 65536 (order: 6, 262144 bytes, linear)\n[    0.132797] TCP established hash table entries: 1024 (order: 0, 4096 bytes, linear)\n[    0.132881] TCP bind hash table entries: 1024 (order: 1, 8192 bytes, linear)\n[    0.133092] TCP: Hash tables configured (established 1024 bind 1024)\n[    0.133343] UDP hash table entries: 256 (order: 0, 4096 bytes, linear)\n[    0.133461] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes, linear)\n[    0.133895] NET: Registered PF_UNIX/PF_LOCAL protocol family\n[    0.135424] RPC: Registered named UNIX socket transport module.\n[    0.135556] RPC: Registered udp transport module.\n[    0.135600] RPC: Registered tcp transport module.\n[    0.135632] RPC: Registered tcp NFSv4.1 backchannel transport module.\n[    0.139709] NetWinder Floating Point Emulator V0.97 (double precision)\n[    0.141230] Initialise system trusted keyrings\n[    0.142052] workingset: timestamp_bits=30 max_order=13 bucket_order=0\n[    0.143644] jffs2: version 2.2. (NAND) (SUMMARY)  \u00a9 2001-2006 Red Hat, Inc.\n[    0.315146] Key type asymmetric registered\n[    0.315277] Asymmetric key parser 'x509' registered\n[    0.315564] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 253)\n[    0.315662] io scheduler mq-deadline registered\n[    0.315707] io scheduler kyber registered\n[    0.509645] Serial: 8250/16550 driver, 8 ports, IRQ sharing disabled\n[    0.516634] usbcore: registered new interface driver usb-storage\n[    0.519379] usbcore: registered new interface driver usbhid\n[    0.519496] usbhid: USB HID core driver\n[    0.520325] NET: Registered PF_INET6 protocol family\n[    0.523436] Segment Routing with IPv6\n[    0.523723] In-situ OAM (IOAM) with IPv6\n[    0.524017] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver\n[    0.525654] NET: Registered PF_PACKET protocol family\n[    0.525982] Key type dns_resolver registered\n[    0.534001] Loading compiled-in X.509 certificates\n[    0.553271] gpio gpiochip0: Static allocation of GPIO base is deprecated, use dynamic allocation.\n[    0.560191] suniv-f1c100s-pinctrl 1c20800.pinctrl: initialized sunXi PIO driver\n[    0.561635] suniv-f1c100s-pinctrl 1c20800.pinctrl: supply vcc-pe not found, using dummy regulator\n[    0.564084] printk: console [ttyS0] disabled\n[    0.584470] 1c25000.serial: ttyS0 at MMIO 0x1c25000 (irq = 116, base_baud = 6250000) is a 16550A\n[    0.584690] printk: console [ttyS0] enabled\n[    1.122530] 1c25800.serial: ttyS2 at MMIO 0x1c25800 (irq = 117, base_baud = 6250000) is a 16550A\n[    1.132740] suniv-f1c100s-pinctrl 1c20800.pinctrl: supply vcc-pc not found, using dummy regulator\n[    1.142538] sun6i-spi 1c05000.spi: Failed to request TX DMA channel\n[    1.149026] sun6i-spi 1c05000.spi: Failed to request RX DMA channel\n[    1.157449] spi-nand spi0.0: Winbond SPI NAND was found.\n[    1.162959] spi-nand spi0.0: 128 MiB, block size: 128 KiB, page size: 2048, OOB size: 64\n[    1.171473] 5 cmdlinepart partitions found on MTD device spi0.0\n[    1.177465] Creating 5 MTD partitions on \"spi0.0\":\n[    1.182365] 0x000000020000-0x0000000a0000 : \"u-boot\"\n[    1.191517] 0x000000100000-0x000000120000 : \"dtb\"\n[    1.199565] 0x000000120000-0x000000620000 : \"kernel\"\n[    1.216775] 0x000000620000-0x000001e20000 : \"rootfs\"\n[    1.267810] 0x000001e20000-0x000008000000 : \"reserve\"\n[    1.450644] suniv-f1c100s-pinctrl 1c20800.pinctrl: supply vcc-pa not found, using dummy regulator\n[    1.460485] sun6i-spi 1c06000.spi: Failed to request TX DMA channel\n[    1.466865] sun6i-spi 1c06000.spi: Failed to request RX DMA channel\n[    1.475672] rotary-encoder rotary@0: gray\n[    1.480072] suniv-f1c100s-pinctrl 1c20800.pinctrl: supply vcc-pd not found, using dummy regulator\n[    1.490985] input: rotary@0 as /devices/platform/rotary@0/input/input0\n[    1.502130] usb_phy_generic usb_phy_generic.0.auto: dummy supplies not allowed for exclusive requests\n[    1.512559] musb-hdrc musb-hdrc.1.auto: MUSB HDRC host driver\n[    1.518485] musb-hdrc musb-hdrc.1.auto: new USB bus registered, assigned bus number 1\n[    1.527316] suniv-f1c100s-pinctrl 1c20800.pinctrl: supply vcc-pf not found, using dummy regulator\n[    1.541154] hub 1-0:1.0: USB hub found\n[    1.545137] hub 1-0:1.0: 1 port detected\n[    1.551775] ubi0: attaching mtd3\n[    1.565601] sunxi-mmc 1c0f000.mmc: initialized, max. request size: 16384 KB\n[    1.598898] random: crng init done\n[    1.797859] ubi0: scanning is finished\n[    1.818248] ubi0: attached mtd3 (name \"rootfs\", size 24 MiB)\n[    1.824145] ubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\n[    1.831129] ubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\n[    1.837943] ubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\n[    1.844970] ubi0: good PEBs: 192, bad PEBs: 0, corrupted PEBs: 0\n[    1.851040] ubi0: user volume: 1, internal volumes: 1, max. volumes count: 128\n[    1.858288] ubi0: max/mean erase counter: 2/0, WL threshold: 256, image sequence number: 1474628676\n[    1.867396] ubi0: available PEBs: 0, total reserved PEBs: 192, PEBs reserved for bad PEB handling: 20\n[    1.877734] input: gpio-keys as /devices/platform/gpio-keys/input/input1\n[    1.884959] ubi0: background thread \"ubi_bgt0d\" started, PID 33\n[    1.892277] cfg80211: Loading compiled-in X.509 certificates for regulatory database\n[    1.907350] Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'\n[    1.913265] clk: Disabling unused clocks\n[    1.918229] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2\n[    1.927061] cfg80211: failed to load regulatory.db\n[    1.932659] UBIFS: parse sync\n[    1.937945] UBIFS (ubi0:0): Mounting in unauthenticated mode\n[    1.946638] UBIFS (ubi0:0): background thread \"ubifs_bgt0_0\" started, PID 37\n[    2.098914] UBIFS (ubi0:0): UBIFS: mounted UBI device 0, volume 0, name \"rootfs\"\n[    2.106435] UBIFS (ubi0:0): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes\n[    2.116478] UBIFS (ubi0:0): FS size: 19935232 bytes (19 MiB, 157 LEBs), max 1023 LEBs, journal size 9023488 bytes (8 MiB, 72 LEBs)\n[    2.128347] UBIFS (ubi0:0): reserved for root: 0 bytes (0 KiB)\n[    2.134273] UBIFS (ubi0:0): media format: w4/r0 (latest is w5/r0), UUID CA1F2BD6-4AE3-4BCC-A9B1-7CEB78F71E82, small LPT model\n[    2.150555] VFS: Mounted root (ubifs filesystem) on device 0:13.\n[    2.158934] devtmpfs: mounted\n[    2.165361] Freeing unused kernel image (initmem) memory: 1024K\n[    2.171580] Run /linuxrc as init process\n</code></pre>"},{"location":"software/rootfs/raw/ubifs_usage/#_2","title":"\u672a\u89e3\u51b3\u7684\u95ee\u9898","text":"<p>USB Gadget ether \u5f71\u54cd\u4e86 UBIFS \u7684\u521d\u59cb\u5316</p> <p>\u6211\u5728\u5185\u6838\u4e2d\u542f\u7528\u4e86CONFIG_USB_ETH=y\uff0c\u4f1a\u5bfc\u81f4\u5982\u4e0b\u60c5\u51b5\u53d1\u751f\uff1a</p> <p>\u7b2c\u4e00\u6b21\u6b63\u5e38\u542f\u52a8\uff0c\u6ca1\u6709\u95ee\u9898 UBIFS \u548c USB gadget ether \u90fd\u6b63\u5e38\u5de5\u4f5c</p> <p>\u7b2c\u4e8c\u6b21\u542f\u52a8\uff0cUBIFS\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\uff0c\u65e5\u5fd7\u5982\u4e0b\uff1a <pre><code>[    1.581297] ubi0: scanning is finished\n[    1.600434] ubi0 warning: ubi_eba_init: cannot reserve enough PEBs for bad PEB handling, reserved 4, need 20\n[    1.612062] ubi0: attached mtd3 (name \"rootfs\", size 18 MiB)\n[    1.617844] ubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes\n[    1.624858] ubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048\n[    1.631727] ubi0: VID header offset: 2048 (aligned 2048), data offset: 4096\n[    1.638712] ubi0: good PEBs: 144, bad PEBs: 0, corrupted PEBs: 0\n[    1.644787] ubi0: user volume: 1, internal volumes: 1, max. volumes count: 128\n[    1.652073] ubi0: max/mean erase counter: 2/0, WL threshold: 128, image sequence number: 1254135368\n[    1.661184] ubi0: available PEBs: 0, total reserved PEBs: 144, PEBs reserved for bad PEB handling: 4\n[    1.671391] input: gpio-keys as /devices/platform/gpio-keys/input/input1\n[    1.678532] ubi0: background thread \"ubi_bgt0d\" started, PID 33\n[    1.685842] cfg80211: Loading compiled-in X.509 certificates for regulatory database\n[    1.701038] Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'\n[    1.706853] clk: Disabling unused clocks\n[    1.711935] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2\n[    1.720770] cfg80211: failed to load regulatory.db\n[    1.728279] UBIFS (ubi0:0): Mounting in unauthenticated mode\n[    1.734752] UBIFS (ubi0:0): background thread \"ubifs_bgt0_0\" started, PID 37\n[    1.777844] ubi0 warning: ubi_io_read: error -74 (ECC error) while reading 126976 bytes from PEB 3:4096, read only 126976 bytes, retry\n[    1.825995] ubi0 warning: ubi_io_read: error -74 (ECC error) while reading 126976 bytes from PEB 3:4096, read only 126976 bytes, retry\n[    1.874212] ubi0 warning: ubi_io_read: error -74 (ECC error) while reading 126976 bytes from PEB 3:4096, read only 126976 bytes, retry\n[    1.922426] ubi0 error: ubi_io_read: error -74 (ECC error) while reading 126976 bytes from PEB 3:4096, read 126976 bytes\n[    1.933608] CPU: 0 PID: 1 Comm: swapper Not tainted 6.4.0-rc7-ninjar-lite+ #11\n[    1.940875] Hardware name: Allwinner suniv Family\n[    1.945612]  unwind_backtrace from show_stack+0x10/0x14\n[    1.950944]  show_stack from dump_stack_lvl+0x28/0x30\n[    1.956087]  dump_stack_lvl from ubi_io_read+0x134/0x334\n[    1.961500]  ubi_io_read from ubi_eba_read_leb+0x9c/0x464\n</code></pre></p> <p>\u6211\u5728\u770b\u4e86\u4e00\u4e2a\u7f51\u53cb\u7684\u5e16\u5b50\u8bf4 USB Gadget Ether \u5f71\u54cd\u4e86 UBIFS\uff0c\u6211\u5728\u5173\u6389\u8fd9\u4e2a\u529f\u80fd\u540e\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528UBIFS\u4e86\uff0c\u4f46\u662f\u4ed6\u4e5f\u4e0d\u77e5\u9053\u5177\u4f53\u539f\u56e0\u3002</p> <p>\u6709\u4eba\u77e5\u9053\u7684\u8bdd\uff0c\u53ef\u4ee5\u5e2e\u5fd9\u89e3\u91ca\u4e00\u4e0b\uff0c\u611f\u8c22\u3002</p> <p>iotah 2023/7/25</p>"},{"location":"software/rootfs/yocto/yocto_new_layer/","title":"Yocto new layer","text":""},{"location":"software/rootfs/yocto/yocto_new_layer/#layer","title":"\u5982\u4f55\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684Layer","text":"<p>use bitbake-layers script <pre><code># at poky/\nbitbake-layers create-layer meta-hello\n</code></pre></p> <p>A example layer will be created like this: <pre><code>TODO\n</code></pre></p>"},{"location":"software/rootfs/yocto/yocto_new_layer/#layer_1","title":"\u6dfb\u52a0 layer \u5230\u9879\u76ee","text":"<pre><code># at poky/build\nbitbake-layers add-layer ../meta-hello\n\ncat conf/bblayers.conf\n</code></pre>"},{"location":"software/rootfs/yocto/yocto_new_layer/#helloworld-layer","title":"\u6dfb\u52a0\u4e00\u4e2a helloworld \u914d\u65b9\u5230 layer","text":"<pre><code># at poky/build\ncd ../meta-hellp\n\n# at poky/meta-hello\nmkdir -p recipes-hello/hello &amp;&amp; cd recipes-hello/hello\nmkdir files &amp;&amp; cd files\nvim hello.c\n</code></pre> <p>a <code>hello.c</code> like this: <pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char const *argv[])\n{\n    printf(\"Hello, world!\\n\");\n    return 0;\n}\n</code></pre></p> <p>add a recipe file <pre><code>cd ~/poky/meta-hello/recipes-hello/hello\nvim hello_1.0.bb\n</code></pre></p> <p>a <code>hello_1.0.bb</code> like this:</p> <p>The md5sum was calculated from common_licenses/MIT <code>poky/meta/files/common_licenses/MIT</code> <pre><code>SUMMARY = \"Simple helloworld application\"\nSECTION = \"hello\"\nLICENSE = \"MIT\"\nLIC_FILES_CHKSUM = \"file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302\"\n\nTARGET_CC_ARCH += \"${LDFLAGS}\"\n\nSRC_URI = \"file://hello.c\"\n\nS = \"${WORKDIR}\"\n\ndo_compile() {\n    ${CC} hello.c -o hello\n}\n\ndo_install() {\n    install -d ${D}${bindir}\n    install -m 0755 hello ${D}${bindir}\n}\n</code></pre></p>"},{"location":"software/rootfs/yocto/yocto_new_layer/#finnally-specify-the-addition","title":"finnally, specify the addition","text":"<p>at <code>poky/build/conf/local.conf</code> add a new line <pre><code>IMAGE_INSTALL:append = \" hello\" # a whitespace is required before image name\n</code></pre></p>"},{"location":"software/rootfs/yocto/yocto_sdk_flags/","title":"Yocto sdk flags","text":"<p>\u4fee\u6539 <code>build/conf/local.conf</code>\uff0c\u589e\u52a0\u6216\u8005\u8986\u76d6\u5982\u4e0b\u53d8\u91cf</p> <pre><code>DEBUG_BUILD = \"0\" \nDEBUG_FLAGS = \"\"                                                                \nFULL_OPTIMIZATION = \"-O3 -pipe\"\n</code></pre> <p>\u8fd9\u4e9b\u53d8\u91cf\u539f\u59cb\u5b9a\u4e49\u4e8e <code>poky/meta/conf/bitbake.conf</code> 609 \u884c\u9644\u8fd1</p>"},{"location":"software/uboot/driver_spi_tft/","title":"Driver spi tft","text":"uboot\u9a71\u52a8\u5b9e\u6218 \u4e3aSPI TFT\u6dfb\u52a0\u663e\u793a\u652f\u6301"},{"location":"software/uboot/driver_spi_tft/#table-of-contents","title":"Table of contents","text":"<ul> <li>\u540d\u8bcd\u89e3\u91ca</li> <li>\u5199\u5728\u524d\u9762</li> <li>\u5b9e\u73b0</li> <li>\u4f18\u5316\u601d\u8def</li> <li>\u66f4\u591a</li> <li>\u53c2\u8003\u8d44\u6599</li> </ul>"},{"location":"software/uboot/driver_spi_tft/#_1","title":"\u540d\u8bcd\u89e3\u91ca","text":"\u540d\u8bcd \u89e3\u91ca TFT TFT\uff08Thin Film Transistor\uff09\uff0c\u662f\u8584\u819c\u6676\u4f53\u7ba1\u7684\u7f29\u5199\u3002 SPI Serial Peripheral Interface\uff0c\u662f\u4e32\u884c\u5916\u56f4\u8bbe\u5907\u63a5\u53e3\uff0c\u662f\u4e00\u79cd\u9ad8\u901f\uff0c\u5168\u53cc\u5de5\uff0c\u540c\u6b65\u7684\u901a\u4fe1\u603b\u7ebf"},{"location":"software/uboot/driver_spi_tft/#_2","title":"\u5199\u5728\u524d\u9762","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u5e73\u53f0\u57fa\u4e8e\u5982\u4e0b\u73af\u5883</p> \u540d\u79f0 \u7248\u672c SoC Allwinner Suniv F1C100s u-boot v2023.07 \u5c4f\u5e55 \u57fa\u4e8e SSD1327 \u768416\u7070\u9636 OLED"},{"location":"software/uboot/driver_spi_tft/#_3","title":"\u601d\u8def","text":"<p>\u7b80\u5355\u8bf4\u4e0b\u5b9e\u73b0\u601d\u8def</p> <p>\u8fd8\u662f\u53c2\u8003\u73b0\u6709\u9a71\u52a8\u7684\u65b9\u6cd5\uff0c\u7ecf\u8fc7\u4e00\u756a\u67e5\u9605\u540e\uff0c<code>drivers/video/seps525.c</code>\u8fd9\u4e2a\u9a71\u52a8\u662f\u6700\u7b26\u5408\u6211\u4eec\u73b0\u5728\u7684\u573a\u666f\u7684\u3002</p> <p>\u90fd\u662f\u901a\u8fc7SPI\u901a\u8baf\uff0c\u7c7b\u4f3cSPI-TFT\uff0c\u6709gpio\u64cd\u4f5c\u3002</p> <p>\u6240\u4ee5\u5728\u6b64\u9a71\u52a8\u57fa\u7840\u4e0a\uff0c\u5b9e\u73b0\u5230\u6211\u4eec\u5668\u4ef6\u7684\u64cd\u4f5c\u3001\u8f6c\u6362\u3001\u4f20\u8f93\u63a5\u53e3</p>"},{"location":"software/uboot/driver_spi_tft/#uboot-video","title":"uboot Video \u6846\u67b6","text":"<p>[\u5728\u8fd9\u91cc\u653e\u9a71\u52a8\u6846\u56fe]</p>"},{"location":"software/uboot/driver_spi_tft/#_4","title":"\u5b9e\u73b0","text":""},{"location":"software/uboot/driver_spi_tft/#1","title":"1. \u5b9a\u4e49\u6570\u636e\u7ed3\u6784","text":"<p>\u5e95\u5c42\u663e\u793a\u63a5\u53e3 <pre><code>struct ssd1327_operations {\n    int (*init_display)(struct ssd1327_priv *priv);     // \u521d\u59cb\u5316\n    int (*reset)(struct ssd1327_priv *priv);            // \u590d\u4f4d\n    int (*clear)(struct ssd1327_priv *priv, int clear); // \u6e05\u5c4f\n    int (*blank)(struct ssd1327_priv *priv, bool on);   // \u6574\u5c4f\u64cd\u4f5c\n    int (*sleep)(struct ssd1327_priv *priv, bool on);   // \u4f11\u7720\n    int (*set_var)(struct ssd1327_priv *priv);      // \u63a7\u5236\u65cb\u8f6c\u7b49\u989d\u5916\u8bbe\u7f6e\n    int (*set_contrast)(struct ssd1327_priv *priv, u8 contrast);    // \u8bbe\u7f6e\u5bf9\u6bd4\u5ea6\n    int (*set_addr_win)(struct ssd1327_priv *priv, int xs, int ys, int xe, int ye); // \u8bbe\u7f6e\u7ed8\u5236\u7a97\u53e3\n    int (*set_cursor)(struct ssd1327_priv *priv, int x, int y); //\u8bbe\u7f6e\u8d77\u70b9\n};\n</code></pre></p> <p>\u6709\u5173\u5c4f\u5e55\u9762\u677f\u53c2\u6570\u7684 <pre><code>struct ssd1327_display {\n    u32                     xres;   // \u6c34\u5e73\u5206\u8fa8\u7387\n    u32                     yres;   // \u5782\u76f4\u5206\u8fa8\u7387\n    u32                     bpp;    // \u50cf\u7d20\u6df1\u5ea6\n    u32                     rotate; // \u65cb\u8f6c\u89d2\u5ea6\n};\n</code></pre></p> <p>\u663e\u793a\u9a71\u52a8\u4e3b\u4f53 <pre><code>struct ssd1327_priv {\n    struct udevice          *dev;\n    struct spi_slave        *spi;\n    u8                      *buf;       // \u7528\u4e8e\u6846\u67b6\u672c\u8eab\u7684buffer\n    struct {\n        void *buf;\n        size_t len;\n    } txbuf;    // \u7528\u6765\u53d1\u9001\u5230spi\u7684buffer\n    struct {\n        struct gpio_desc *reset;\n        struct gpio_desc *dc;\n        struct gpio_desc *cs;\n        struct gpio_desc *blk;\n    } gpio;     // \u9700\u8981\u8bf7\u6c42\u7684gpio\n\n    /* device specific */\n    const struct ssd1327_operations  *tftops;\n    struct ssd1327_display           *display;\n\n    u8              contrast;\n};\n</code></pre></p>"},{"location":"software/uboot/driver_spi_tft/#2-uboot-driver","title":"2. \u7f16\u5199 uboot driver \u6846\u67b6","text":"<pre><code>U_BOOT_DRIVER(ssd1327) = {\n    .name       = DRV_NAME \"_video\",\n    .id         = UCLASS_VIDEO,\n    .ops        = &amp;ssd1327_ops,\n    .bind       = ssd1327_bind,\n    .probe      = ssd1327_probe,\n    .of_match   = ssd1327_ids,\n    .of_to_plat = ssd1327_ofdata_to_platdata,\n    .plat_auto  = sizeof(struct video_uc_plat),\n    .priv_auto  = sizeof(struct ssd1327_priv),\n};\n</code></pre>"},{"location":"software/uboot/driver_spi_tft/#_5","title":"\u57fa\u51c6\u6d4b\u8bd5","text":""},{"location":"software/uboot/driver_spi_tft/#1-spi","title":"1. SPI \u901f\u7387","text":"<p>SPI\u901f\u7387\u4e0d\u80fd\u592a\u9ad8\uff0c\u5426\u5219\u4f1a\u8d85\u8fc7\u9a71\u52a8IC\u7684\u65f6\u5e8f\u8303\u56f4</p> \u901f\u7387 \u8017\u65f6 8 MHz 12 MHz 16 MHz"},{"location":"software/uboot/driver_spi_tft/#2-dma","title":"2. DMA \u4f20\u8f93","text":"\u72b6\u6001 \u8017\u65f6 \u5173\u95ed \u5f00\u542f"},{"location":"software/uboot/driver_spi_tft/#3","title":"3. \u989c\u8272\u8f6c\u6362\u7b97\u6cd5","text":"\u65b9\u5f0f \u8017\u65f6 \u79fb\u4f4d\u6cd5"},{"location":"software/uboot/driver_spi_tft/#4-video_sync","title":"4. video_sync \u4f20\u8f93\u4f18\u5316","text":"\u65b9\u5f0f \u8017\u65f6 Buffered Legacy"},{"location":"software/uboot/driver_spi_tft/#5-video","title":"5. \u53bb\u9664\u8f6c\u6362\u7b97\u6cd5\uff0cvideo\u5c42\u76f4\u63a5\u62ff\u7070\u9636\u6570\u636e","text":""},{"location":"software/uboot/driver_spi_tft/#_6","title":"\u66f4\u591a","text":""},{"location":"software/uboot/driver_spi_tft/#_7","title":"\u5668\u4ef6\u7ec6\u8282","text":""},{"location":"software/uboot/driver_spi_tft/#_8","title":"\u53c2\u8003\u8d44\u6599","text":""},{"location":"software/uboot/spl_image_loader/","title":"Spl image loader","text":"\u8ba9 F1C100s \u4ece SPI Nand \u542f\u52a8"},{"location":"software/uboot/spl_image_loader/#_1","title":"\u76ee\u5f55","text":"<ul> <li>\u540d\u8bcd\u89e3\u91ca</li> <li>\u5199\u5728\u524d\u9762</li> <li>\u542f\u52a8\u6d41\u7a0b</li> <li>\u5b9e\u73b0</li> <li>[\u5185\u6838]</li> <li>[\u6587\u4ef6\u7cfb\u7edf]</li> <li>[\u6253\u5305\u70e7\u5f55]</li> <li>\u4f18\u5316\u601d\u8def</li> <li>\u57fa\u51c6\u6d4b\u8bd5</li> <li>\u66f4\u591a</li> <li>\u53c2\u8003\u8d44\u6599</li> </ul>"},{"location":"software/uboot/spl_image_loader/#_2","title":"\u540d\u8bcd\u89e3\u91ca","text":"\u540d\u8bcd \u89e3\u91ca SPL \u7b2c\u4e8c\u9636\u6bb5\u7a0b\u5e8f\u52a0\u8f7d\u5668 BootROM \u56fa\u5316\u5728\u82af\u7247\u5185\u90e8\u7684\u7a0b\u5e8f\uff0c\u7528\u6765\u8bc6\u522b\u5e76\u52a0\u8f7d\u56fa\u4ef6"},{"location":"software/uboot/spl_image_loader/#_3","title":"\u5199\u5728\u524d\u9762","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u5e73\u53f0\u57fa\u4e8e\u5982\u4e0b\u73af\u5883</p> \u540d\u79f0 \u7248\u672c SoC Allwinner Suniv F1C100s u-boot v2023.07 linux 6.4.0-rc4 buildroot v2023.02 spi nand Winbond W25N01G <p>\u5176\u5b9e\u5c31\u662f\u5f53\u65f6\u6211\u4ece\u4e3b\u7ebf\u4e0amaster\u76f4\u63a5\u641e\u8fc7\u6765\u7684\uff0c\u57fa\u672c\u5c31\u662f\u73b0\u5728\u6700\u65b0\u72b6\u6001</p> <p>\u5982\u4f55\u4ece\u96f6\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u4ecespi-nand\u542f\u52a8\u7684\u955c\u50cf\uff1f</p> <p>\u53ef\u4ee5\u8bf4\u8fd9\u662f\u4e00\u4efd\u6559\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e00\u6b21\u8bb0\u5f55</p>"},{"location":"software/uboot/spl_image_loader/#_4","title":"\u542f\u52a8\u6d41\u7a0b","text":"<p>\u5728\u6b63\u5f0f\u5f00\u59cb\u4e4b\u524d\uff0c\u4e0d\u59a8\u5148\u8c08\u8c08\u542f\u52a8\u6d41\u7a0b\uff0c \u5f53\u7136\uff0c \u53ea\u662f\u9488\u5bf9\u5168\u5fd7\u5e73\u53f0\u3002</p> <p>\u9996\u5148\uff0c \u82af\u7247\u5185\u90e8\u7684BootROM\u5c06spi-nand\u4e2d\u7684\u6570\u636e\u8bfb\u53d6\u5230SRAM\u4e2d\u6267\u884c\uff0c\u4f46\u662f\u4e3a\u4e86\u517c\u5bb9\u6027\uff08\u7531\u4e8enand\u7684page\u5927\u5c0f\u4e0d\u540c\uff09\uff0cBootROM\u53ea\u8bfb\u53d6spi-nand\u4e2d \u6bcf\u4e2apage\u7684\u524d1024Bytes\uff0c\u8fd9\u610f\u5473\u8fd9\u4f60\u5f97\u5bf9<code>U-Boot SPL</code>\u8fdb\u884c\u5904\u7406\uff0c\u5c06\u5176\u5206\u6210\u63091K\u6bcfPage\u7684\u683c\u5f0f\u5b58\u653e\u3002</p> <p>\u8fd9\u5f97\u591a\u4e8f\u4e86 bamkrs \u63d0\u4f9b\u7684\u811a\u672c gen_sunxi_spinand_onlyboot_img.sh\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u5165page\uff0cerase block\u5927\u5c0f\uff0c\u5c31\u80fd\u8ba9<code>u-boot-sunxi-with-spl.bin</code>\u4e2d\u7684<code>SPL</code>\u80fd\u591f\u6309BootROM\u9700\u8981\u7684\u683c\u5f0f\u5b58\u653e\u5230flash\u4e2d\u3002\u597d\u5427\uff0c\u6709\u4e86\u8fd9\u4e2a\u4e1c\u897f\uff0c\u610f\u5473\u7740\u4ecespi-nand\u542f\u52a8\u53d8\u7684\u53ef\u80fd\u3002</p> <p>\u6211\u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6240\u4ee5\u901a\u8fc7<code>sunxi-fel</code>\u6765\u70e7\u5f55\u6d4b\u8bd5\uff0c <pre><code>sudo sunxi-fel uboot u-boot-sunxi-with-spl.bin\n</code></pre> \u5c31\u8fd9\u6837\uff0c SPL\u8fd0\u884c\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8ffd\u7a76\u4e0b SPL \u7684\u6267\u884c\u6d41\u7a0b\uff0c\u56e0\u4e3a\u6211\u4eec\u4fa7\u91cd\u70b9\u5728\u542f\u52a8\u90e8\u5206\uff0c\u6240\u4ee5\u76f4\u63a5\u4ece\u65e5\u5fd7\u5207\u5165</p> <p>\u5f53\u4f60\u4f7f\u7528\u5982\u4e0a\u6a21\u5f0f\u542f\u52a8\u65f6\uff0c\u4e32\u53e3\u6253\u5370\u65e5\u5fd7\u5982\u4e0b <pre><code>U-Boot SPL 2023.07-rc4ninjar-lite-g1c30e10017-dirty (Jun 19 2023 - 08:33:14 -0400)\nDRAM: 32 MiB\nUnknown boot source from BROM: 0xe1a00000\nTrying to boot from FEL\n</code></pre> \u53ef\u4ee5\u770b\u5230\uff0c\u5173\u952e\u70b9\u5c31\u5728\u4e8e\u6700\u540e\u4e00\u53e5\uff0c<code>Trying to boot from XXX</code>\uff0c\u5b9a\u4f4d\u5230common/spl/spl.c + 712 <pre><code>static int boot_from_devices(struct spl_image_info *spl_image,\n                 u32 spl_boot_list[], int count)\n{\n...\n            if (!CONFIG_IS_ENABLED(SILENT_CONSOLE)) {\n                if (loader)\n                    printf(\"Trying to boot from %s\\n\",\n                           spl_loader_name(loader));\n...\n            if (loader &amp;&amp;\n                !spl_load_image(spl_image, loader)) {\n                spl_image-&gt;boot_device = bootdev;\n                return 0;\n            }\n...\n}\n</code></pre> \u67e5\u770b <code>boot_from_devices</code> \u7684\u8c03\u7528\u8005\uff0c \u5b9a\u4f4d\u5230common/spl/spl.c + 831 <pre><code>void board_init_r(gd_t *dummy1, ulong dummy2)\n{\n...\n    spl_image.boot_device = BOOT_DEVICE_NONE;\n    board_boot_order(spl_boot_list);\n\n    ret = boot_from_devices(&amp;spl_image, spl_boot_list,\n                ARRAY_SIZE(spl_boot_list));\n...\n}\n</code></pre> \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4ed6\u901a\u8fc7\u8c03\u7528<code>board_boot_order</code>\u83b7\u53d6\u5230\u4e86\u4e00\u4e2aboot list\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f <pre><code>__weak void board_boot_order(u32 *spl_boot_list)\n{\n    spl_boot_list[0] = spl_boot_device();\n}\n</code></pre> \u4ed6\u53c8\u901a\u8fc7\u8c03\u7528 <code>spl_boot_device</code> \u6765\u83b7\u53d6\u542f\u52a8\u8bbe\u5907\uff0c\u5c06\u5176\u653e\u5165list\u9996\u4f4d\uff0c\u4e5f\u5c31\u662f\u5c06\u8981\u542f\u52a8\u7684\u8bbe\u5907\u3002 \u6211\u770b\u8fc7\u4e86\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u662f\u4e2a\u58f0\u660e\uff0c\u5bf9\u4e8e\u5168\u5fd7\u5e73\u53f0\uff0c\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff0c\u4f4d\u4e8e\u6587\u4ef6<code>arch/arm/mach-sunxi/board.c</code>\u4e2d\uff0c \u8c03\u7528\u6d41\u7a0b\u5982\u4e0b <pre><code>spl_boot_device -&gt;\n    sunxi_get_boot_device -&gt;\n        sunxi_get_boot_source -&gt;\n            suniv_get_boot_source\n</code></pre></p> <p>\u6211\u628a\u76f8\u5173\u7684\u51fd\u6570\u90fd\u653e\u5230\u4e0b\u9762\u4e86\uff0c\u4f60\u53ef\u4ee5\u82b1\u70b9\u65f6\u95f4\u6574\u7406\u4e0b\u601d\u8def <pre><code>u32 spl_boot_device(void)\n{\n    return sunxi_get_boot_device();\n}\n\nuint32_t sunxi_get_boot_device(void)\n{\n    int boot_source = sunxi_get_boot_source();\n\n    switch (boot_source) {\n    case SUNXI_INVALID_BOOT_SOURCE:\n        return BOOT_DEVICE_BOARD;\n    case SUNXI_BOOTED_FROM_MMC0:\n    case SUNXI_BOOTED_FROM_MMC0_HIGH:\n        return BOOT_DEVICE_MMC1;\n    case SUNXI_BOOTED_FROM_NAND:\n        return BOOT_DEVICE_NAND;\n    case SUNXI_BOOTED_FROM_MMC2:\n    case SUNXI_BOOTED_FROM_MMC2_HIGH:\n        return BOOT_DEVICE_MMC2;\n    case SUNXI_BOOTED_FROM_SPI:\n        return BOOT_DEVICE_SPI;\n    }\n\n    panic(\"Unknown boot source %d\\n\", boot_source);\n    return -1;      /* Never reached */\n}\n\nstatic int sunxi_get_boot_source(void)\n{\n    struct boot_file_head *egon_head = (void *)SPL_ADDR;\n    struct toc0_main_info *toc0_info = (void *)SPL_ADDR;\n\n    if (IS_ENABLED(CONFIG_MACH_SUNIV) &amp;&amp;\n        !IS_ENABLED(CONFIG_SPL_BUILD))\n        return SUNXI_BOOTED_FROM_MMC0;\n\n    if (IS_ENABLED(CONFIG_MACH_SUNIV))\n        return suniv_get_boot_source();\n    if (sunxi_egon_valid(egon_head))\n        return readb(&amp;egon_head-&gt;boot_media);\n    if (sunxi_toc0_valid(toc0_info))\n        return readb(&amp;toc0_info-&gt;platform[0]);\n\n    /* Not a valid image, so we must have been booted via FEL. */\n    return SUNXI_INVALID_BOOT_SOURCE;\n}\n\nstatic int suniv_get_boot_source(void)\n{\n    /* Get the last function call from BootROM's stack. */\n    u32 brom_call = *(u32 *)(uintptr_t)(fel_stash.sp - 4);\n\n    /* translate SUNIV BootROM stack to standard SUNXI boot sources */\n    switch (brom_call) {\n    case SUNIV_BOOTED_FROM_MMC0:\n        return SUNXI_BOOTED_FROM_MMC0;\n    case SUNIV_BOOTED_FROM_SPI:\n        return SUNXI_BOOTED_FROM_SPI;\n    case SUNIV_BOOTED_FROM_MMC1:\n        return SUNXI_BOOTED_FROM_MMC2;\n    /* SPI NAND is not supported yet. */\n    case SUNIV_BOOTED_FROM_NAND:\n        return SUNXI_INVALID_BOOT_SOURCE;\n    }\n    /* If we get here something went wrong try to boot from FEL.*/\n    printf(\"Unknown boot source from BROM: 0x%x\\n\", brom_call);\n    return SUNXI_INVALID_BOOT_SOURCE;\n}\n</code></pre> \u5176\u5b9e\u5c31\u662f\u628a\u5168\u5fd7\u7684\u542f\u52a8\u6e90\uff0c\u8f6c\u6362\u4e3au-boot\u5b9a\u4e49\u7684\u542f\u52a8\u6e90\uff0c\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u4e3b\u8981\u662fu-boot\u901a\u8fc7\u4e00\u4e2a\u5b8f<code>SPL_LOAD_IMAGE_METHOD</code>\u6765\u6dfb\u52a0\u4e00\u4e2a<code>spl loader</code>\uff0c\u800c\u524d\u9762\u7684\u51fd\u6570<code>boot_from_devices</code>\u91cc\u5c31\u4f1a\u6bd4\u5bf9\u8fd9\u4e2a\u6570\u503c\uff0c\u9009\u62e9\u76f8\u5e94\u7684<code>spl loader</code>\uff0c\u8fd9\u4e2a\u5b8f\u7684\u539f\u578b\u5982\u4e0b <pre><code>#define SPL_LOAD_IMAGE_METHOD(_name, _priority, _boot_device, _method) \\\n    SPL_LOAD_IMAGE(_boot_device ## _priority ## _method) = { \\\n        .name = _name, \\\n        .boot_device = _boot_device, \\\n        .load_image = _method, \\\n    }\n</code></pre> \u8fd9\u4e2a\u5b8f\u63a5\u6536\u56db\u4e2a\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u7ed3\u6784\u4f53\u5bf9\u8c61\uff0c\u8be5\u7ed3\u6784\u4f53\u5982\u4e0b <pre><code>struct spl_image_loader {\n#ifdef CONFIG_SPL_LIBCOMMON_SUPPORT\n    const char *name;\n#endif\n    uint boot_device;\n    /**\n     * load_image() - Load an SPL image\n     *\n     * @spl_image: place to put image information\n     * @bootdev: describes the boot device to load from\n     */\n    int (*load_image)(struct spl_image_info *spl_image,\n              struct spl_boot_device *bootdev);\n};\n</code></pre></p> <p>\u6211\u4eec\u5148\u627e\u4e00\u4e2a\u73b0\u6709\u7684\u4f8b\u5b50\u770b\u770b\u8be5\u7ed3\u6784\u4f53\u5982\u4e0b <pre><code>static int spl_board_load_image(struct spl_image_info *spl_image,\n                struct spl_boot_device *bootdev)\n{\n    debug(\"Returning to FEL sp=%x, lr=%x\\n\", fel_stash.sp, fel_stash.lr);\n    return_to_fel(fel_stash.sp, fel_stash.lr);\n\n    return 0;\n}\nSPL_LOAD_IMAGE_METHOD(\"FEL\", 0, BOOT_DEVICE_BOARD, spl_board_load_image);\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c1. \u540d\u5b57  2. \u4f18\u5148\u7ea7 3.\u542f\u52a8\u6e90 4. \u542f\u52a8\u51fd\u6570\uff0c\u539f\u6765\u4e0a\u9762<code>spl_image_loader</code>\u7ed3\u6784\u4f53\u91cc<code>boot_device</code>\u6210\u5458\u91cc\u5b58\u653e\u7684\u5c31\u662f\u8fd9\u4e2a\u5b8f\u4f20\u5165\u7684\u542f\u52a8\u6e90\u3002 \u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u5199\u4e00\u4e2a\u4ece<code>spi-nand</code>\u542f\u52a8\u7684\u5b8f\u4e86\uff0c\u4f46\u4e1c\u897f\u90fd\u8fd8\u6ca1\u6709\u5b9e\u73b0\uff0c\u5f53\u7136\u4e86\uff01 <pre><code>SPL_LOAD_IMAGE_METHOD(\"sunxi SPI-NAND\", 0, BOOT_DEVICE_NAND, spl_spi_nand_load_image);\n</code></pre></p> <p>\u770b\u5230\u8fd9\u91cc\u6211\u4eec\u5927\u6982\u4e86\u89e3\u4e86\uff0c\u600e\u4e48\u53bb\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684<code>spl loader</code>\u4e86\u3002\u672c\u6587\u7ae0\u7684<code>\u5b9e\u73b0</code>\u7ae0\u8282\u4f1a\u6709\u76f8\u5e94\u7ec6\u8282\uff0c\u6211\u4eec\u7ee7\u7eed\u770b\u5f80\u4e0b\u6d41\u7a0b\u3002</p> <p>\u6240\u4ee5\u6211\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4ece<code>spi-nand</code>\u542f\u52a8\u7684loader\uff0c\u63a5\u7740\u5f80\u4e0b\u770b\u3002<code>boot_from_devices</code>\u8c03\u7528\u5b8c\u6210\u4ee5\u540e\uff0c\u7ecf\u8fc7\u4e00\u5806\u4e1c\u897f\uff0c\u6765\u5230\u51fd\u6570<code>board_init_r</code>\u6700\u5e95\u4e0b <pre><code>...\n    spl_board_prepare_for_boot();\n    jump_to_image_no_args(&amp;spl_image);\n}\n</code></pre> <code>spl_board_prepare_for_boot</code>\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5b9e\u73b0\u8df3\u8f6cu-boot\u524d\u6240\u505a\u7684\u6700\u540e\u5de5\u4f5c\u3002 <code>jump_to_image_no_args</code> \u5c31\u662f\u8df3\u8f6c\u5230u-boot\u5165\u53e3\u7684\u51fd\u6570\u4e86\uff0c\u5b9e\u73b0\u5982\u4e0b <pre><code>__weak void __noreturn jump_to_image_no_args(struct spl_image_info *spl_image)\n{\n    typedef void __noreturn (*image_entry_noargs_t)(void);\n\n    image_entry_noargs_t image_entry =\n        (image_entry_noargs_t)spl_image-&gt;entry_point;\n\n    debug(\"image entry point: 0x%lx\\n\", spl_image-&gt;entry_point);\n\n    image_entry();\n}\n</code></pre> \u53ef\u4ee5\u770b\u5230\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2avoid *\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u4e86\u4ece<code>spl_image</code>\u4e2d\u89e3\u6790\u51fa\u7684<code>entry_point</code>\uff0c\u901a\u8fc7\u76f4\u63a5\u8c03\u7528\u8fd9\u4e2a\u6307\u9488\uff0c\u5c31\u8df3\u8f6c\u5230\u4e86u-boot\u4e2d\uff0c\u8fd9\u4e2a<code>entry_point</code>\u662f\u901a\u8fc7\u89e3\u6790u-boot\u5934\u90e8\u5f97\u5230\u7684\uff0c\u8fd9\u4e2a\u5934\u90e8\u7ed3\u6784\u4f53\u662f<code>legacy_img_hdr</code>\uff0c\u5b9a\u4e49\u5982\u4e0b <pre><code>#define IH_NMLEN        32  /* Image Name Length        */\nstruct legacy_img_hdr {\n    uint32_t    ih_magic;   /* Image Header Magic Number    */\n    uint32_t    ih_hcrc;    /* Image Header CRC Checksum    */\n    uint32_t    ih_time;    /* Image Creation Timestamp */\n    uint32_t    ih_size;    /* Image Data Size      */\n    uint32_t    ih_load;    /* Data  Load  Address      */\n    uint32_t    ih_ep;      /* Entry Point Address      */\n    uint32_t    ih_dcrc;    /* Image Data CRC Checksum  */\n    uint8_t     ih_os;      /* Operating System     */\n    uint8_t     ih_arch;    /* CPU architecture     */\n    uint8_t     ih_type;    /* Image Type           */\n    uint8_t     ih_comp;    /* Compression Type     */\n    uint8_t     ih_name[IH_NMLEN];  /* Image Name       */\n};\n</code></pre> \u6211\u4eec\u901a\u8fc7<code>hexdump</code>\u5de5\u5177\u67e5\u770b<code>u-boot.img</code>\u5934\u90e8\uff0c\u5f97\u5230\u5982\u4e0b\u4fe1\u606f <pre><code>00000000  27 05 19 56 9b b7 3b c2  64 9e 77 80 00 06 06 c0  |'..V..;.d.w.....|\n00000010  81 70 00 00 81 70 00 00  b6 2e 5e 67 11 02 05 00  |.p...p....^g....|\n00000020  55 2d 42 6f 6f 74 20 32  30 32 33 2e 30 37 2d 72  |U-Boot 2023.07-r|\n00000030  63 34 6e 69 6e 6a 61 72  2d 6c 69 74 65 2d 67 61  |c4ninjar-lite-ga|\n00000040  b8 00 00 ea 14 f0 9f e5  14 f0 9f e5 14 f0 9f e5  |................|\n00000050  14 f0 9f e5 14 f0 9f e5  14 f0 9f e5 14 f0 9f e5  |................|\n</code></pre> \u901a\u8fc7\u5bf9\u6bd4<code>u-boot.bin</code>\u5934\u90e8\uff0c\u6211\u4eec\u5f97\u77e5\uff0c\u4ece 0x00 \u5f00\u59cb\u5230 0x40 \u7ed3\u675f\u7684 64\u5b57\u8282\uff0c\u5c31\u662f\u6240\u8c13\u7684<code>legacy image header</code>\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u7ed3\u6784\u4f53<code>struct legacy_img_hdr</code>\u4e2d\u7684\u5185\u5bb9\uff0c \u6211\u4eec\u5c06\u5176\u4eceflash\u4e2d\u8bfb\u5230\u5185\u5b58\u4e2d\uff0c\u5b9a\u4e49\u4e2a\u6307\u9488\u6307\u5411\u4ed6\u5c31\u597d\u4e86\u3002\u5728\u672c\u6848\u4f8b\u4e2d\uff0c<code>ih_load</code>\uff0c<code>ih_ep</code>\u7686\u4e3a <code>0x81700000</code></p> <p>\u6240\u4ee5\uff0c\u771f\u76f8\u5927\u767d\u4e8e\u5929\u4e0b\u4e86\uff0c\u770b\u8d77\u6765\u4e5f\u6ca1\u90a3\u4e48\u96be\uff0c\u662f\u5427</p>"},{"location":"software/uboot/spl_image_loader/#_5","title":"\u5b9e\u73b0","text":"<p>\u6211\u5efa\u8bae\u770b\u770b\u6211\u5728 ninjar-bsp \u4e2d\u5bf9 u-boot \u7684\u8fd9\u4e24\u6b21 commit\uff0c\u6bd4\u8f83\u76f4\u89c2\uff0c \u4f46\u6211\u4e5f\u4f1a\u5728\u4e0b\u9762\u8bb2\u5b9e\u73b0\u8fc7\u7a0b 1. adding support for booting from spi-nand flash for sunxi. 2. f1c100s supportting boot from spi-nand from now !!!</p> <p>\u7b2c\u4e00\u4e2a\u63d0\u4ea4\u57fa\u672c\u5b9e\u73b0\u4e86\u8c03\u7528\u5230\u81ea\u5df1<code>spl loader</code>\u7684\u8def\u5f84 \u7b2c\u4e8c\u4e2a\u63d0\u4ea4\u5b9e\u73b0\u4e86\u4ece<code>spi-nand</code>\u4e2d\u8bfb\u51fa<code>header</code>\u548c<code>u-boot</code></p> <p>\u597d\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8ba8\u8bba\u4e0b\u5b9e\u73b0\uff0c\u9996\u5148\u5e94\u8be5\u4ece\u5168\u5fd7\u7684\u542f\u52a8\u6e90\u5165\u624b\uff0c\u4f60\u5e94\u8be5\u6ca1\u5fd8\u8bb0\u5427\uff0c\u89c6\u7ebf\u56de\u5230\u8fd9\u4e2a\u51fd\u6570<code>suniv_get_boot_source</code> <pre><code>struct fel_stash {\n    uint32_t sp;\n    uint32_t lr;\n    uint32_t cpsr;\n    uint32_t sctlr;\n    uint32_t vbar;\n};\nstruct fel_stash fel_stash __section(\".data\");\nstatic int suniv_get_boot_source(void)\n{\n    /* Get the last function call from BootROM's stack. */\n    u32 brom_call = *(u32 *)(uintptr_t)(fel_stash.sp - 4);\n\n    /* translate SUNIV BootROM stack to standard SUNXI boot sources */\n    switch (brom_call) {\n...\n    /* SPI NAND is not supported yet. */\n    case SUNIV_BOOTED_FROM_NAND:\n        return SUNXI_INVALID_BOOT_SOURCE;\n    }\n    /* If we get here something went wrong try to boot from FEL.*/\n    printf(\"Unknown boot source from BROM: 0x%x\\n\", brom_call);\n    return SUNXI_INVALID_BOOT_SOURCE;\n}\n</code></pre> \u4ed6\u901a\u8fc7\u4e00\u4e2a\u6307\u9488\u6307\u5411<code>fel_stash.sp - 4</code>\u7684\u5730\u65b9\uff0c\u5f97\u5230\u4e86bootrom\u6700\u540e\u8c03\u7528\u7684\u51fd\u6570\uff0c\u8fd9\u771f\u7684\u592a\u9177\u4e86\uff01 \u53ef\u4ee5\u770b\u5230<code>SUNIV_BOOTED_FROM_NAND</code>\u5206\u652f\u76f4\u63a5\u8fd4\u56de\u4e86<code>SUNXI_INVALID_BOOT_SOURCE</code>\u8868\u793a\u65e0\u6548\u542f\u52a8\u6e90\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6539\u6210\u4e0b\u9762\u8fd9\u6837 <pre><code>/* The low 8-bits of the 'boot_media' field in the SPL header */\n#define SUNXI_BOOTED_FROM_MMC0     0\n#define SUNXI_BOOTED_FROM_NAND     1\n#define SUNXI_BOOTED_FROM_MMC2     2\n#define SUNXI_BOOTED_FROM_SPI      3\n#define SUNXI_BOOTED_FROM_SPI_NAND 4\n/*\n * Values taken from the F1C200s BootROM stack\n * to determine where we booted from.\n */\n#define SUNIV_BOOTED_FROM_MMC0  0xffff40f8\n#define SUNIV_BOOTED_FROM_NAND  0xffff4114\n#define SUNIV_BOOTED_FROM_SPI   0xffff4130\n#define SUNIV_BOOTED_FROM_MMC1  0xffff4150\n#define SUNIV_BOOTED_FROM_FEL   0xe1a00000\n\nstatic int suniv_get_boot_source(void)\n{\n    /* Get the last function call from BootROM's stack. */\n    u32 brom_call = *(u32 *)(uintptr_t)(fel_stash.sp - 4);\n\n    /* translate SUNIV BootROM stack to standard SUNXI boot sources */\n    switch (brom_call) {\n...\n    /* SPI NAND is not supported yet. */\n    case SUNIV_BOOTED_FROM_FEL:\n    case SUNIV_BOOTED_FROM_NAND:\n        return SUNXI_BOOTED_FROM_SPI_NAND;\n    }\n    /* If we get here something went wrong try to boot from FEL.*/\n    printf(\"Unknown boot source from BROM: 0x%x\\n\", brom_call);\n    return SUNXI_INVALID_BOOT_SOURCE;\n}\n</code></pre> \u6211\u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6240\u4ee5\u628a\u4eceFEL\u542f\u52a8\u7684\u8def\u5f84\uff0c\u4e5f\u91cd\u5b9a\u5411\u5230\u4e86\u6211\u7684<code>spl loader</code>\u90a3\u91cc\u3002\u6d4b\u8bd5\u5b8c\u4e86\u540e\u9762\u8981\u5220\u6389\uff0c\u4e0d\u7136\u5f71\u54cd\u4f60\u539f\u6765\u7684FEL loader</p> <p>\u5b8f<code>SUNXI_BOOTED_FROM_SPI_NAND</code>,<code>SUNIV_BOOTED_FROM_FEL</code>\u4f4d\u4e8e<code>arch/arm/include/asm/arch-sunxi/spl.h</code>\u4e2d \u4e4b\u524d\u4ece FEL \u542f\u52a8\u65e5\u5fd7\u91cc\u770b\u5230\u4f1a\u6253\u5370\u4eceFEL\u542f\u52a8\u7684\u51fd\u6570\u5730\u5740 <code>0xe1a00000</code>\uff0c\u6240\u4ee5\u987a\u624b\u52a0\u4e0a\u4e86 <pre><code>U-Boot SPL 2023.07-rc4ninjar-lite-g1c30e10017-dirty (Jun 19 2023 - 08:33:14 -0400)\nDRAM: 32 MiB\nUnknown boot source from BROM: 0xe1a00000\nTrying to boot from FEL\n</code></pre></p> <p>\u63a5\u4e0b\u6765\u5c31\u662f\u4fee\u6539\u51fd\u6570<code>sunxi_get_boot_device</code>\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0\u5bf9<code>SUNXI_BOOTED_FROM_SPI_NAND</code>\u7684\u8bc6\u522b\uff0c\u8ba9\u5176\u8fd4\u56de<code>BOOT_DEVICE_NAND</code> <pre><code>uint32_t sunxi_get_boot_device(void)\n{\n    int boot_source = sunxi_get_boot_source();\n\n    switch (boot_source) {\n...\n    case SUNXI_BOOTED_FROM_SPI_NAND:\n        return BOOT_DEVICE_NAND;\n    }\n\n    panic(\"Unknown boot source %d\\n\", boot_source);\n    return -1;      /* Never reached */\n}\n</code></pre></p> <p>\u5f88\u597d\uff0c\u542f\u52a8\u6e90\u8f6c\u6362\u7684\u90e8\u5206\u5df2\u7ecf\u505a\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u6dfb\u52a0\u4e00\u4e2a\u9488\u5bf9<code>spi-nand</code>\u7684<code>spl loader</code>\u4e86</p> <p>\u6211\u4eec\u5728<code>arch/arm/mach-sunxi</code>\u4e0b\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6<code>spl_spi_nand_sunxi.c</code> <pre><code>// SPDX-License-Identifier: GPL-2.0+\n/*\n * Copyright (C) 2023 iotah &lt;writeforever@foxmail.com&gt;\n */\n\n#include &lt;common.h&gt;\n#include &lt;image.h&gt;\n#include &lt;malloc.h&gt;\n#include &lt;log.h&gt;\n#include &lt;spl.h&gt;\n#include &lt;hang.h&gt;\n#include &lt;asm/arch/spl.h&gt;\n#include &lt;asm/gpio.h&gt;\n#include &lt;asm/io.h&gt;\n#include &lt;linux/bitops.h&gt;\n#include &lt;linux/delay.h&gt;\n#include &lt;linux/libfdt.h&gt;\n\n#ifdef CONFIG_SPL_OS_BOOT\n    #error CONFIG_SPL_OS_BOOT is not supported yet\n#endif\n\n/*****************************************************************************/\n/* SUN4I variant of the SPI controller                                       */\n/*****************************************************************************/\n\n#define SUN4I_SPI0_CCTL             0x1C\n#define SUN4I_SPI0_CTL              0x08\n#define SUN4I_SPI0_RX               0x00\n#define SUN4I_SPI0_TX               0x04\n#define SUN4I_SPI0_FIFO_STA         0x28\n#define SUN4I_SPI0_BC               0x20\n#define SUN4I_SPI0_TC               0x24\n\n#define SUN4I_CTL_ENABLE            BIT(0)\n#define SUN4I_CTL_MASTER            BIT(1)\n#define SUN4I_CTL_TF_RST            BIT(8)\n#define SUN4I_CTL_RF_RST            BIT(9)\n#define SUN4I_CTL_XCH               BIT(10)\n\n/*****************************************************************************/\n/* SUN6I variant of the SPI controller                                       */\n/*****************************************************************************/\n\n#define SUN6I_SPI0_CCTL             0x24\n#define SUN6I_SPI0_GCR              0x04\n#define SUN6I_SPI0_TCR              0x08\n#define SUN6I_SPI0_FIFO_STA         0x1C\n#define SUN6I_SPI0_MBC              0x30\n#define SUN6I_SPI0_MTC              0x34\n#define SUN6I_SPI0_BCC              0x38\n#define SUN6I_SPI0_TXD              0x200\n#define SUN6I_SPI0_RXD              0x300\n\n#define SUN6I_CTL_ENABLE            BIT(0)\n#define SUN6I_CTL_MASTER            BIT(1)\n#define SUN6I_CTL_SRST              BIT(31)\n#define SUN6I_TCR_XCH               BIT(31)\n\n/*****************************************************************************/\n\n#define CCM_AHB_GATING0             (0x01C20000 + 0x60)\n#define CCM_H6_SPI_BGR_REG          (0x03001000 + 0x96c)\n#ifdef CONFIG_SUN50I_GEN_H6\n    #define CCM_SPI0_CLK                (0x03001000 + 0x940)\n#else\n    #define CCM_SPI0_CLK                (0x01C20000 + 0xA0)\n#endif\n#define SUN6I_BUS_SOFT_RST_REG0     (0x01C20000 + 0x2C0)\n\n#define AHB_RESET_SPI0_SHIFT        20\n#define AHB_GATE_OFFSET_SPI0        20\n\n#define SPI0_CLK_DIV_BY_2           0x1000\n#define SPI0_CLK_DIV_BY_4           0x1001\n#define SPI0_CLK_DIV_BY_16          0x1007\n#define SPI0_CLK_DIV_BY_32          0x100f\n#define SPI0_CLK_DIV_BY_64          0x600\n\n#define SPI_READ_MAX_SIZE 64 /* FIFO size, minus 4 bytes of the header */\n\nstruct sunxi_spi_reg_offsets {\n    ulong spi_ctl_reg;\n    ulong spi_ctl_xch_bitmask;\n    ulong spi_fifo_reg;\n    ulong spi_tx_reg;\n    ulong spi_rx_reg;\n    ulong spi_bc_reg;\n    ulong spi_tc_reg;\n    ulong spi_bcc_reg;\n};\n\nstruct sunxi_spi_reg_offsets sun6i_spi_reg_offsets = {\n    .spi_ctl_reg         = SUN6I_SPI0_TCR,\n    .spi_fifo_reg        = SUN6I_SPI0_FIFO_STA,\n    .spi_tx_reg          = SUN6I_SPI0_TXD,\n    .spi_rx_reg          = SUN6I_SPI0_RXD,\n    .spi_bc_reg          = SUN6I_SPI0_MBC,\n    .spi_tc_reg          = SUN6I_SPI0_MTC,\n    .spi_bcc_reg         = SUN6I_SPI0_BCC,\n};\n\nstruct sunxi_spi_reg_offsets sun4i_spi_reg_offsets = {\n    .spi_ctl_reg         = SUN4I_SPI0_CTL,\n    .spi_fifo_reg        = SUN4I_SPI0_FIFO_STA,\n    .spi_tx_reg          = SUN4I_SPI0_TX,\n    .spi_rx_reg          = SUN4I_SPI0_RX,\n    .spi_bc_reg          = SUN4I_SPI0_BC,\n    .spi_tc_reg          = SUN4I_SPI0_TC,\n    .spi_bcc_reg         = 0,\n};\n#define to_sunxi_spi_reg(spi, reg) \\\n    (spi-&gt;base + spi-&gt;reg_offsets-&gt;spi_##reg)\n\nstruct spi_nand_device {\n    char *name;\n    unsigned page;\n\n    size_t page_size;\n    size_t block_size;\n};\n\nstruct sunxi_spi {\n    uintptr_t base;\n\n    size_t fifo_depth;\n\n    bool is_sun6i;\n    struct sunxi_spi_reg_offsets *reg_offsets;\n    ulong spi_ctl_xch_bitmask;\n\n    struct spi_nand_device nand_dev;\n};\n\n/*****************************************************************************/\n/* Winbond SPI NAND Instructions Table                                     */\n/*****************************************************************************/\n#define SPI_NAND_RESET          0xff    /* device reset */\n#define SPI_NAND_RD_ID          0x9f    /* read jedec id */\n#define SPI_NAND_RD_STAT_REG    0x0f    /* read status register */\n#define SPI_NAND_WD_STAT_REG    0x1f    /* write status register */\n#define SPI_NAND_WD_ON          0x06    /* write enable */\n#define SPI_NAND_WD_OFF         0x04    /* write disable */\n#define SPI_NAND_RD_PAGE_DATA   0x13    /* read page into data buffer */\n#define SPI_NAND_RD_DATA        0x03    /* read from data buffer */\n\n/*****************************************************************************/\n\nstatic int __maybe_unused hexdump(ulong addr, uint32_t offset, int dump_len)\n{\n    uint8_t *ptr = (uint8_t *)(addr + offset);\n\n    int data_per_line = 16;\n\n    for (int i = 0; i &lt; dump_len; i++) {\n\n        if (i != 0 &amp;&amp; i % data_per_line == 0) {\n            printf(\"\\n\");\n        }\n        if (i % data_per_line == 0) {\n            printf(\"%08x\", (uint32_t)(addr + offset));\n            offset += sizeof(*ptr) * data_per_line;\n        }\n\n        if (i % 8)\n            printf(\" %02x\", *ptr++);\n        else\n            printf(\"  %02x\", *ptr++);\n    }\n\n    puts(\"\\n\");\n\n    return 0;\n}\n\n/*\n * Allwinner A10/A20 SoCs were using pins PC0,PC1,PC2,PC23 for booting\n * from SPI Flash, everything else is using pins PC0,PC1,PC2,PC3.\n * The H6 uses PC0, PC2, PC3, PC5, the H616 PC0, PC2, PC3, PC4.\n */\nstatic void spi0_pinmux_setup(unsigned int pin_function)\n{\n    /* All chips use PC0 and PC2. */\n    sunxi_gpio_set_cfgpin(SUNXI_GPC(0), pin_function);\n    sunxi_gpio_set_cfgpin(SUNXI_GPC(2), pin_function);\n\n    /* All chips except H6 and H616 use PC1. */\n    if (!IS_ENABLED(CONFIG_SUN50I_GEN_H6))\n        sunxi_gpio_set_cfgpin(SUNXI_GPC(1), pin_function);\n\n    if (IS_ENABLED(CONFIG_MACH_SUN50I_H6))\n        sunxi_gpio_set_cfgpin(SUNXI_GPC(5), pin_function);\n    if (IS_ENABLED(CONFIG_MACH_SUN50I_H616))\n        sunxi_gpio_set_cfgpin(SUNXI_GPC(4), pin_function);\n\n    /* Older generations use PC23 for CS, newer ones use PC3. */\n    if (IS_ENABLED(CONFIG_MACH_SUN4I) || IS_ENABLED(CONFIG_MACH_SUN7I) ||\n        IS_ENABLED(CONFIG_MACH_SUN8I_R40))\n        sunxi_gpio_set_cfgpin(SUNXI_GPC(23), pin_function);\n    else\n        sunxi_gpio_set_cfgpin(SUNXI_GPC(3), pin_function);\n}\n\nstatic bool is_sun6i_gen_spi(void)\n{\n    return IS_ENABLED(CONFIG_SUNXI_GEN_SUN6I) ||\n           IS_ENABLED(CONFIG_SUN50I_GEN_H6);\n}\n\nstatic uintptr_t spi0_base_address(void)\n{\n    if (IS_ENABLED(CONFIG_MACH_SUN8I_R40))\n        return 0x01C05000;\n\n    if (IS_ENABLED(CONFIG_SUN50I_GEN_H6))\n        return 0x05010000;\n\n    if (!is_sun6i_gen_spi() ||\n        IS_ENABLED(CONFIG_MACH_SUNIV))\n        return 0x01C05000;\n\n    return 0x01C68000;\n}\n\n/*\n * Setup 6 MHz from OSC24M (because the BROM is doing the same).\n */\nstatic void spi0_enable_clock(void)\n{\n    uintptr_t base = spi0_base_address();\n\n    /* Deassert SPI0 reset on SUN6I */\n    if (IS_ENABLED(CONFIG_SUN50I_GEN_H6))\n        setbits_le32(CCM_H6_SPI_BGR_REG, (1U &lt;&lt; 16) | 0x1);\n    else if (is_sun6i_gen_spi())\n        setbits_le32(SUN6I_BUS_SOFT_RST_REG0,\n                     (1 &lt;&lt; AHB_RESET_SPI0_SHIFT));\n\n    /* Open the SPI0 gate */\n    if (!IS_ENABLED(CONFIG_SUN50I_GEN_H6))\n        setbits_le32(CCM_AHB_GATING0, (1 &lt;&lt; AHB_GATE_OFFSET_SPI0));\n\n    if (IS_ENABLED(CONFIG_MACH_SUNIV)) {\n        /* Divide by 32, clock source is AHB clock 200MHz */\n        writel(SPI0_CLK_DIV_BY_64, base + SUN6I_SPI0_CCTL);\n    } else {\n        /* Divide by 4 */\n        writel(SPI0_CLK_DIV_BY_4, base + (is_sun6i_gen_spi() ?\n                                          SUN6I_SPI0_CCTL : SUN4I_SPI0_CCTL));\n        /* 24MHz from OSC24M */\n        writel((1 &lt;&lt; 31), CCM_SPI0_CLK);\n    }\n\n    if (is_sun6i_gen_spi()) {\n        /* Enable SPI in the master mode and do a soft reset */\n        setbits_le32(base + SUN6I_SPI0_GCR, SUN6I_CTL_MASTER |\n                     SUN6I_CTL_ENABLE | SUN6I_CTL_SRST);\n        /* Wait for completion */\n        while (readl(base + SUN6I_SPI0_GCR) &amp; SUN6I_CTL_SRST)\n            ;\n    } else {\n        /* Enable SPI in the master mode and reset FIFO */\n        setbits_le32(base + SUN4I_SPI0_CTL, SUN4I_CTL_MASTER |\n                     SUN4I_CTL_ENABLE |\n                     SUN4I_CTL_TF_RST |\n                     SUN4I_CTL_RF_RST);\n    }\n}\n\nstatic void spi0_disable_clock(void)\n{\n    uintptr_t base = spi0_base_address();\n\n    /* Disable the SPI0 controller */\n    if (is_sun6i_gen_spi())\n        clrbits_le32(base + SUN6I_SPI0_GCR, SUN6I_CTL_MASTER |\n                     SUN6I_CTL_ENABLE);\n    else\n        clrbits_le32(base + SUN4I_SPI0_CTL, SUN4I_CTL_MASTER |\n                     SUN4I_CTL_ENABLE);\n\n    /* Disable the SPI0 clock */\n    if (!IS_ENABLED(CONFIG_MACH_SUNIV))\n        writel(0, CCM_SPI0_CLK);\n\n    /* Close the SPI0 gate */\n    if (!IS_ENABLED(CONFIG_SUN50I_GEN_H6))\n        clrbits_le32(CCM_AHB_GATING0, (1 &lt;&lt; AHB_GATE_OFFSET_SPI0));\n\n    /* Assert SPI0 reset on SUN6I */\n    if (IS_ENABLED(CONFIG_SUN50I_GEN_H6))\n        clrbits_le32(CCM_H6_SPI_BGR_REG, (1U &lt;&lt; 16) | 0x1);\n    else if (is_sun6i_gen_spi())\n        clrbits_le32(SUN6I_BUS_SOFT_RST_REG0,\n                     (1 &lt;&lt; AHB_RESET_SPI0_SHIFT));\n}\n\nstatic void spi0_init(struct sunxi_spi *spi)\n{\n    unsigned int pin_function = SUNXI_GPC_SPI0;\n\n    if (IS_ENABLED(CONFIG_MACH_SUN50I) ||\n        IS_ENABLED(CONFIG_SUN50I_GEN_H6))\n        pin_function = SUN50I_GPC_SPI0;\n    else if (IS_ENABLED(CONFIG_MACH_SUNIV))\n        pin_function = SUNIV_GPC_SPI0;\n\n    spi0_pinmux_setup(pin_function);\n    spi0_enable_clock();\n\n    spi-&gt;base = spi0_base_address();\n    spi-&gt;is_sun6i = is_sun6i_gen_spi();\n    spi-&gt;fifo_depth = SPI_READ_MAX_SIZE;\n\n    if (spi-&gt;is_sun6i) {\n        spi-&gt;reg_offsets = &amp;sun6i_spi_reg_offsets;\n        spi-&gt;spi_ctl_xch_bitmask = SUN6I_TCR_XCH;\n    } else {\n        spi-&gt;reg_offsets = &amp;sun4i_spi_reg_offsets;\n        spi-&gt;spi_ctl_xch_bitmask = SUN4I_CTL_XCH;\n    }\n\n    /* TODO: initialize SPI with specified mode */\n}\n\nstatic void spi0_deinit(struct sunxi_spi *spi)\n{\n    /* New SoCs can disable pins, older could only set them as input */\n    unsigned int pin_function = SUNXI_GPIO_INPUT;\n\n    if (is_sun6i_gen_spi())\n        pin_function = SUNXI_GPIO_DISABLE;\n\n    spi0_disable_clock();\n    spi0_pinmux_setup(pin_function);\n}\n\nstatic ssize_t spi0_write_then_read(struct sunxi_spi *spi,\n                                    const void *txbuf, u32 n_tx,\n                                    void *rxbuf, u32 n_rx,\n                                    unsigned delay)\n{\n    int      i;\n    int      timeout    = 10;\n    unsigned real_delay = 200;\n    ssize_t  len        = 0;\n    ssize_t  skip_bytes = 0;\n    u8       *txbuf8 = (u8 *)txbuf;\n    u8       *rxbuf8 = (u8 *)rxbuf;\n\n    ulong spi_bc_reg   = to_sunxi_spi_reg(spi, bc_reg);\n    ulong spi_tc_reg   = to_sunxi_spi_reg(spi, tc_reg);\n    ulong spi_bcc_reg  = to_sunxi_spi_reg(spi, bcc_reg);\n    ulong spi_rx_reg   = to_sunxi_spi_reg(spi, rx_reg);\n    ulong spi_tx_reg   = to_sunxi_spi_reg(spi, tx_reg);\n    ulong spi_ctl_reg  = to_sunxi_spi_reg(spi, ctl_reg);\n    ulong spi_fifo_reg = to_sunxi_spi_reg(spi, fifo_reg);\n\n    if (delay &gt; 0)\n        real_delay = delay;\n\n    /* Burst counter (total bytes) */\n    writel(n_tx + n_rx, spi_bc_reg);\n    /* Transfer counter (bytes to send) */\n    writel(n_tx, spi_tc_reg);\n\n    if (spi-&gt;is_sun6i)\n        writel(n_tx, spi_bcc_reg);\n\n    for (i = 0; i &lt; n_tx; i++)\n        writeb((u8)txbuf8[i], spi_tx_reg);\n\n    /* Start the data transfer */\n    setbits_le32(spi_ctl_reg, spi-&gt;spi_ctl_xch_bitmask);\n    udelay(real_delay);\n\n    /* Wait until everything is received in the RX FIFO */\n    for (;;) {\n        if ((readl(spi_fifo_reg) &amp; 0x0f) == (n_rx - 1))\n            break;\n\n        if (timeout-- &lt; 0)\n            break;\n    }\n\n    /* Skip bytes */\n    for (skip_bytes = n_tx; skip_bytes--;)\n        readb(spi_rx_reg);\n\n    /* if only need to be write */\n    if (n_rx &lt;= 0)\n        return 0;\n\n    while (n_rx-- &gt; 0) {\n        len++;\n        *rxbuf8++ = readb(spi_rx_reg);\n    }\n\n    return (len == n_rx) ? -1 : len;\n}\n\nstatic inline u32 spi_nand_read_id(struct sunxi_spi *spi)\n{\n    u8 cmds[] = {0x9f, 0x00};\n    u32     result;\n    ssize_t status;\n\n    status = spi0_write_then_read(spi, cmds, sizeof(cmds), &amp;result, 3, 0);\n    result = cpu_to_be32(result) &gt;&gt; 8;\n\n    return (status &lt; 0) ? status : result;\n}\n\nstatic inline u8\nspi_nand_read_status_reg(struct sunxi_spi *spi, u8 reg_addr)\n{\n    u8 result = {0};\n    u8 txbuf[] = { 0x0f, reg_addr };\n    ssize_t status;\n\n\n    status =  spi0_write_then_read(spi, txbuf, sizeof(txbuf),\n                                   &amp;result, sizeof(result), 0);\n\n    return (status &lt; 0) ? status : result;\n}\n\nstatic inline ssize_t\nspi_nand_write_status_reg(struct sunxi_spi *spi, u8 reg_addr, u8 reg_val)\n{\n    u8 txbuf[] = { 0x1f, reg_addr, reg_val };\n\n    return spi0_write_then_read(spi, txbuf, sizeof(txbuf),\n                                NULL, 0, 0);\n}\n\nstatic inline int spi_nand_init(struct sunxi_spi *spi)\n{\n    puts(\"loading payload from SPI NAND ...\\n\");\n\n    u32 id = spi_nand_read_id(spi);\n    printf(\"detected JEDEC ID : 0x%08x\\n\", id);\n\n    if (id == 0x00efaa21) {\n        spi-&gt;nand_dev.name = \"w25n01g\";\n        spi-&gt;nand_dev.page_size = (1 &lt;&lt; 11);    /* 2048 */\n        spi-&gt;nand_dev.block_size = (1 &lt;&lt; 17);   /* 128KB */\n    } else {\n        puts(\"###### NAND Device Not supported yet! #####\\n\");\n        hang();\n    }\n\n    /* in the beginning, there's no page was loaded into cache */\n    spi-&gt;nand_dev.page = -1;\n\n    /* set spinand into continuous read mode */\n    u8 stat2 = spi_nand_read_status_reg(spi, 0xb0);\n\n    stat2 |= (1 &lt;&lt; 4) | (1 &lt;&lt; 3);  /* bit BUF = 1, ECC-E = 1 */\n    spi_nand_write_status_reg(spi, 0xb0, stat2);\n\n    return 0;\n}\n\nstatic ssize_t\nspi_nand_load_page_op(struct sunxi_spi *spi, unsigned page)\n{\n    u8 txbuf[] = {\n        SPI_NAND_RD_PAGE_DATA,\n        0x00,   /* dummy clock */\n        (u8)(page &gt;&gt; 8),\n        (u8)(page),\n    };\n    return spi0_write_then_read(spi, txbuf, sizeof(txbuf),\n                                NULL, 0, 500);\n}\n\nstatic ssize_t\nspi_nand_read_from_cache_op(struct sunxi_spi *spi, unsigned column,\n                            void *rxbuf, size_t len)\n{\n    u8 txbuf[] = {\n        SPI_NAND_RD_DATA,\n        (u8)(column &gt;&gt; 8),\n        (u8)(column),\n        0x00,   /* dummy clock */\n    };\n\n    return spi0_write_then_read(spi, txbuf, sizeof(txbuf), rxbuf, len, 0);\n}\n\nstatic int sunxi_spi0_nand_read_data(struct sunxi_spi *spi, void *buf, u32 addr, u32 len)\n{\n    ssize_t status;\n    unsigned page = addr &gt;&gt; 11;\n\n    /* load page to data buffer */\n    if (spi-&gt;nand_dev.page != page) {\n        spi-&gt;nand_dev.page = page;\n\n        spi_nand_load_page_op(spi, page);\n    }\n\n    /*\n     * the check the addr, make sure it's in data buffer\n     * usually be used to load the endless of the page\n     */\n    addr &amp;= 0x7FF;\n    if (len + addr &gt; spi-&gt;nand_dev.page_size)\n        len = spi-&gt;nand_dev.page_size - addr;\n\n    status = spi_nand_read_from_cache_op(spi, addr, buf, len);\n    return status;\n}\n\nstatic int spi0_nand_read_data(struct sunxi_spi *spi, void *buf, u32 addr, u32 len)\n{\n    u8 *buf8 = buf;\n    u32 chunk_len;\n\n    size_t loop_count = 0;\n\n    while (len &gt; 0) {\n        chunk_len = len;\n        if (chunk_len &gt; SPI_READ_MAX_SIZE)\n            chunk_len = SPI_READ_MAX_SIZE;\n\n        sunxi_spi0_nand_read_data(spi, buf8, addr, chunk_len);\n        len  -= chunk_len;\n        buf8 += chunk_len;\n        addr += chunk_len;\n\n        loop_count++;\n    }\n\n    return 0;\n}\n\nstatic int spl_spi_nand_load_image(struct spl_image_info *spl_image,\n                              struct spl_boot_device *bootdev)\n{\n    int ret = 0;\n    struct legacy_img_hdr *header;\n    uint32_t load_offset = sunxi_get_spl_size();\n\n    header = (struct legacy_img_hdr *)CONFIG_TEXT_BASE;\n    load_offset = max_t(uint32_t, load_offset, CONFIG_SYS_SPI_U_BOOT_OFFS);\n\n    struct sunxi_spi *spi = (struct sunxi_spi *)malloc(sizeof(struct sunxi_spi));\n\n    spi0_init(spi);\n    spi_nand_init(spi);\n\n    spi0_nand_read_data(spi, (void *)header, load_offset, 0x40);\n\n    if (IS_ENABLED(CONFIG_SPL_LOAD_FIT) &amp;&amp;\n        image_get_magic(header) == FDT_MAGIC) {\n        debug(\"Not supported FIT image yet!\\n\");\n    } else {\n        ret = spl_parse_image_header(spl_image, bootdev, header);\n        if (ret)\n            return ret;\n\n        spi0_nand_read_data(spi, (void *)spl_image-&gt;load_addr,\n                            load_offset, spl_image-&gt;size);\n    }\n\n    spi0_deinit(spi);\n\n    return ret;\n}\n\n/* Use priorty 0 to override the default if it happens to be linked in */\nSPL_LOAD_IMAGE_METHOD(\"sunxi SPI-NAND\", 0, BOOT_DEVICE_NAND, spl_spi_nand_load_image);\n</code></pre> \u7ecf\u8fc7\u8be5\u5b8f\uff0c\u6211\u4eec\u7684\u52a0\u8f7d\u51fd\u6570\u6700\u7ec8\u4f1a\u88ab\u8c03\u7528\uff0c\u4e3b\u8981\u8d23\u4efb\u5c31\u662f\u5c06uboot\u52a0\u8f7d\u5230 <code>entry_point</code>\u5904\u7684\u5730\u5740</p> <p>\u6709\u5173\u8bfb\u5668\u4ef6\u7684\u7ec6\u8282\uff0c\u4ee5\u53ca\u5e73\u53f0SPI\u7684\u901a\u4fe1\uff0c\u6211\u60f3\u5e94\u8be5\u6ca1\u592a\u591a\u4eba\u611f\u5174\u8da3\uff0c\u4e5f\u4e0d\u662f\u672c\u6587\u91cd\u70b9\uff0c\u6240\u4ee5\u653e\u5230\u6587\u7ae0\u672b\u5c3e<code>\u66f4\u591a</code>\u7ae0\u8282\u4e2d\u5427</p>"},{"location":"software/uboot/spl_image_loader/#_6","title":"\u4f18\u5316\u601d\u8def","text":"<p>\u6240\u4ee5\u8fd9\u4e2a\u542f\u52a8\u6d41\u7a0b\u8fd8\u662f\u6709\u5f88\u591a\u4f18\u5316\u7a7a\u95f4\u7684\uff0c\u6bd4\u5982\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206</p> <ol> <li>SPI\u7684\u65f6\u949f\u3002\u6211\u53ea\u7ed9\u4e86SPI 3MHz\u7684\u901f\u7387\uff0c\u8ddfBootROM\u4e2d\u7684\u4e00\u81f4\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bd5\u7740\u63d0\u9ad8\u4e0b\u8fd9\u4e2a\u901f\u5ea6\uff0c\u4e5f\u8bb8\u4f1a\u8bfb\u7684\u66f4\u5feb</li> <li>uboot \u8bbe\u5907\u6811\u91cc spi\u8282\u70b9\u8bbe\u7f6e\u7684\u901f\u5ea6\uff0c\u4e5f\u4f1a\u5f71\u54cd\u8bfbflash\u7684\u901f\u5ea6</li> <li>\u7a0b\u5e8f\u91cc\u53ef\u80fd\u6709\u4e9b\u6ca1\u5fc5\u8981\u7684\u73af\u8282\uff0c\u53ef\u4ee5\u4f18\u5316\u6389</li> <li>\u5982\u679c\u7a7a\u95f4\u8db3\u591f\u5927\uff0c\u5c31\u4e0d\u8981\u538b\u7f29\u56fa\u4ef6\u4e86\uff0c\u89e3\u538b\u4e5f\u4f1a\u6d88\u8017\u6389\u4e00\u90e8\u5206\u65f6\u95f4\uff0c\u4f46\u4e0d\u4f1a\u592a\u591a</li> <li>\u6682\u65f6\u6ca1\u60f3\u5230\uff0c\u4ee5\u540e\u518d\u8bf4\u5427</li> </ol>"},{"location":"software/uboot/spl_image_loader/#_7","title":"\u57fa\u51c6\u6d4b\u8bd5","text":""},{"location":"software/uboot/spl_image_loader/#spi","title":"SPI\u901f\u7387","text":"<p>SPI\u7684\u7236\u65f6\u949f\u6765\u81ea\u4e8e200MHz\u7684AHB\u603b\u7ebf\uff0c\u53ef\u901a\u8fc7\u8c03\u6574\u5206\u9891\u7cfb\u6570\u6765\u63a7\u5236SPI\u63a7\u5236\u5668\u7684\u4e3b\u65f6\u949f </p> <p>\u6211\u4eec\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u7edf\u8ba1\u8017\u65f6 <pre><code>#define TIMER_CLOCK     (24 * 1000 * 1000)\n#define TICKS_PER_HZ        (TIMER_CLOCK / CONFIG_SYS_HZ)\n#define TICKS_TO_HZ(x)      ((x) / TICKS_PER_HZ)\nunsigned long ts = get_timer(0);\nunsigned long te = get_timer(0);\n\nprintk(\"cost : %ld (tick), %ld (ms)\", te - ts, TICKS_TO_HZ((te - ts) * 1000));\n</code></pre> | \u5206\u9891 | \u901f\u7387 | \u8017\u65f6 | | --- | --- | --- | | DIV_64 | 3MHz  | cost : 1918 (tick), 79 (ms) | | DIV_32 | 6MHz  | cost : 1918 (tick), 79 (ms) | | DIV_4 | 50MHz  | cost : 1918 (tick), 79 (ms) |</p> <p>\u7ed3\u8bba\uff0cSPI\u901f\u7387\u5bf9spl\u52a0\u8f7duboot\u65e0\u592a\u5927\u5f71\u54cd\uff0c\u5fae\u4e4e\u5176\u5fae\u3002</p>"},{"location":"software/uboot/spl_image_loader/#_8","title":"\u66f4\u591a","text":"<p>W25N01G normal \u8bfb\u6a21\u5f0f\u4e0b\uff0c\u9700\u8981\u5148\u5c06page\u52a0\u8f7d\u5230\u5668\u4ef6\u5185\u90e8data buffer\uff0c\u7136\u540e\u518d\u53d1\u9001\u8bfb\u6307\u4ee4\uff0c\u4ecedata buffer\u4e2d\u83b7\u53d6\u6570\u636e\u3002 \u7136\u540e\u52a0\u8f7d\u4e0b\u4e00\u9875\uff0c\u53cd\u590d\u3002\u8fd8\u6709\u4e00\u79cd\u8fde\u7eed\u8bfb\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u51fa\u6574\u4e2apage\uff0c\u4f46\u662f\u8fd9\u4e2a\u7247\u5b50\u7684SPI RX FIFO\u6ca1\u6709\u90a3\u4e48\u5927\u3002 <pre><code>static ssize_t spi0_write_then_read(struct sunxi_spi *spi,\n                                    const void *txbuf, u32 n_tx,\n                                    void *rxbuf, u32 n_rx,\n                                    unsigned delay)\n{\n    int      i;\n    int      timeout    = 10;\n    unsigned real_delay = 200;\n    ssize_t  len        = 0;\n    ssize_t  skip_bytes = 0;\n    u8       *txbuf8 = (u8 *)txbuf;\n    u8       *rxbuf8 = (u8 *)rxbuf;\n\n    ulong spi_bc_reg   = to_sunxi_spi_reg(spi, bc_reg);\n    ulong spi_tc_reg   = to_sunxi_spi_reg(spi, tc_reg);\n    ulong spi_bcc_reg  = to_sunxi_spi_reg(spi, bcc_reg);\n    ulong spi_rx_reg   = to_sunxi_spi_reg(spi, rx_reg);\n    ulong spi_tx_reg   = to_sunxi_spi_reg(spi, tx_reg);\n    ulong spi_ctl_reg  = to_sunxi_spi_reg(spi, ctl_reg);\n    ulong spi_fifo_reg = to_sunxi_spi_reg(spi, fifo_reg);\n\n    if (delay &gt; 0)\n        real_delay = delay;\n\n    /* Burst counter (total bytes) */\n    writel(n_tx + n_rx, spi_bc_reg);\n    /* Transfer counter (bytes to send) */\n    writel(n_tx, spi_tc_reg);\n\n    if (spi-&gt;is_sun6i)\n        writel(n_tx, spi_bcc_reg);\n\n    for (i = 0; i &lt; n_tx; i++)\n        writeb((u8)txbuf8[i], spi_tx_reg);\n\n    /* Start the data transfer */\n    setbits_le32(spi_ctl_reg, spi-&gt;spi_ctl_xch_bitmask);\n    udelay(real_delay);\n\n    /* Wait until everything is received in the RX FIFO */\n    for (;;) {\n        if ((readl(spi_fifo_reg) &amp; 0x0f) == (n_rx - 1))\n            break;\n\n        if (timeout-- &lt; 0)\n            break;\n    }\n\n    /* Skip bytes */\n    for (skip_bytes = n_tx; skip_bytes--;)\n        readb(spi_rx_reg);\n\n    /* if only need to be write */\n    if (n_rx &lt;= 0)\n        return 0;\n\n    while (n_rx-- &gt; 0) {\n        len++;\n        *rxbuf8++ = readb(spi_rx_reg);\n    }\n\n    return (len == n_rx) ? -1 : len;\n}\n\nstatic ssize_t\nspi_nand_load_page_op(struct sunxi_spi *spi, unsigned page)\n{\n    u8 txbuf[] = { \n        SPI_NAND_RD_PAGE_DATA,\n        0x00,   /* dummy clock */\n        (u8)(page &gt;&gt; 8), \n        (u8)(page),\n    };  \n    return spi0_write_then_read(spi, txbuf, sizeof(txbuf),\n                                NULL, 0, 500);\n}\n\nstatic ssize_t\nspi_nand_read_from_cache_op(struct sunxi_spi *spi, unsigned column,\n                            void *rxbuf, size_t len)\n{\n    u8 txbuf[] = { \n        SPI_NAND_RD_DATA,\n        (u8)(column &gt;&gt; 8), \n        (u8)(column),\n        0x00,   /* dummy clock */\n    };  \n\n    return spi0_write_then_read(spi, txbuf, sizeof(txbuf), rxbuf, len, 0); \n}     \n</code></pre></p> <p>\u7b2c\u4e00\u6b65\u5c31\u662f\u5f00\u65f6\u949f\u8fd9\u4e9b\u3002\u6bd4\u8f83\u5173\u952e\u7684\u5c31\u662f\u53d1\u9001\u63a5\u6536\uff0c\u4e0b\u9762\u662f\u4e9b\u5bc4\u5b58\u5668\u76f8\u5173\u7684\u64cd\u4f5c</p> <p>SPI_MBC_REG (SPI Burst Counter Register)\u5bc4\u5b58\u5668\uff0c\u91cc\u9762\u5b58\u7684\u662f \uff08\u53d1 + \u6536\uff09\u5b57\u8282\u7684\u603b\u548c <pre><code>    /* Burst counter (total bytes) */\n    writel(n_tx + n_rx, spi_bc_reg);\n</code></pre> SPI_TCR_REG (SPI Transfer Control Register)\uff0c\u8fd9\u91cc\u9762\u9700\u8981\u5b58\u5165\u53d1\u9001\u7684\u5b57\u8282\u6570 <pre><code>    /* Transfer counter (bytes to send) */\n    writel(n_tx, spi_tc_reg);\n</code></pre></p> <p>SPI_BCC_REG (SPI Burst Control Register)\uff0c sun6i\u53d8\u4f53\u8fd8\u8981\u5c06\u53d1\u9001\u5b57\u8282\u6570\u5199\u5165\u8be5\u5bc4\u5b58\u5668 <pre><code>    if (spi-&gt;is_sun6i)\n        writel(n_tx, spi_bcc_reg);\n</code></pre></p> <p>SPI_TXD_REG (SPI TX Data Register)\uff0c \u5c06\u8981\u53d1\u9001\u7684\u5b57\u8282\u4f9d\u6b21\u5199\u5165\u8be5\u5bc4\u5b58\u5668\u3002\u6570\u91cf\u4e0d\u5e94\u8d85\u8fc7fifo\u957f\u5ea6\u3002 <pre><code>    for (i = 0; i &lt; n_tx; i++)\n        writeb((u8)txbuf8[i], spi_tx_reg);\n</code></pre></p> <p>SPI_TCR_REG (SPI Transfer Control Register)\uff0c\u901a\u8fc7\u7f6e\u4f4d\u8be5\u5bc4\u5b58\u5668\u7684\u7b2c31\u4f4d\uff0c\u89e6\u53d1\u4f20\u8f93\u6d41\u7a0b </p> <pre><code>    /* Start the data transfer */\n    setbits_le32(spi_ctl_reg, spi-&gt;spi_ctl_xch_bitmask);\n    udelay(real_delay);\n</code></pre> <p>SPI_FSR_REG (SPI FIFO Status Register)\uff0c\u8be5\u5bc4\u5b58\u5668\u4f4e8\u4f4d\u8868\u793aRX FIFO\u4e2d\u63a5\u6536\u7684\u5b57\u8282\u6570\uff0c\u6700\u592764 bytes <pre><code>    /* Wait until everything is received in the RX FIFO */\n    for (;;) {\n        if ((readl(spi_fifo_reg) &amp; 0xff) == (n_rx - 1))\n            break;\n\n        if (timeout-- &lt; 0)\n            break;\n    }\n</code></pre></p> <p>\u56e0\u4e3a\u63a7\u5236\u5668\u5185\u90e8\u539f\u56e0\uff0c\u9700\u8981\u8df3\u8fc7\u4e00\u90e8\u5206RX\u5bc4\u5b58\u5668\u4e2d\u7684\u65e0\u6548\u503c\u3002 <pre><code>    /* Skip bytes */                                                                                                                                                         \n    for (skip_bytes = n_tx; skip_bytes--;)\n        readb(spi_rx_reg);\n</code></pre></p>"},{"location":"software/uboot/spl_image_loader/#w25n01g","title":"W25N01G\u7684\u8bfb\u64cd\u4f5c\u6d41\u7a0b","text":""},{"location":"software/uboot/spl_image_loader/#f1c100s-spi","title":"\u5168\u5fd7 F1C100s SPI\u88f8\u673a\u901a\u4fe1\u7684","text":""},{"location":"software/uboot/spl_image_loader/#_9","title":"\u53c2\u8003\u8d44\u6599   embeddedboys \u732e\u4e0a","text":"<p>F1C100S-BOOTROM\u4e0eSPL\u9636\u6bb5 V3s SPI NAND u-boot @openwrt V3s/S3/f1c100s\u901a\u8fc7USB\u542f\u52a8Linux,\u5e76\u628aSD NAND/TF\u5361\u6302\u8f7d\u4e3aU\u76d8, \u53ef\u4ee5dd\u6216Win32DiskImager\u4efb\u70e7\u5199</p>"},{"location":"en/","title":"Home","text":"Developing... <p><code>Offical site</code> : <code>https://embeddedboys.github.io/NINJAR-lite</code></p> <p><code>Project Repo</code> : <code>https://github.com/emmbeddedboys/NINJAR-lite</code></p> <p></p> <p>NINJAR (NINJAR Is Not Just A Reader) </p> <p>As a handheld reader, it goes far beyond that <p>As we demonstrated, it can be used as a mini terminal through an external wireless keyboard</p> <p>Through open-source design materials, the form of this device can be redefined, thanks to its modular design</p> <p>This project is currently in the development stage and we are trying to add more maker features</p> <p><p>NINJAR-lite is a lite version designed based on Allwinner F1C100s</p></p>"},{"location":"en/#demonstration","title":"Demonstration","text":""},{"location":"en/#design","title":"Design","text":"Top View <p><p>\u5668\u4ef6\u4ee5\u5b9e\u7269\u4e3a\u51c6</p></p>"},{"location":"en/#hardware-parameters","title":"Hardware parameters","text":"Part Model System linux\u3001Debian 12 CPU Allwinner F1C100s/F1C200s ARM9 700MHz RAM 32/64MB DDR1 256MHz ROM 128/256MB SPI-Nand Flash Display 1.28 inc 16 level grayscale OLED 128x128 Network ESP8089/RTL8723BS 2.4G WiFi AP (Optional) Location service GP-02 GPS/BDS Module (Optional) Controls Rotary encoder and Button Sensor AHT20 temperature and humidity sensor Battery Li-on 450mAh Charger TP4056 + MOSFET Interface 2x5 Pin Header with I2C1,I2S, SH1.0mm 4Pin I2C0, USB 2.0 OTG"},{"location":"en/#license","title":"License","text":"<p>This project is published under the <code>MIT</code> license. For more detailed information, please refer to <code>About -&gt;License</code></p>"},{"location":"en/#thank","title":"Thank         Present by embeddedboys","text":"<p> Have fun with this. Cheers, Zheng  </p> <p>This document is powered by @mkdocs</p>"},{"location":"en/thanks/","title":"Thank","text":""},{"location":"en/hardware/","title":"Hardware Documentation","text":""},{"location":"en/hardware/#table-of-contents","title":"Table of contents","text":"<ul> <li>Preface</li> <li>Power</li> <li>Display</li> <li>Interacting</li> <li>USB</li> <li>WIFI</li> </ul>"},{"location":"en/hardware/#preface","title":"Preface","text":"<p>These are hardware docs for NINJAR-lite.</p>"},{"location":"en/hardware/#power","title":"Power","text":"<p><code>[ Updating ] DC-DC chip Choosen and Application</code> <code>[ Updating ] \u5173\u65ad\u72b6\u6001\u6f0f\u7535\u7684\u5206\u6790\u4e0e\u5904\u7406</code> </p> <p><code>[ Updating ] \u7535\u6e90\u5f00\u5173\u7684\u8bbe\u8ba1</code> <code>[ Updating ] \u7535\u6e90\u7eb9\u6ce2\u7684\u6d4b\u91cf</code> <code>[ Updating ] \u5404\u79cd\u72b6\u6001\u4e0b\u7684\u529f\u7387\u6d4b\u91cf</code> </p>"},{"location":"en/hardware/#display","title":"Display","text":"<p><code>[ Updating ] A OLED Display based on SSD1327</code> </p>"},{"location":"en/hardware/#interacting","title":"Interacting","text":"<p><code>[ Updating ] \u8f93\u5165\u6309\u952e\u7684\u8bbe\u8ba1\u4e0e\u5904\u7406\u65b9\u6cd5</code> <code>[ Updating ] Rotary encoder on base board</code> </p>"},{"location":"en/hardware/#usb","title":"USB","text":"<p><code>[ Updating ] micro-usb \u5230 TYPE-C \u7684\u8f6c\u6362</code> </p>"},{"location":"en/hardware/#wifi","title":"WIFI","text":"<p><code>[ Updating ] WB89-01 WIFI\u6a21\u5757\u95ee\u9898\u5206\u6790</code> </p>"},{"location":"en/hardware/#connector","title":"Connector","text":""}]}